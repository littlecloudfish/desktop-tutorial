{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nvar _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", null, [/*#__PURE__*/_createCommentVNode(\" {{ currentAudioName || this.audioList[0].name }}\\n      <audio-player\\n        ref=\\\"audioPlayer\\\"\\n        :audio-list=\\\"audioList.map(elm => elm.url)\\\"\\n        :before-play=\\\"handleBeforePlay\\\"\\n        theme-color=\\\"#ffff\\\"\\n      /> \"), /*#__PURE__*/_createCommentVNode(\" {{this.trylist[0]}} \")], -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" <div class=\\\"about\\\">\\n      <h1>Not Found</h1>\\n    </div> \"), _hoisted_1], 2112\n  /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;8BAIIA,oBASM,KATN,EASM,IATN,EASM,cARJC,sQAQI,eADJA,4CACI,CATN;;AAAA;;;6DAHAA,sFAGAC","names":["_createElementVNode","_createCommentVNode","_hoisted_1"],"sourceRoot":"","sources":["/home/little/Documents/music_web/startproj/zhengdao-ui/src/components/function/musicaudio.vue"],"sourcesContent":["<template>\n    <!-- <div class=\"about\">\n      <h1>Not Found</h1>\n    </div> -->\n    <div>\n      <!-- {{ currentAudioName || this.audioList[0].name }}\n      <audio-player\n        ref=\"audioPlayer\"\n        :audio-list=\"audioList.map(elm => elm.url)\"\n        :before-play=\"handleBeforePlay\"\n        theme-color=\"#ffff\"\n      /> -->\n      <!-- {{this.trylist[0]}} -->\n    </div>\n  \n</template>\n <script> \n  import {useStore} from 'vuex'\n  import {inject} from 'vue'\n  import {computed} from 'vue'\n  export default {\n    inject:['musicid'],\n    async setup (){\n        // const foo = inject('musicid')\n        // console.log(inject('musicid'))\n        useStore().dispatch('music/musicinfo', inject('musicid')).then(\n        useStore().getters.music.listofmusicinfo\n        )\n        // console.log( useStore().getters('music/listofmusicinfo'))\n        // console.log(useStore().getters[music/listofmusicinfo])\n        return{\n            \n            // trylist:[inject('musicid')]\n            // return{\n        //     trylist: computed(()=>store.getters['music/musicinfo'])\n        // }\n        }\n    },\n    data() {\n      return {\n        currentAudioName: '',\n        // musicid: 5,\n        audioList: [\n          {\n            name: 'test',\n            url: \"test\"\n          },\n        ],\n        // audioList:[],\n        // TryList:null,\n        otherList:[],\n        dataready:false,\n      }\n    },\n    // beforeRouteEnter(to, from,next){\n    //     next(vm=>vm.setData())\n    // },\n    methods: {\n      handleBeforePlay(next) {\n        // There are a few things you can do here...\n        this.currentAudioName = this.audioList[this.$refs.audioPlayer.currentPlayIndex].name\n        next() \n      },\n    //   async setData(){\n    //     console.log('callsetdate')\n    //     await  this.$store.dispatch('music/musicinfo',this.musicid);\n    //     this.TryList = await this.$store.getters['music/listofmusicinfo'];\n\n    //   }\n    },\n    async created(){\n        // console.log('injected data '+this.trylist);\n        // await  this.$store.dispatch('music/musicinfo',this.musicid);\n        // console.log(this.$store.getters['music/listofmusicinfo']);\n        // this.TryList = await this.$store.getters['music/listofmusicinfo'];\n        // this.audioList[0] =  {\n        //     name:this.TryList[0].name,\n        //     url:'http://127.0.0.1:1943/enjoymusic/'+this.TryList[0].id ,\n        // };\n        // console.log(this.musicid)\n        // console.log(...mapGetters(['MusicUserid',]))\n        \n      },\n    \n  }\n  </script>"]},"metadata":{},"sourceType":"module"}