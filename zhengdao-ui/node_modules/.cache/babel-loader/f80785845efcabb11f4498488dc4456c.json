{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.every.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.includes.js\";\nvar defaultProps = {\n  type: {\n    type: String,\n    \"default\": \"default\"\n  },\n  label: String,\n  className: String,\n  labelClassName: String,\n  property: String,\n  prop: String,\n  width: {\n    type: [String, Number],\n    \"default\": \"\"\n  },\n  minWidth: {\n    type: [String, Number],\n    \"default\": \"\"\n  },\n  renderHeader: Function,\n  sortable: {\n    type: [Boolean, String],\n    \"default\": false\n  },\n  sortMethod: Function,\n  sortBy: [String, Function, Array],\n  resizable: {\n    type: Boolean,\n    \"default\": true\n  },\n  columnKey: String,\n  align: String,\n  headerAlign: String,\n  showTooltipWhenOverflow: Boolean,\n  showOverflowTooltip: Boolean,\n  fixed: [Boolean, String],\n  formatter: Function,\n  selectable: Function,\n  reserveSelection: Boolean,\n  filterMethod: Function,\n  filteredValue: Array,\n  filters: Array,\n  filterPlacement: String,\n  filterMultiple: {\n    type: Boolean,\n    \"default\": true\n  },\n  index: [Number, Function],\n  sortOrders: {\n    type: Array,\n    \"default\": function _default() {\n      return [\"ascending\", \"descending\", null];\n    },\n    validator: function validator(val) {\n      return val.every(function (order) {\n        return [\"ascending\", \"descending\", null].includes(order);\n      });\n    }\n  }\n};\nexport { defaultProps as default };","map":{"version":3,"mappings":";;;;AAAA,mBAAe;EACbA,IAAI,EAAE;IACJA,IAAI,EAAEC,MADF;IAEJ,WAAS;EAFL,CADO;EAKbC,KAAK,EAAED,MALM;EAMbE,SAAS,EAAEF,MANE;EAObG,cAAc,EAAEH,MAPH;EAQbI,QAAQ,EAAEJ,MARG;EASbK,IAAI,EAAEL,MATO;EAUbM,KAAK,EAAE;IACLP,IAAI,EAAE,CAACC,MAAD,EAASO,MAAT,CADD;IAEL,WAAS;EAFJ,CAVM;EAcbC,QAAQ,EAAE;IACRT,IAAI,EAAE,CAACC,MAAD,EAASO,MAAT,CADE;IAER,WAAS;EAFD,CAdG;EAkBbE,YAAY,EAAEC,QAlBD;EAmBbC,QAAQ,EAAE;IACRZ,IAAI,EAAE,CAACa,OAAD,EAAUZ,MAAV,CADE;IAER,WAAS;EAFD,CAnBG;EAuBba,UAAU,EAAEH,QAvBC;EAwBbI,MAAM,EAAE,CAACd,MAAD,EAASU,QAAT,EAAmBK,KAAnB,CAxBK;EAyBbC,SAAS,EAAE;IACTjB,IAAI,EAAEa,OADG;IAET,WAAS;EAFA,CAzBE;EA6BbK,SAAS,EAAEjB,MA7BE;EA8BbkB,KAAK,EAAElB,MA9BM;EA+BbmB,WAAW,EAAEnB,MA/BA;EAgCboB,uBAAuB,EAAER,OAhCZ;EAiCbS,mBAAmB,EAAET,OAjCR;EAkCbU,KAAK,EAAE,CAACV,OAAD,EAAUZ,MAAV,CAlCM;EAmCbuB,SAAS,EAAEb,QAnCE;EAoCbc,UAAU,EAAEd,QApCC;EAqCbe,gBAAgB,EAAEb,OArCL;EAsCbc,YAAY,EAAEhB,QAtCD;EAuCbiB,aAAa,EAAEZ,KAvCF;EAwCba,OAAO,EAAEb,KAxCI;EAyCbc,eAAe,EAAE7B,MAzCJ;EA0Cb8B,cAAc,EAAE;IACd/B,IAAI,EAAEa,OADQ;IAEd,WAAS;EAFK,CA1CH;EA8CbmB,KAAK,EAAE,CAACxB,MAAD,EAASG,QAAT,CA9CM;EA+CbsB,UAAU,EAAE;IACVjC,IAAI,EAAEgB,KADI;IAEV,WAAS,oBAAM;MACb,OAAO,CAAC,WAAD,EAAc,YAAd,EAA4B,IAA5B,CAAP;IACD,CAJS;IAKVkB,SAAS,EAAE,mBAACC,GAAD,EAAS;MAClB,OAAOA,GAAG,CAACC,KAAJ,CAAU,UAACC,KAAD;QAAA,OAAW,CAAC,WAAD,EAAc,YAAd,EAA4B,IAA5B,EAAkCC,QAAlC,CAA2CD,KAA3C,CAAX;MAAA,CAAV,CAAP;IACD;EAPS;AA/CC,CAAf","names":["type","String","label","className","labelClassName","property","prop","width","Number","minWidth","renderHeader","Function","sortable","Boolean","sortMethod","sortBy","Array","resizable","columnKey","align","headerAlign","showTooltipWhenOverflow","showOverflowTooltip","fixed","formatter","selectable","reserveSelection","filterMethod","filteredValue","filters","filterPlacement","filterMultiple","index","sortOrders","validator","val","every","order","includes"],"sources":["../../../../../../../packages/components/table/src/table-column/defaults.ts"],"sourcesContent":["// @ts-nocheck\nimport type { ComponentInternalInstance, PropType, Ref, VNode } from 'vue'\nimport type { DefaultRow, Table } from '../table/defaults'\n\ntype CI<T> = { column: TableColumnCtx<T>; $index: number }\n\ntype Filters = {\n  text: string\n  value: string\n}[]\n\ntype FilterMethods<T> = (value, row: T, column: TableColumnCtx<T>) => void\n\ntype ValueOf<T> = T[keyof T]\n\ninterface TableColumnCtx<T> {\n  id: string\n  realWidth: number\n  type: string\n  label: string\n  className: string\n  labelClassName: string\n  property: string\n  prop: string\n  width: string | number\n  minWidth: string | number\n  renderHeader: (data: CI<T>) => VNode\n  sortable: boolean | string\n  sortMethod: (a: T, b: T) => number\n  sortBy: string | ((row: T, index: number) => string) | string[]\n  resizable: boolean\n  columnKey: string\n  rawColumnKey: string\n  align: string\n  headerAlign: string\n  showTooltipWhenOverflow: boolean\n  showOverflowTooltip: boolean\n  fixed: boolean | string\n  formatter: (\n    row: T,\n    column: TableColumnCtx<T>,\n    cellValue,\n    index: number\n  ) => VNode | string\n  selectable: (row: T, index: number) => boolean\n  reserveSelection: boolean\n  filterMethod: FilterMethods<T>\n  filteredValue: string[]\n  filters: Filters\n  filterPlacement: string\n  filterMultiple: boolean\n  index: number | ((index: number) => number)\n  sortOrders: ('ascending' | 'descending' | null)[]\n  renderCell: (data: any) => void\n  colSpan: number\n  rowSpan: number\n  children: TableColumnCtx<T>[]\n  level: number\n  filterable: boolean | FilterMethods<T> | Filters\n  order: string\n  isColumnGroup: boolean\n  isSubColumn: boolean\n  columns: TableColumnCtx<T>[]\n  getColumnIndex: () => number\n  no: number\n  filterOpened?: boolean\n}\n\ninterface TableColumn<T> extends ComponentInternalInstance {\n  vnode: {\n    vParent: TableColumn<T> | Table<T>\n  } & VNode\n  vParent: TableColumn<T> | Table<T>\n  columnId: string\n  columnConfig: Ref<Partial<TableColumnCtx<T>>>\n}\n\nexport type { Filters, FilterMethods, TableColumnCtx, TableColumn, ValueOf }\n\nexport default {\n  type: {\n    type: String,\n    default: 'default',\n  },\n  label: String,\n  className: String,\n  labelClassName: String,\n  property: String,\n  prop: String,\n  width: {\n    type: [String, Number],\n    default: '',\n  },\n  minWidth: {\n    type: [String, Number],\n    default: '',\n  },\n  renderHeader: Function as PropType<\n    TableColumnCtx<DefaultRow>['renderHeader']\n  >,\n  sortable: {\n    type: [Boolean, String],\n    default: false,\n  },\n  sortMethod: Function as PropType<TableColumnCtx<DefaultRow>['sortMethod']>,\n  sortBy: [String, Function, Array] as PropType<\n    TableColumnCtx<DefaultRow>['sortBy']\n  >,\n  resizable: {\n    type: Boolean,\n    default: true,\n  },\n  columnKey: String,\n  align: String,\n  headerAlign: String,\n  showTooltipWhenOverflow: Boolean,\n  showOverflowTooltip: Boolean,\n  fixed: [Boolean, String],\n  formatter: Function as PropType<TableColumnCtx<DefaultRow>['formatter']>,\n  selectable: Function as PropType<TableColumnCtx<DefaultRow>['selectable']>,\n  reserveSelection: Boolean,\n  filterMethod: Function as PropType<\n    TableColumnCtx<DefaultRow>['filterMethod']\n  >,\n  filteredValue: Array as PropType<TableColumnCtx<DefaultRow>['filteredValue']>,\n  filters: Array as PropType<TableColumnCtx<DefaultRow>['filters']>,\n  filterPlacement: String,\n  filterMultiple: {\n    type: Boolean,\n    default: true,\n  },\n  index: [Number, Function] as PropType<TableColumnCtx<DefaultRow>['index']>,\n  sortOrders: {\n    type: Array as PropType<TableColumnCtx<DefaultRow>['sortOrders']>,\n    default: () => {\n      return ['ascending', 'descending', null]\n    },\n    validator: (val: TableColumnCtx<unknown>['sortOrders']) => {\n      return val.every((order: string) =>\n        ['ascending', 'descending', null].includes(order)\n      )\n    },\n  },\n}\n"]},"metadata":{},"sourceType":"module"}