{"ast":null,"code":"import { StencilPreview, BoundingBox, DraggableArea } from 'vue-advanced-cropper';\nexport default {\n  components: {\n    StencilPreview,\n    BoundingBox,\n    DraggableArea\n  },\n  props: [// Image object\n  'image', // Actual coordinates of the cropped fragment\n  'coordinates', // Stencil size desired by cropper\n  'stencilCoordinates', // Aspect ratios\n  'aspectRatio', 'minAspectRatio', 'maxAspectRatio', // Transitions:\n  'transitions'],\n  computed: {\n    style() {\n      const {\n        height,\n        width,\n        left,\n        top\n      } = this.stencilCoordinates;\n      const style = {\n        position: 'absolute',\n        width: `${width}px`,\n        height: `${height}px`,\n        transform: `translate(${left}px, ${top}px)`\n      };\n\n      if (this.transitions && this.transitions.enabled) {\n        style.transition = `${this.transitions.time}ms ${this.transitions.timingFunction}`;\n      }\n\n      return style;\n    }\n\n  },\n  methods: {\n    onMove(moveEvent) {\n      this.$emit('move', moveEvent);\n    },\n\n    onMoveEnd() {\n      this.$emit('moveEnd');\n    },\n\n    onResize(resizeEvent) {\n      this.$emit('resize', resizeEvent);\n    },\n\n    onResizeEnd() {\n      this.$emit('resizeEnd');\n    },\n\n    aspectRatios() {\n      return {\n        minimum: this.aspectRatio || this.minAspectRatio,\n        maximum: this.aspectRatio || this.maxAspectRatio\n      };\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAiBA,SAASA,cAAT,EAAyBC,WAAzB,EAAsCC,aAAtC,QAA2D,sBAA3D;AAEA,eAAe;EACdC,UAAU,EAAE;IACXH,cADW;IAEXC,WAFW;IAGXC;EAHW,CADE;EAMdE,KAAK,EAAE,CACN;EACA,OAFM,EAGN;EACA,aAJM,EAKN;EACA,oBANM,EAON;EACA,aARM,EASN,gBATM,EAUN,gBAVM,EAWN;EACA,aAZM,CANO;EAoBdC,QAAQ,EAAE;IACTC,KAAK,GAAG;MACP,MAAM;QAAEC,MAAF;QAAUC,KAAV;QAAiBC,IAAjB;QAAuBC;MAAvB,IAA+B,KAAKC,kBAA1C;MACA,MAAML,KAAI,GAAI;QACbM,QAAQ,EAAE,UADG;QAEbJ,KAAK,EAAG,GAAEA,KAAM,IAFH;QAGbD,MAAM,EAAG,GAAEA,MAAO,IAHL;QAIbM,SAAS,EAAG,aAAYJ,IAAK,OAAMC,GAAI;MAJ1B,CAAd;;MAMA,IAAI,KAAKI,WAAL,IAAoB,KAAKA,WAAL,CAAiBC,OAAzC,EAAkD;QACjDT,KAAK,CAACU,UAAN,GAAoB,GAAE,KAAKF,WAAL,CAAiBG,IAAK,MAAK,KAAKH,WAAL,CAAiBI,cAAe,EAAjF;MACD;;MACA,OAAOZ,KAAP;IACA;;EAbQ,CApBI;EAmCda,OAAO,EAAE;IACRC,MAAM,CAACC,SAAD,EAAY;MACjB,KAAKC,KAAL,CAAW,MAAX,EAAmBD,SAAnB;IACA,CAHO;;IAIRE,SAAS,GAAG;MACX,KAAKD,KAAL,CAAW,SAAX;IACA,CANO;;IAORE,QAAQ,CAACC,WAAD,EAAc;MACrB,KAAKH,KAAL,CAAW,QAAX,EAAqBG,WAArB;IACA,CATO;;IAURC,WAAW,GAAG;MACb,KAAKJ,KAAL,CAAW,WAAX;IACA,CAZO;;IAaRK,YAAY,GAAG;MACd,OAAO;QACNC,OAAO,EAAE,KAAKC,WAAL,IAAoB,KAAKC,cAD5B;QAENC,OAAO,EAAE,KAAKF,WAAL,IAAoB,KAAKG;MAF5B,CAAP;IAIA;;EAlBO;AAnCK,CAAf","names":["StencilPreview","BoundingBox","DraggableArea","components","props","computed","style","height","width","left","top","stencilCoordinates","position","transform","transitions","enabled","transition","time","timingFunction","methods","onMove","moveEvent","$emit","onMoveEnd","onResize","resizeEvent","onResizeEnd","aspectRatios","minimum","aspectRatio","minAspectRatio","maximum","maxAspectRatio"],"sourceRoot":"","sources":["/home/little/Documents/music_web/startproj/zhengdao-ui/src/views/Music/MusicSearch.vue"],"sourcesContent":["<template>\n\t<div :style=\"style\">\n\t\t<bounding-box @resize=\"onResize\" @resize-end=\"onMoveEnd\">\n\t\t\t<draggable-area @move=\"onMove\" @move-end=\"onMoveEnd\">\n\t\t\t\t<stencil-preview\n\t\t\t\t\t:image=\"image\"\n\t\t\t\t\t:width=\"stencilCoordinates.width\"\n\t\t\t\t\t:height=\"stencilCoordinates.height\"\n\t\t\t\t\t:coordinates=\"coordinates\"\n\t\t\t\t\t:transitions=\"transitions\"\n\t\t\t\t/>\n\t\t\t</draggable-area>\n\t\t</bounding-box>\n\t</div>\n</template>\n\n<script>\nimport { StencilPreview, BoundingBox, DraggableArea } from 'vue-advanced-cropper';\n\nexport default {\n\tcomponents: {\n\t\tStencilPreview,\n\t\tBoundingBox,\n\t\tDraggableArea,\n\t},\n\tprops: [\n\t\t// Image object\n\t\t'image',\n\t\t// Actual coordinates of the cropped fragment\n\t\t'coordinates',\n\t\t// Stencil size desired by cropper\n\t\t'stencilCoordinates',\n\t\t// Aspect ratios\n\t\t'aspectRatio',\n\t\t'minAspectRatio',\n\t\t'maxAspectRatio',\n\t\t// Transitions:\n\t\t'transitions'\n\t],\n\tcomputed: {\n\t\tstyle() {\n\t\t\tconst { height, width, left, top } = this.stencilCoordinates;\n\t\t\tconst style = {\n\t\t\t\tposition: 'absolute',\n\t\t\t\twidth: `${width}px`,\n\t\t\t\theight: `${height}px`,\n\t\t\t\ttransform: `translate(${left}px, ${top}px)`,\n\t\t\t};\n\t\t\tif (this.transitions && this.transitions.enabled) {\n\t\t\t\tstyle.transition = `${this.transitions.time}ms ${this.transitions.timingFunction}`;\n\t\t\t}\n\t\t\treturn style;\n\t\t},\n\t},\n\tmethods: {\n\t\tonMove(moveEvent) {\n\t\t\tthis.$emit('move', moveEvent);\n\t\t},\n\t\tonMoveEnd() {\n\t\t\tthis.$emit('moveEnd');\n\t\t},\n\t\tonResize(resizeEvent) {\n\t\t\tthis.$emit('resize', resizeEvent);\n\t\t},\n\t\tonResizeEnd() {\n\t\t\tthis.$emit('resizeEnd');\n\t\t},\n\t\taspectRatios() {\n\t\t\treturn {\n\t\t\t\tminimum: this.aspectRatio || this.minAspectRatio,\n\t\t\t\tmaximum: this.aspectRatio || this.maxAspectRatio,\n\t\t\t};\n\t\t},\n\t},\n};\n</script>\n\n"]},"metadata":{},"sourceType":"module"}