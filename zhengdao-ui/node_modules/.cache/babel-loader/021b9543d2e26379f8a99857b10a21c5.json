{"ast":null,"code":"import _objectSpread from \"/home/little/Documents/music_web/startproj/zhengdao-ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _defineProperty from \"/home/little/Documents/music_web/startproj/zhengdao-ui/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport { isVNode, createVNode, mergeProps } from 'vue';\nimport '../components/index.mjs';\nimport { tryCall } from '../utils.mjs';\nimport TableV2Row from '../components/row.mjs';\n\nfunction _isSlot(s) {\n  return typeof s === \"function\" || Object.prototype.toString.call(s) === \"[object Object]\" && !isVNode(s);\n}\n\nvar RowRenderer = function RowRenderer(props, _ref) {\n  var _ref2;\n\n  var slots = _ref.slots;\n  var columns = props.columns,\n      columnsStyles = props.columnsStyles,\n      depthMap = props.depthMap,\n      expandColumnKey = props.expandColumnKey,\n      expandedRowKeys = props.expandedRowKeys,\n      estimatedRowHeight = props.estimatedRowHeight,\n      hasFixedColumns = props.hasFixedColumns,\n      hoveringRowKey = props.hoveringRowKey,\n      rowData = props.rowData,\n      rowIndex = props.rowIndex,\n      style = props.style,\n      isScrolling = props.isScrolling,\n      rowProps = props.rowProps,\n      rowClass = props.rowClass,\n      rowKey = props.rowKey,\n      rowEventHandlers = props.rowEventHandlers,\n      ns = props.ns,\n      onRowHovered = props.onRowHovered,\n      onRowExpanded = props.onRowExpanded;\n  var rowKls = tryCall(rowClass, {\n    columns: columns,\n    rowData: rowData,\n    rowIndex: rowIndex\n  }, \"\");\n  var additionalProps = tryCall(rowProps, {\n    columns: columns,\n    rowData: rowData,\n    rowIndex: rowIndex\n  });\n  var _rowKey = rowData[rowKey];\n  var depth = depthMap[_rowKey] || 0;\n  var canExpand = Boolean(expandColumnKey);\n  var isFixedRow = rowIndex < 0;\n  var kls = [ns.e(\"row\"), rowKls, (_ref2 = {}, _defineProperty(_ref2, ns.e(\"row-depth-\".concat(depth)), canExpand && rowIndex >= 0), _defineProperty(_ref2, ns.is(\"expanded\"), canExpand && expandedRowKeys.includes(_rowKey)), _defineProperty(_ref2, ns.is(\"hovered\"), !isScrolling && _rowKey === hoveringRowKey), _defineProperty(_ref2, ns.is(\"fixed\"), !depth && isFixedRow), _defineProperty(_ref2, ns.is(\"customized\"), Boolean(slots.row)), _ref2)];\n  var onRowHover = hasFixedColumns ? onRowHovered : void 0;\n\n  var _rowProps = _objectSpread(_objectSpread({}, additionalProps), {}, {\n    columns: columns,\n    columnsStyles: columnsStyles,\n    \"class\": kls,\n    depth: depth,\n    expandColumnKey: expandColumnKey,\n    estimatedRowHeight: isFixedRow ? void 0 : estimatedRowHeight,\n    isScrolling: isScrolling,\n    rowIndex: rowIndex,\n    rowData: rowData,\n    rowKey: _rowKey,\n    rowEventHandlers: rowEventHandlers,\n    style: style\n  });\n\n  return createVNode(TableV2Row, mergeProps(_rowProps, {\n    \"onRowHover\": onRowHover,\n    \"onRowExpand\": onRowExpanded\n  }), _isSlot(slots) ? slots : {\n    \"default\": function _default() {\n      return [slots];\n    }\n  });\n};\n\nexport { RowRenderer as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;oDAkCMA;EAAAA;;EAAAA;EAEFC,IACCC,OADDD,GAEIE,KAFJF,CACCC,OADDD;EAAAA,IAEIG,aAFJH,GAEIE,KAFJF,CAEIG,aAFJH;EAAAA,IAGAC,QAHAD,GAEIE,KAFJF,CAGAC,QAHAD;EAAAA,IAIAG,eAJAH,GAEIE,KAFJF,CAIAG,eAJAH;EAAAA,IAKAI,eALAJ,GAEIE,KAFJF,CAKAI,eALAJ;EAAAA,IAMAK,kBANAL,GAEIE,KAFJF,CAMAK,kBANAL;EAAAA,IAOAM,eAPAN,GAEIE,KAFJF,CAOAM,eAPAN;EAAAA,IAQAO,cARAP,GAEIE,KAFJF,CAQAO,cARAP;EAAAA,IASAQ,OATAR,GAEIE,KAFJF,CASAQ,OATAR;EAAAA,IAUAS,QAVAT,GAEIE,KAFJF,CAUAS,QAVAT;EAAAA,IAWAU,KAXAV,GAEIE,KAFJF,CAWAU,KAXAV;EAAAA,IAYAW,WAZAX,GAEIE,KAFJF,CAYAW,WAZAX;EAAAA,IAaAY,QAbAZ,GAEIE,KAFJF,CAaAY,QAbAZ;EAAAA,IAcAa,QAdAb,GAEIE,KAFJF,CAcAa,QAdAb;EAAAA,IAeAc,MAfAd,GAEIE,KAFJF,CAeAc,MAfAd;EAAAA,IAgBAe,gBAhBAf,GAEIE,KAFJF,CAgBAe,gBAhBAf;EAAAA,IAiBAgB,EAjBAhB,GAEIE,KAFJF,CAiBAgB,EAjBAhB;EAAAA,IAkBAiB,YAlBAjB,GAEIE,KAFJF,CAkBAiB,YAlBAjB;EAAAA,IAmBAkB,aAnBAlB,GAEIE,KAFJF,CAmBAkB,aAnBAlB;EAqBAmB;IAnBIlB,OAAN,EAAMA,OAmBJkB;IAGFT,OAAY,EAAZA,OAHES;IAGiClB,QAAF,EAAEA;EAHjCkB,GAG+B,EAH/BA;EAGmDR;IAA/BV,OAAtB,EAAsBA,OAA+BU;IACrDD,OAAqB,EAArBA,OADqDC;IAEnDV,QADwC,EACxCA;EAFmDU;EAInDA;EAHwC,IAA1CS,8BAA0C;EAK1C,IAAMC,SAAO,GAAUC,wBAAvB;EACA,IAAMF,UAAQhB,WAAQ,IAAtB;EACA,IAAMmB,GAAS,SAAGD,KAAH,GAAWjB,MAAX,sCACfa,GAAMM,CAAN,qBAA2BJ,KAA3B,EADe,EACfG,0BADe,0BAETE,MAAG,UAAHA,CAFS,EAGbF,SADU,IAGVjB,iCALa,0BAMVY,EAAE,CAACQ,EAAHR,CAAkBE,SAAlBF,CANU,EAMQE,gBAAWG,OAAaZ,mBANhC,0BAOVO,EAAE,CAACS,EAAHT,CAAM,OAANA,CAPU,EAOX,UAA8BM,UAPnB,0BAQVN,EAAE,CAACS,EAAHT,CAAM,YAANA,CARU,EAQSI,aAAgBD,CAAOO,GAAvB,CART,UAAf;MAUQD,UAAG,kBAA6B,kBAAN;;EALhC,IAHFE,4CAYAC,eAZA;IAcA7B,OAAe,EAAfA,OAdA;IAgBEA,aAFgB,EAEhBA,aAhBF;IAiBEE,SAHgBsB,GAdlB;IAkBEM,KAAK,EAALA,KAlBF;IAmBEX,eALgB,EAKhBA,eAnBF;IAoBEf,kBANgB,0CAdlB;IAqBEE,wBArBF;IAsBEM,QARgB,EAQhBA,QAtBF;IAuBEF,OATgB,EAShBA,OAvBF;IAwBED,MAVgB,SAdlB;IAyBEM,gBAXgB,EAWhBA,gBAzBF;IA0BEC,KAZgB,EAYhBA;EA1BF,EAGE;;EAWgB,OAAlBe;IAgBA,wBAhBA;IAgBA;EAhBA,IAiB2Db;IACtDnB;MAAAA,OAFL,OAEKA;IAAAA;EADsDmB,CAjB3D,CAAkB;AAgBlB","names":["RowRenderer","slots","columns","props","columnsStyles","depthMap","expandColumnKey","expandedRowKeys","estimatedRowHeight","hasFixedColumns","hoveringRowKey","rowData","rowIndex","style","isScrolling","rowProps","rowClass","rowKey","rowEventHandlers","ns","onRowExpanded","depth","_rowKey","Boolean","canExpand","isFixedRow","kls","e","is","row","_rowProps","additionalProps","class","_createVNode"],"sources":["../../../../../../../packages/components/table-v2/src/renderers/row.tsx"],"sourcesContent":["import { Row } from '../components'\nimport { tryCall } from '../utils'\n\nimport type { FunctionalComponent, UnwrapNestedRefs } from 'vue'\nimport type { UseNamespaceReturn } from '@element-plus/hooks'\nimport type { UseTableReturn } from '../use-table'\nimport type { TableV2Props } from '../table'\nimport type { TableGridRowSlotParams } from '../table-grid'\n\ntype RowRendererProps = TableGridRowSlotParams &\n  Pick<\n    TableV2Props,\n    | 'expandColumnKey'\n    | 'estimatedRowHeight'\n    | 'rowProps'\n    | 'rowClass'\n    | 'rowKey'\n    | 'rowEventHandlers'\n  > &\n  UnwrapNestedRefs<\n    Pick<\n      UseTableReturn,\n      | 'depthMap'\n      | 'expandedRowKeys'\n      | 'hasFixedColumns'\n      | 'hoveringRowKey'\n      | 'onRowHovered'\n      | 'onRowExpanded'\n      | 'columnsStyles'\n    >\n  > & {\n    ns: UseNamespaceReturn\n  }\n\nconst RowRenderer: FunctionalComponent<RowRendererProps> = (\n  props,\n  { slots }\n) => {\n  const {\n    columns,\n    columnsStyles,\n    depthMap,\n    expandColumnKey,\n    expandedRowKeys,\n    estimatedRowHeight,\n    hasFixedColumns,\n    hoveringRowKey,\n    rowData,\n    rowIndex,\n    style,\n    isScrolling,\n    rowProps,\n    rowClass,\n    rowKey,\n    rowEventHandlers,\n    ns,\n    onRowHovered,\n    onRowExpanded,\n  } = props\n\n  const rowKls = tryCall(rowClass, { columns, rowData, rowIndex }, '')\n  const additionalProps = tryCall(rowProps, {\n    columns,\n    rowData,\n    rowIndex,\n  })\n  const _rowKey = rowData[rowKey]\n  const depth = depthMap[_rowKey] || 0\n  const canExpand = Boolean(expandColumnKey)\n  const isFixedRow = rowIndex < 0\n  const kls = [\n    ns.e('row'),\n    rowKls,\n    {\n      [ns.e(`row-depth-${depth}`)]: canExpand && rowIndex >= 0,\n      [ns.is('expanded')]: canExpand && expandedRowKeys.includes(_rowKey),\n      [ns.is('hovered')]: !isScrolling && _rowKey === hoveringRowKey,\n      [ns.is('fixed')]: !depth && isFixedRow,\n      [ns.is('customized')]: Boolean(slots.row),\n    },\n  ]\n\n  const onRowHover = hasFixedColumns ? onRowHovered : undefined\n\n  const _rowProps = {\n    ...additionalProps,\n    columns,\n    columnsStyles,\n    class: kls,\n    depth,\n    expandColumnKey,\n    estimatedRowHeight: isFixedRow ? undefined : estimatedRowHeight,\n    isScrolling,\n    rowIndex,\n    rowData,\n    rowKey: _rowKey,\n    rowEventHandlers,\n    style,\n  }\n\n  return (\n    <Row {..._rowProps} onRowHover={onRowHover} onRowExpand={onRowExpanded}>\n      {slots}\n    </Row>\n  )\n}\n\nexport default RowRenderer\n"]},"metadata":{},"sourceType":"module"}