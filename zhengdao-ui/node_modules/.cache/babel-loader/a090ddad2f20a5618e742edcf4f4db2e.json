{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport '../../../utils/index.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';\nvar progressProps = buildProps({\n  type: {\n    type: String,\n    \"default\": \"line\",\n    values: [\"line\", \"circle\", \"dashboard\"]\n  },\n  percentage: {\n    type: Number,\n    \"default\": 0,\n    validator: function validator(val) {\n      return val >= 0 && val <= 100;\n    }\n  },\n  status: {\n    type: String,\n    \"default\": \"\",\n    values: [\"\", \"success\", \"exception\", \"warning\"]\n  },\n  indeterminate: {\n    type: Boolean,\n    \"default\": false\n  },\n  duration: {\n    type: Number,\n    \"default\": 3\n  },\n  strokeWidth: {\n    type: Number,\n    \"default\": 6\n  },\n  strokeLinecap: {\n    type: definePropType(String),\n    \"default\": \"round\"\n  },\n  textInside: {\n    type: Boolean,\n    \"default\": false\n  },\n  width: {\n    type: Number,\n    \"default\": 126\n  },\n  showText: {\n    type: Boolean,\n    \"default\": true\n  },\n  color: {\n    type: definePropType([String, Array, Function]),\n    \"default\": \"\"\n  },\n  format: {\n    type: definePropType(Function),\n    \"default\": function _default(percentage) {\n      return \"\".concat(percentage, \"%\");\n    }\n  }\n});\nexport { progressProps };","map":{"version":3,"mappings":";;;AACY,IAACA,aAAa,GAAGC,UAAU,CAAC;EACtCC,IAAI,EAAE;IACJA,IAAI,EAAEC,MADF;IAEJ,WAAS,MAFL;IAGJC,MAAM,EAAE,CAAC,MAAD,EAAS,QAAT,EAAmB,WAAnB;EAHJ,CADgC;EAMtCC,UAAU,EAAE;IACVH,IAAI,EAAEI,MADI;IAEV,WAAS,CAFC;IAGVC,SAAS,EAAE,mBAACC,GAAD;MAAA,OAASA,GAAG,IAAI,CAAP,IAAYA,GAAG,IAAI,GAA5B;IAAA;EAHD,CAN0B;EAWtCC,MAAM,EAAE;IACNP,IAAI,EAAEC,MADA;IAEN,WAAS,EAFH;IAGNC,MAAM,EAAE,CAAC,EAAD,EAAK,SAAL,EAAgB,WAAhB,EAA6B,SAA7B;EAHF,CAX8B;EAgBtCM,aAAa,EAAE;IACbR,IAAI,EAAES,OADO;IAEb,WAAS;EAFI,CAhBuB;EAoBtCC,QAAQ,EAAE;IACRV,IAAI,EAAEI,MADE;IAER,WAAS;EAFD,CApB4B;EAwBtCO,WAAW,EAAE;IACXX,IAAI,EAAEI,MADK;IAEX,WAAS;EAFE,CAxByB;EA4BtCQ,aAAa,EAAE;IACbZ,IAAI,EAAEa,cAAc,CAACZ,MAAD,CADP;IAEb,WAAS;EAFI,CA5BuB;EAgCtCa,UAAU,EAAE;IACVd,IAAI,EAAES,OADI;IAEV,WAAS;EAFC,CAhC0B;EAoCtCM,KAAK,EAAE;IACLf,IAAI,EAAEI,MADD;IAEL,WAAS;EAFJ,CApC+B;EAwCtCY,QAAQ,EAAE;IACRhB,IAAI,EAAES,OADE;IAER,WAAS;EAFD,CAxC4B;EA4CtCQ,KAAK,EAAE;IACLjB,IAAI,EAAEa,cAAc,CAAC,CACnBZ,MADmB,EAEnBiB,KAFmB,EAGnBC,QAHmB,CAAD,CADf;IAML,WAAS;EANJ,CA5C+B;EAoDtCC,MAAM,EAAE;IACNpB,IAAI,EAAEa,cAAc,CAACM,QAAD,CADd;IAEN,WAAS,kBAAChB,UAAD;MAAA,iBAAmBA,UAAnB;IAAA;EAFH;AApD8B,CAAD,CAA3B","names":["progressProps","buildProps","type","String","values","percentage","Number","validator","val","status","indeterminate","Boolean","duration","strokeWidth","strokeLinecap","definePropType","textInside","width","showText","color","Array","Function","format"],"sources":["../../../../../../packages/components/progress/src/progress.ts"],"sourcesContent":["import { buildProps, definePropType } from '@element-plus/utils'\nimport type { ExtractPropTypes, SVGAttributes } from 'vue'\nimport type Progress from './progress.vue'\n\nexport type ProgressColor = { color: string; percentage: number }\nexport type ProgressFn = (percentage: number) => string\n\nexport const progressProps = buildProps({\n  type: {\n    type: String,\n    default: 'line',\n    values: ['line', 'circle', 'dashboard'],\n  },\n  percentage: {\n    type: Number,\n    default: 0,\n    validator: (val: number): boolean => val >= 0 && val <= 100,\n  },\n  status: {\n    type: String,\n    default: '',\n    values: ['', 'success', 'exception', 'warning'],\n  },\n  indeterminate: {\n    type: Boolean,\n    default: false,\n  },\n  duration: {\n    type: Number,\n    default: 3,\n  },\n  strokeWidth: {\n    type: Number,\n    default: 6,\n  },\n  strokeLinecap: {\n    type: definePropType<NonNullable<SVGAttributes['stroke-linecap']>>(String),\n    default: 'round',\n  },\n  textInside: {\n    type: Boolean,\n    default: false,\n  },\n  width: {\n    type: Number,\n    default: 126,\n  },\n  showText: {\n    type: Boolean,\n    default: true,\n  },\n  color: {\n    type: definePropType<string | ProgressColor[] | ProgressFn>([\n      String,\n      Array,\n      Function,\n    ]),\n    default: '',\n  },\n  format: {\n    type: definePropType<ProgressFn>(Function),\n    default: (percentage: number): string => `${percentage}%`,\n  },\n} as const)\n\nexport type ProgressProps = ExtractPropTypes<typeof progressProps>\nexport type ProgressInstance = InstanceType<typeof Progress>\n"]},"metadata":{},"sourceType":"module"}