{"ast":null,"code":"import \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.array.every.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport dayjs from 'dayjs';\nimport '../../../utils/index.mjs';\nimport { isDate, isArray } from '@vue/shared';\nimport { isEmpty } from '../../../utils/types.mjs';\n\nvar buildTimeList = function buildTimeList(value, bound) {\n  return [value > 0 ? value - 1 : void 0, value, value < bound ? value + 1 : void 0];\n};\n\nvar rangeArr = function rangeArr(n) {\n  return Array.from(Array.from({\n    length: n\n  }).keys());\n};\n\nvar extractDateFormat = function extractDateFormat(format) {\n  return format.replace(/\\W?m{1,2}|\\W?ZZ/g, \"\").replace(/\\W?h{1,2}|\\W?s{1,3}|\\W?a/gi, \"\").trim();\n};\n\nvar extractTimeFormat = function extractTimeFormat(format) {\n  return format.replace(/\\W?D{1,2}|\\W?Do|\\W?d{1,4}|\\W?M{1,4}|\\W?Y{2,4}/g, \"\").trim();\n};\n\nvar dateEquals = function dateEquals(a, b) {\n  var aIsDate = isDate(a);\n  var bIsDate = isDate(b);\n\n  if (aIsDate && bIsDate) {\n    return a.getTime() === b.getTime();\n  }\n\n  if (!aIsDate && !bIsDate) {\n    return a === b;\n  }\n\n  return false;\n};\n\nvar valueEquals = function valueEquals(a, b) {\n  var aIsArray = isArray(a);\n  var bIsArray = isArray(b);\n\n  if (aIsArray && bIsArray) {\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    return a.every(function (item, index) {\n      return dateEquals(item, b[index]);\n    });\n  }\n\n  if (!aIsArray && !bIsArray) {\n    return dateEquals(a, b);\n  }\n\n  return false;\n};\n\nvar parseDate = function parseDate(date, format, lang) {\n  var day = isEmpty(format) || format === \"x\" ? dayjs(date).locale(lang) : dayjs(date, format).locale(lang);\n  return day.isValid() ? day : void 0;\n};\n\nvar formatter = function formatter(date, format, lang) {\n  if (isEmpty(format)) return date;\n  if (format === \"x\") return +date;\n  return dayjs(date).locale(lang).format(format);\n};\n\nvar makeList = function makeList(total, method) {\n  var _a;\n\n  var arr = [];\n  var disabledArr = method == null ? void 0 : method();\n\n  for (var i = 0; i < total; i++) {\n    arr.push((_a = disabledArr == null ? void 0 : disabledArr.includes(i)) != null ? _a : false);\n  }\n\n  return arr;\n};\n\nexport { buildTimeList, dateEquals, extractDateFormat, extractTimeFormat, formatter, makeList, parseDate, rangeArr, valueEquals };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;AAEY,IAACA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAQC,KAAR,EAAkB;EAC7C,OAAO,CACLD,KAAK,GAAG,CAAR,GAAYA,KAAK,GAAG,CAApB,GAAwB,KAAK,CADxB,EAELA,KAFK,EAGLA,KAAK,GAAGC,KAAR,GAAgBD,KAAK,GAAG,CAAxB,GAA4B,KAAK,CAH5B,CAAP;AAKF,CANY;;AAOA,IAACE,QAAQ,GAAG,SAAXA,QAAW,CAACC,CAAD;EAAA,OAAOC,KAAK,CAACC,IAAN,CAAWD,KAAK,CAACC,IAAN,CAAW;IAAEC,MAAM,EAAEH;EAAV,CAAX,EAA0BI,IAA1B,EAAX,CAAP;AAAA,CAAZ;;AACA,IAACC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,MAAD,EAAY;EAC3C,OAAOA,MAAM,CAACC,OAAP,CAAe,kBAAf,EAAmC,EAAnC,EAAuCA,OAAvC,CAA+C,4BAA/C,EAA6E,EAA7E,EAAiFC,IAAjF,EAAP;AACF,CAFY;;AAGA,IAACC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACH,MAAD,EAAY;EAC3C,OAAOA,MAAM,CAACC,OAAP,CAAe,gDAAf,EAAiE,EAAjE,EAAqEC,IAArE,EAAP;AACF,CAFY;;AAGA,IAACE,UAAU,GAAG,SAAbA,UAAa,CAASC,CAAT,EAAYC,CAAZ,EAAe;EACvC,IAAMC,OAAO,GAAGC,MAAM,CAACH,CAAD,CAAtB;EACA,IAAMI,OAAO,GAAGD,MAAM,CAACF,CAAD,CAAtB;;EACA,IAAIC,OAAO,IAAIE,OAAf,EAAwB;IACtB,OAAOJ,CAAC,CAACK,OAAF,OAAgBJ,CAAC,CAACI,OAAF,EAAvB;EACD;;EACD,IAAI,CAACH,OAAD,IAAY,CAACE,OAAjB,EAA0B;IACxB,OAAOJ,CAAC,KAAKC,CAAb;EACD;;EACD,OAAO,KAAP;AACF,CAVY;;AAWA,IAACK,WAAW,GAAG,SAAdA,WAAc,CAASN,CAAT,EAAYC,CAAZ,EAAe;EACxC,IAAMM,QAAQ,GAAGC,OAAO,CAACR,CAAD,CAAxB;EACA,IAAMS,QAAQ,GAAGD,OAAO,CAACP,CAAD,CAAxB;;EACA,IAAIM,QAAQ,IAAIE,QAAhB,EAA0B;IACxB,IAAIT,CAAC,CAACR,MAAF,KAAaS,CAAC,CAACT,MAAnB,EAA2B;MACzB,OAAO,KAAP;IACD;;IACD,OAAOQ,CAAC,CAACU,KAAF,CAAQ,UAACC,IAAD,EAAOC,KAAP;MAAA,OAAiBb,UAAU,CAACY,IAAD,EAAOV,CAAC,CAACW,KAAD,CAAR,CAA3B;IAAA,CAAR,CAAP;EACD;;EACD,IAAI,CAACL,QAAD,IAAa,CAACE,QAAlB,EAA4B;IAC1B,OAAOV,UAAU,CAACC,CAAD,EAAIC,CAAJ,CAAjB;EACD;;EACD,OAAO,KAAP;AACF,CAbY;;AAcA,IAACY,SAAS,GAAG,SAAZA,SAAY,CAASC,IAAT,EAAenB,MAAf,EAAuBoB,IAAvB,EAA6B;EACpD,IAAMC,GAAG,GAAGC,OAAO,CAACtB,MAAD,CAAP,IAAmBA,MAAM,KAAK,GAA9B,GAAoCuB,KAAK,CAACJ,IAAD,CAAL,CAAYK,MAAZ,CAAmBJ,IAAnB,CAApC,GAA+DG,KAAK,CAACJ,IAAD,EAAOnB,MAAP,CAAL,CAAoBwB,MAApB,CAA2BJ,IAA3B,CAA3E;EACA,OAAOC,GAAG,CAACI,OAAJ,KAAgBJ,GAAhB,GAAsB,KAAK,CAAlC;AACF,CAHY;;AAIA,IAACK,SAAS,GAAG,SAAZA,SAAY,CAASP,IAAT,EAAenB,MAAf,EAAuBoB,IAAvB,EAA6B;EACpD,IAAIE,OAAO,CAACtB,MAAD,CAAX,EACE,OAAOmB,IAAP;EACF,IAAInB,MAAM,KAAK,GAAf,EACE,OAAO,CAACmB,IAAR;EACF,OAAOI,KAAK,CAACJ,IAAD,CAAL,CAAYK,MAAZ,CAAmBJ,IAAnB,EAAyBpB,MAAzB,CAAgCA,MAAhC,CAAP;AACF,CANY;;AAOA,IAAC2B,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAQC,MAAR,EAAmB;EACzC,IAAIC,EAAJ;;EACA,IAAMC,GAAG,GAAG,EAAZ;EACA,IAAMC,WAAW,GAAGH,MAAM,IAAI,IAAV,GAAiB,KAAK,CAAtB,GAA0BA,MAAM,EAApD;;EACA,KAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAApB,EAA2BK,CAAC,EAA5B,EAAgC;IAC9BF,GAAG,CAACG,IAAJ,CAAS,CAACJ,EAAE,GAAGE,WAAW,IAAI,IAAf,GAAsB,KAAK,CAA3B,GAA+BA,WAAW,CAACG,QAAZ,CAAqBF,CAArB,CAArC,KAAiE,IAAjE,GAAwEH,EAAxE,GAA6E,KAAtF;EACD;;EACD,OAAOC,GAAP;AACF,CARY","names":["buildTimeList","value","bound","rangeArr","n","Array","from","length","keys","extractDateFormat","format","replace","trim","extractTimeFormat","dateEquals","a","b","aIsDate","isDate","bIsDate","getTime","valueEquals","aIsArray","isArray","bIsArray","every","item","index","parseDate","date","lang","day","isEmpty","dayjs","locale","isValid","formatter","makeList","total","method","_a","arr","disabledArr","i","push","includes"],"sources":["../../../../../../packages/components/time-picker/src/utils.ts"],"sourcesContent":["import dayjs from 'dayjs'\nimport { isArray, isDate, isEmpty } from '@element-plus/utils'\n\nimport type { Dayjs } from 'dayjs'\nexport type TimeList = [number | undefined, number, undefined | number]\n\nexport const buildTimeList = (value: number, bound: number): TimeList => {\n  return [\n    value > 0 ? value - 1 : undefined,\n    value,\n    value < bound ? value + 1 : undefined,\n  ]\n}\n\nexport const rangeArr = (n: number) =>\n  Array.from(Array.from({ length: n }).keys())\n\nexport const extractDateFormat = (format: string) => {\n  return format\n    .replace(/\\W?m{1,2}|\\W?ZZ/g, '')\n    .replace(/\\W?h{1,2}|\\W?s{1,3}|\\W?a/gi, '')\n    .trim()\n}\n\nexport const extractTimeFormat = (format: string) => {\n  return format\n    .replace(/\\W?D{1,2}|\\W?Do|\\W?d{1,4}|\\W?M{1,4}|\\W?Y{2,4}/g, '')\n    .trim()\n}\n\nexport const dateEquals = function (a: Date | unknown, b: Date | unknown) {\n  const aIsDate = isDate(a)\n  const bIsDate = isDate(b)\n  if (aIsDate && bIsDate) {\n    return a.getTime() === b.getTime()\n  }\n  if (!aIsDate && !bIsDate) {\n    return a === b\n  }\n  return false\n}\n\nexport const valueEquals = function (\n  a: Array<Date> | unknown,\n  b: Array<Date> | unknown\n) {\n  const aIsArray = isArray(a)\n  const bIsArray = isArray(b)\n  if (aIsArray && bIsArray) {\n    if (a.length !== b.length) {\n      return false\n    }\n    return a.every((item, index) => dateEquals(item, b[index]))\n  }\n  if (!aIsArray && !bIsArray) {\n    return dateEquals(a, b)\n  }\n  return false\n}\n\nexport const parseDate = function (\n  date: string | number | Date,\n  format: string | undefined,\n  lang: string\n) {\n  const day =\n    isEmpty(format) || format === 'x'\n      ? dayjs(date).locale(lang)\n      : dayjs(date, format).locale(lang)\n  return day.isValid() ? day : undefined\n}\n\nexport const formatter = function (\n  date: string | number | Date | Dayjs,\n  format: string | undefined,\n  lang: string\n) {\n  if (isEmpty(format)) return date\n  if (format === 'x') return +date\n  return dayjs(date).locale(lang).format(format)\n}\n\nexport const makeList = (total: number, method?: () => number[]) => {\n  const arr: boolean[] = []\n  const disabledArr = method?.()\n  for (let i = 0; i < total; i++) {\n    arr.push(disabledArr?.includes(i) ?? false)\n  }\n  return arr\n}\n"]},"metadata":{},"sourceType":"module"}