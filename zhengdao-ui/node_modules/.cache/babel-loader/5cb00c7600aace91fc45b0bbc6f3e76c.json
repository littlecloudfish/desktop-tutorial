{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport '../../../constants/index.mjs';\nimport '../../../utils/index.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';\nimport { componentSizes } from '../../../constants/size.mjs';\nimport { isArray, isString } from '@vue/shared';\nimport { isBoolean } from '@vueuse/core';\nvar formProps = buildProps({\n  model: Object,\n  rules: {\n    type: definePropType(Object)\n  },\n  labelPosition: {\n    type: String,\n    values: [\"left\", \"right\", \"top\"],\n    \"default\": \"right\"\n  },\n  labelWidth: {\n    type: [String, Number],\n    \"default\": \"\"\n  },\n  labelSuffix: {\n    type: String,\n    \"default\": \"\"\n  },\n  inline: Boolean,\n  inlineMessage: Boolean,\n  statusIcon: Boolean,\n  showMessage: {\n    type: Boolean,\n    \"default\": true\n  },\n  size: {\n    type: String,\n    values: componentSizes\n  },\n  disabled: Boolean,\n  validateOnRuleChange: {\n    type: Boolean,\n    \"default\": true\n  },\n  hideRequiredAsterisk: {\n    type: Boolean,\n    \"default\": false\n  },\n  scrollToError: Boolean\n});\nvar formEmits = {\n  validate: function validate(prop, isValid, message) {\n    return (isArray(prop) || isString(prop)) && isBoolean(isValid) && isString(message);\n  }\n};\nexport { formEmits, formProps };","map":{"version":3,"mappings":";;;;;;;AAQY,IAACA,SAAS,GAAGC,UAAU,CAAC;EAClCC,KAAK,EAAEC,MAD2B;EAElCC,KAAK,EAAE;IACLC,IAAI,EAAEC,cAAc,CAACH,MAAD;EADf,CAF2B;EAKlCI,aAAa,EAAE;IACbF,IAAI,EAAEG,MADO;IAEbC,MAAM,EAAE,CAAC,MAAD,EAAS,OAAT,EAAkB,KAAlB,CAFK;IAGb,WAAS;EAHI,CALmB;EAUlCC,UAAU,EAAE;IACVL,IAAI,EAAE,CAACG,MAAD,EAASG,MAAT,CADI;IAEV,WAAS;EAFC,CAVsB;EAclCC,WAAW,EAAE;IACXP,IAAI,EAAEG,MADK;IAEX,WAAS;EAFE,CAdqB;EAkBlCK,MAAM,EAAEC,OAlB0B;EAmBlCC,aAAa,EAAED,OAnBmB;EAoBlCE,UAAU,EAAEF,OApBsB;EAqBlCG,WAAW,EAAE;IACXZ,IAAI,EAAES,OADK;IAEX,WAAS;EAFE,CArBqB;EAyBlCI,IAAI,EAAE;IACJb,IAAI,EAAEG,MADF;IAEJC,MAAM,EAAEU;EAFJ,CAzB4B;EA6BlCC,QAAQ,EAAEN,OA7BwB;EA8BlCO,oBAAoB,EAAE;IACpBhB,IAAI,EAAES,OADc;IAEpB,WAAS;EAFW,CA9BY;EAkClCQ,oBAAoB,EAAE;IACpBjB,IAAI,EAAES,OADc;IAEpB,WAAS;EAFW,CAlCY;EAsClCS,aAAa,EAAET;AAtCmB,CAAD,CAAvB;AAwCA,IAACU,SAAS,GAAG;EACvBC,QAAQ,EAAE,kBAACC,IAAD,EAAOC,OAAP,EAAgBC,OAAhB;IAAA,OAA4B,CAACC,OAAO,CAACH,IAAD,CAAP,IAAiBI,QAAQ,CAACJ,IAAD,CAA1B,KAAqCK,SAAS,CAACJ,OAAD,CAA9C,IAA2DG,QAAQ,CAACF,OAAD,CAA/F;EAAA;AADa,CAAb","names":["formProps","buildProps","model","Object","rules","type","definePropType","labelPosition","String","values","labelWidth","Number","labelSuffix","inline","Boolean","inlineMessage","statusIcon","showMessage","size","componentSizes","disabled","validateOnRuleChange","hideRequiredAsterisk","scrollToError","formEmits","validate","prop","isValid","message","isArray","isString","isBoolean"],"sources":["../../../../../../packages/components/form/src/form.ts"],"sourcesContent":["import { componentSizes } from '@element-plus/constants'\nimport {\n  buildProps,\n  definePropType,\n  isArray,\n  isBoolean,\n  isString,\n} from '@element-plus/utils'\n\nimport type { ExtractPropTypes } from 'vue'\nimport type { FormItemProp } from './form-item'\nimport type { FormRules } from '@element-plus/tokens'\n\nexport const formProps = buildProps({\n  model: Object,\n  rules: {\n    type: definePropType<FormRules>(Object),\n  },\n  labelPosition: {\n    type: String,\n    values: ['left', 'right', 'top'],\n    default: 'right',\n  },\n  labelWidth: {\n    type: [String, Number],\n    default: '',\n  },\n  labelSuffix: {\n    type: String,\n    default: '',\n  },\n  inline: Boolean,\n  inlineMessage: Boolean,\n  statusIcon: Boolean,\n  showMessage: {\n    type: Boolean,\n    default: true,\n  },\n  size: {\n    type: String,\n    values: componentSizes,\n  },\n  disabled: Boolean,\n  validateOnRuleChange: {\n    type: Boolean,\n    default: true,\n  },\n  hideRequiredAsterisk: {\n    type: Boolean,\n    default: false,\n  },\n  scrollToError: Boolean,\n} as const)\nexport type FormProps = ExtractPropTypes<typeof formProps>\n\nexport const formEmits = {\n  validate: (prop: FormItemProp, isValid: boolean, message: string) =>\n    (isArray(prop) || isString(prop)) &&\n    isBoolean(isValid) &&\n    isString(message),\n}\nexport type FormEmits = typeof formEmits\n"]},"metadata":{},"sourceType":"module"}