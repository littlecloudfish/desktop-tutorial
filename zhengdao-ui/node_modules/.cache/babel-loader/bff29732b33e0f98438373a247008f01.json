{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport { defineComponent, inject, ref, computed, openBlock, createBlock, Transition, unref, withCtx, createElementBlock, normalizeClass, createElementVNode, createVNode, toDisplayString, createCommentVNode } from 'vue';\nimport dayjs from 'dayjs';\nimport '../../../../constants/index.mjs';\nimport '../../../../hooks/index.mjs';\nimport '../../../../utils/index.mjs';\nimport { panelTimePickerProps } from '../props/panel-time-picker.mjs';\nimport { useTimePanel } from '../composables/use-time-panel.mjs';\nimport { buildAvailableTimeSlotGetter, useOldValue } from '../composables/use-time-picker.mjs';\nimport TimeSpinner from './basic-time-spinner.mjs';\nimport _export_sfc from '../../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../../hooks/use-namespace/index.mjs';\nimport { useLocale } from '../../../../hooks/use-locale/index.mjs';\nimport { isUndefined } from '../../../../utils/types.mjs';\nimport { EVENT_CODE } from '../../../../constants/aria.mjs';\n\nvar _sfc_main = /* @__PURE__ */defineComponent({\n  __name: \"panel-time-pick\",\n  props: panelTimePickerProps,\n  emits: [\"pick\", \"select-range\", \"set-picker-option\"],\n  setup: function setup(__props, _ref) {\n    var emit = _ref.emit;\n    var props = __props;\n    var pickerBase = inject(\"EP_PICKER_BASE\");\n    var _pickerBase$props = pickerBase.props,\n        arrowControl = _pickerBase$props.arrowControl,\n        disabledHours = _pickerBase$props.disabledHours,\n        disabledMinutes = _pickerBase$props.disabledMinutes,\n        disabledSeconds = _pickerBase$props.disabledSeconds,\n        defaultValue = _pickerBase$props.defaultValue;\n\n    var _buildAvailableTimeSl = buildAvailableTimeSlotGetter(disabledHours, disabledMinutes, disabledSeconds),\n        getAvailableHours = _buildAvailableTimeSl.getAvailableHours,\n        getAvailableMinutes = _buildAvailableTimeSl.getAvailableMinutes,\n        getAvailableSeconds = _buildAvailableTimeSl.getAvailableSeconds;\n\n    var ns = useNamespace(\"time\");\n\n    var _useLocale = useLocale(),\n        t = _useLocale.t,\n        lang = _useLocale.lang;\n\n    var selectionRange = ref([0, 2]);\n    var oldValue = useOldValue(props);\n    var transitionName = computed(function () {\n      return isUndefined(props.actualVisible) ? \"\".concat(ns.namespace.value, \"-zoom-in-top\") : \"\";\n    });\n    var showSeconds = computed(function () {\n      return props.format.includes(\"ss\");\n    });\n    var amPmMode = computed(function () {\n      if (props.format.includes(\"A\")) return \"A\";\n      if (props.format.includes(\"a\")) return \"a\";\n      return \"\";\n    });\n\n    var isValidValue = function isValidValue(_date) {\n      var parsedDate = dayjs(_date).locale(lang.value);\n      var result = getRangeAvailableTime(parsedDate);\n      return parsedDate.isSame(result);\n    };\n\n    var handleCancel = function handleCancel() {\n      emit(\"pick\", oldValue.value, false);\n    };\n\n    var handleConfirm = function handleConfirm() {\n      var visible = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var first = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      if (first) return;\n      emit(\"pick\", props.parsedValue, visible);\n    };\n\n    var handleChange = function handleChange(_date) {\n      if (!props.visible) {\n        return;\n      }\n\n      var result = getRangeAvailableTime(_date).millisecond(0);\n      emit(\"pick\", result, true);\n    };\n\n    var setSelectionRange = function setSelectionRange(start, end) {\n      emit(\"select-range\", start, end);\n      selectionRange.value = [start, end];\n    };\n\n    var changeSelectionRange = function changeSelectionRange(step) {\n      var list = [0, 3].concat(showSeconds.value ? [6] : []);\n      var mapping = [\"hours\", \"minutes\"].concat(showSeconds.value ? [\"seconds\"] : []);\n      var index = list.indexOf(selectionRange.value[0]);\n      var next = (index + step + list.length) % list.length;\n      timePickerOptions[\"start_emitSelectRange\"](mapping[next]);\n    };\n\n    var handleKeydown = function handleKeydown(event) {\n      var code = event.code;\n      var left = EVENT_CODE.left,\n          right = EVENT_CODE.right,\n          up = EVENT_CODE.up,\n          down = EVENT_CODE.down;\n\n      if ([left, right].includes(code)) {\n        var step = code === left ? -1 : 1;\n        changeSelectionRange(step);\n        event.preventDefault();\n        return;\n      }\n\n      if ([up, down].includes(code)) {\n        var _step = code === up ? -1 : 1;\n\n        timePickerOptions[\"start_scrollDown\"](_step);\n        event.preventDefault();\n        return;\n      }\n    };\n\n    var _useTimePanel = useTimePanel({\n      getAvailableHours: getAvailableHours,\n      getAvailableMinutes: getAvailableMinutes,\n      getAvailableSeconds: getAvailableSeconds\n    }),\n        timePickerOptions = _useTimePanel.timePickerOptions,\n        onSetOption = _useTimePanel.onSetOption,\n        getAvailableTime = _useTimePanel.getAvailableTime;\n\n    var getRangeAvailableTime = function getRangeAvailableTime(date) {\n      return getAvailableTime(date, props.datetimeRole || \"\", true);\n    };\n\n    var parseUserInput = function parseUserInput(value) {\n      if (!value) return null;\n      return dayjs(value, props.format).locale(lang.value);\n    };\n\n    var formatToString = function formatToString(value) {\n      if (!value) return null;\n      return value.format(props.format);\n    };\n\n    var getDefaultValue = function getDefaultValue() {\n      return dayjs(defaultValue).locale(lang.value);\n    };\n\n    emit(\"set-picker-option\", [\"isValidValue\", isValidValue]);\n    emit(\"set-picker-option\", [\"formatToString\", formatToString]);\n    emit(\"set-picker-option\", [\"parseUserInput\", parseUserInput]);\n    emit(\"set-picker-option\", [\"handleKeydownInput\", handleKeydown]);\n    emit(\"set-picker-option\", [\"getRangeAvailableTime\", getRangeAvailableTime]);\n    emit(\"set-picker-option\", [\"getDefaultValue\", getDefaultValue]);\n    return function (_ctx, _cache) {\n      return openBlock(), createBlock(Transition, {\n        name: unref(transitionName)\n      }, {\n        \"default\": withCtx(function () {\n          return [_ctx.actualVisible || _ctx.visible ? (openBlock(), createElementBlock(\"div\", {\n            key: 0,\n            \"class\": normalizeClass(unref(ns).b(\"panel\"))\n          }, [createElementVNode(\"div\", {\n            \"class\": normalizeClass([unref(ns).be(\"panel\", \"content\"), {\n              \"has-seconds\": unref(showSeconds)\n            }])\n          }, [createVNode(TimeSpinner, {\n            ref: \"spinner\",\n            role: _ctx.datetimeRole || \"start\",\n            \"arrow-control\": unref(arrowControl),\n            \"show-seconds\": unref(showSeconds),\n            \"am-pm-mode\": unref(amPmMode),\n            \"spinner-date\": _ctx.parsedValue,\n            \"disabled-hours\": unref(disabledHours),\n            \"disabled-minutes\": unref(disabledMinutes),\n            \"disabled-seconds\": unref(disabledSeconds),\n            onChange: handleChange,\n            onSetOption: unref(onSetOption),\n            onSelectRange: setSelectionRange\n          }, null, 8, [\"role\", \"arrow-control\", \"show-seconds\", \"am-pm-mode\", \"spinner-date\", \"disabled-hours\", \"disabled-minutes\", \"disabled-seconds\", \"onSetOption\"])], 2), createElementVNode(\"div\", {\n            \"class\": normalizeClass(unref(ns).be(\"panel\", \"footer\"))\n          }, [createElementVNode(\"button\", {\n            type: \"button\",\n            \"class\": normalizeClass([unref(ns).be(\"panel\", \"btn\"), \"cancel\"]),\n            onClick: handleCancel\n          }, toDisplayString(unref(t)(\"el.datepicker.cancel\")), 3), createElementVNode(\"button\", {\n            type: \"button\",\n            \"class\": normalizeClass([unref(ns).be(\"panel\", \"btn\"), \"confirm\"]),\n            onClick: _cache[0] || (_cache[0] = function ($event) {\n              return handleConfirm();\n            })\n          }, toDisplayString(unref(t)(\"el.datepicker.confirm\")), 3)], 2)], 2)) : createCommentVNode(\"v-if\", true)];\n        }),\n        _: 1\n      }, 8, [\"name\"]);\n    };\n  }\n});\n\nvar TimePickPanel = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/time-picker/src/time-picker-com/panel-time-pick.vue\"]]);\n\nexport { TimePickPanel as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;IA2DM,iBAAaA,OAAO,gBAAP,CAAb;IACA,wBAMFC,UAAW,MANT;IAAA,IACJC,YADI,qBACJA,YADI;IAAA,IAEJC,aAFI,qBAEJA,aAFI;IAAA,IAGJC,eAHI,qBAGJA,eAHI;IAAA,IAIJC,eAJI,qBAIJA,eAJI;IAAA,IAKJC,YALI,qBAKJA,YALI;;IAON,4BACEC,4BAA6B,gBAAeH,eAAf,EAAgCC,eAAhC,CAD/B;IAAA,IAAQG,iBAAR,yBAAQA,iBAAR;IAAA,IAA2BC,mBAA3B,yBAA2BA,mBAA3B;IAAA,IAAgDC,mBAAhD,yBAAgDA,mBAAhD;;IAGM,SAAKC,aAAa,MAAb,CAAL;;IACA,iBAAcC,SAAU,EAAxB;IAAA,IAAEC,CAAF,cAAEA,CAAF;IAAA,IAAKC,IAAL,cAAKA,IAAL;;IAEN,IAAMC,cAAiB,OAAI,CAAC,CAAD,EAAI,CAAJ,CAAJ,CAAvB;IACM,eAAWC,YAAYC,KAAZ,CAAX;IAEA,qBAAiBC,SAAS,YAAM;MACpC,OAAOC,YAAYF,KAAM,cAAlB,cACAG,GAAGC,SAAH,CAAaC,KADb,oBAEH,EAFJ;IAGD,CAJsB,CAAjB;IAKA,kBAAcJ,SAAS,YAAM;MAC1B,aAAMK,MAAN,CAAaC,QAAb,CAAsB,IAAtB;IACR,CAFmB,CAAd;IAGA,eAAWN,SAAS,YAAM;MAC1B,UAAMK,MAAN,CAAaC,QAAb,CAAsB,GAAtB,GAAmC;MACnC,UAAMD,MAAN,CAAaC,QAAb,CAAsB,GAAtB,GAAmC;MAChC;IACR,CAJgB,CAAX;;IAMA,mBAAe,SAAfC,YAAe,CAACC,KAAD,EAAkB;MACrC,IAAMC,aAAaC,KAAM,OAAN,CAAaC,MAAb,CAAoBf,KAAKQ,KAAzB,CAAnB;MACM,aAASQ,sBAAsBH,UAAtB,CAAT;MACC,kBAAWI,MAAX,CAAkBC,MAAlB;IACT,CAJM;;IAKN,IAAMC,eAAe,SAAfA,YAAe,GAAM;MACpBC,aAAQC,QAAS,MAAjB,EAAwB,KAAxB;IACP,CAFA;;IAGA,IAAMC,aAAgB,YAAhBA,aAAgB,GAAoC;MAAA,IAAnCC,OAAmC,uEAAzB,KAAyB;MAAA,IAAlBC,KAAkB,uEAAV,KAAU;MACpD,WAAO;MACNJ,aAAQjB,KAAM,YAAd,EAA2BoB,OAA3B;IACP,CAHA;;IAIM,mBAAe,SAAfE,YAAe,CAACb,KAAD,EAAkB;MAEjC,KAACT,MAAMoB,OAAP,EAAgB;QAClB;MACF;;MACA,IAAML,MAAS,yBAAsBN,KAAtB,EAA6Bc,WAA7B,CAAyC,CAAzC,CAAf;MACKN,aAAQF,MAAR,EAAgB,IAAhB;IACP,CAPM;;IASA,wBAAoB,SAApBS,iBAAoB,CAACC,KAAD,EAAgBC,GAAhB,EAAgC;MACnDT,qBAAgBQ,KAAhB,EAAuBC,GAAvB;MACU5B,uBAAQ,CAAC2B,KAAD,EAAQC,GAAR,CAAR;IACjB,CAHM;;IAKA,2BAAuB,SAAvBC,oBAAuB,CAACC,IAAD,EAAkB;MAC7C,IAAMC,IAAO,IAAC,CAAD,EAAI,CAAJ,EAAOC,MAAP,CAAcC,WAAY,MAAZ,GAAoB,CAAC,CAAD,CAApB,GAA0B,EAAxC,CAAb;MACA,IAAMC,OAAU,IAAC,OAAD,EAAU,SAAV,EAAqBF,MAArB,CACdC,WAAY,MAAZ,GAAoB,CAAC,SAAD,CAApB,GAAkC,EADpB,CAAhB;MAGA,IAAME,KAAQ,QAAKC,OAAL,CAAapC,eAAeO,KAAf,CAAqB,CAArB,CAAb,CAAd;MACA,IAAM8B,IAAQ,YAAQP,IAAR,GAAeC,KAAKO,MAApB,IAA8BP,IAAK,OAAjD;MACkBQ,2CAAyBL,QAAQG,IAAR,CAAzB;IACpB,CARM;;IAUA,oBAAgB,SAAhBG,aAAgB,CAACC,KAAD,EAA0B;MAC9C,IAAMC,OAAOD,KAAM,KAAnB;MAEA,IAAQE,IAAR,GAAkCC,UAAlC,CAAQD,IAAR;MAAA,IAAcE,KAAd,GAAkCD,UAAlC,CAAcC,KAAd;MAAA,IAAqBC,EAArB,GAAkCF,UAAlC,CAAqBE,EAArB;MAAA,IAAyBC,IAAzB,GAAkCH,UAAlC,CAAyBG,IAAzB;;MAEA,IAAI,CAACJ,IAAD,EAAOE,KAAP,EAAcpC,QAAd,CAAuBiC,IAAvB,CAAJ,EAAkC;QAC1B,WAAOA,IAAS,SAAT,GAAgB,CAAK,CAArB,GAAqB,CAA5B;QACNb,qBAAqBC,IAArB;QACAW,MAAMO,cAAN;QACA;MACF;;MAEA,IAAI,CAACF,EAAD,EAAKC,IAAL,EAAWtC,QAAX,CAAoBiC,IAApB,CAAJ,EAA+B;QACvB,YAAOA,IAAS,OAAT,GAAc,CAAK,CAAnB,GAAmB,CAA1B;;QACNH,kBAAkB,kBAAlB,EAAsCT,KAAtC;QACAW,MAAMO,cAAN;QACA;MACF;IACF,CAlBM;;IAoBN,oBAA6DC,YAAa;MACxExD,oCADwE;MAExEC,wCAFwE;MAGxEC;IAHwE,EAA1E;IAAA,IAAQ4C,iBAAR,iBAAQA,iBAAR;IAAA,IAA2BW,WAA3B,iBAA2BA,WAA3B;IAAA,IAAwCC,gBAAxC,iBAAwCA,gBAAxC;;IAMM,4BAAwB,SAAxBpC,qBAAwB,CAACqC,IAAD,EAAiB;MAC7C,OAAOD,gBAAiB,OAAMjD,KAAM,aAAN,IAAsB,EAA5B,EAAgC,IAAhC,CAAxB;IACF,CAFM;;IAIA,qBAAiB,SAAjBmD,cAAiB,CAAC9C,KAAD,EAAkB;MACvC,IAAI,CAACA,KAAL,EAAmB;MACnB,OAAOM,MAAMN,KAAN,EAAaL,MAAMM,MAAnB,EAA2BM,MAA3B,CAAkCf,KAAKQ,KAAvC,CAAP;IACF,CAHM;;IAKA,qBAAiB,SAAjB+C,cAAiB,CAAC/C,KAAD,EAAkB;MACvC,IAAI,CAACA,KAAL,EAAmB;MACZ,aAAMC,MAAN,CAAaN,MAAMM,MAAnB;IACT,CAHM;;IAKN,IAAM+C,kBAAkB,SAAlBA,eAAkB,GAAM;MAC5B,OAAO1C,KAAM,cAAN,CAAoBC,MAApB,CAA2Bf,KAAKQ,KAAhC,CAAP;IACF,CAFA;;IAIAY,KAAK,mBAAL,EAA0B,CAAC,cAAD,EAAiBT,YAAjB,CAA1B;IACAS,KAAK,mBAAL,EAA0B,CAAC,gBAAD,EAAmBmC,cAAnB,CAA1B;IACAnC,KAAK,mBAAL,EAA0B,CAAC,gBAAD,EAAmBkC,cAAnB,CAA1B;IACAlC,KAAK,mBAAL,EAA0B,CAAC,oBAAD,EAAuBqB,aAAvB,CAA1B;IACArB,KAAK,mBAAL,EAA0B,CAAC,uBAAD,EAA0BJ,qBAA1B,CAA1B;IACAI,KAAK,mBAAL,EAA0B,CAAC,iBAAD,EAAoBoC,eAApB,CAA1B","names":["inject","pickerBase","arrowControl","disabledHours","disabledMinutes","disabledSeconds","defaultValue","buildAvailableTimeSlotGetter","getAvailableHours","getAvailableMinutes","getAvailableSeconds","useNamespace","useLocale","t","lang","selectionRange","useOldValue","props","computed","isUndefined","ns","namespace","value","format","includes","isValidValue","_date","parsedDate","dayjs","locale","getRangeAvailableTime","isSame","result","handleCancel","emit","oldValue","handleConfirm","visible","first","handleChange","millisecond","setSelectionRange","start","end","changeSelectionRange","step","list","concat","showSeconds","mapping","index","indexOf","next","length","timePickerOptions","handleKeydown","event","code","left","EVENT_CODE","right","up","down","preventDefault","useTimePanel","onSetOption","getAvailableTime","date","parseUserInput","formatToString","getDefaultValue"],"sources":["../../../../../../../packages/components/time-picker/src/time-picker-com/panel-time-pick.vue"],"sourcesContent":["<template>\n  <transition :name=\"transitionName\">\n    <div v-if=\"actualVisible || visible\" :class=\"ns.b('panel')\">\n      <div :class=\"[ns.be('panel', 'content'), { 'has-seconds': showSeconds }]\">\n        <time-spinner\n          ref=\"spinner\"\n          :role=\"datetimeRole || 'start'\"\n          :arrow-control=\"arrowControl\"\n          :show-seconds=\"showSeconds\"\n          :am-pm-mode=\"amPmMode\"\n          :spinner-date=\"(parsedValue as any)\"\n          :disabled-hours=\"disabledHours\"\n          :disabled-minutes=\"disabledMinutes\"\n          :disabled-seconds=\"disabledSeconds\"\n          @change=\"handleChange\"\n          @set-option=\"onSetOption\"\n          @select-range=\"setSelectionRange\"\n        />\n      </div>\n      <div :class=\"ns.be('panel', 'footer')\">\n        <button\n          type=\"button\"\n          :class=\"[ns.be('panel', 'btn'), 'cancel']\"\n          @click=\"handleCancel\"\n        >\n          {{ t('el.datepicker.cancel') }}\n        </button>\n        <button\n          type=\"button\"\n          :class=\"[ns.be('panel', 'btn'), 'confirm']\"\n          @click=\"handleConfirm()\"\n        >\n          {{ t('el.datepicker.confirm') }}\n        </button>\n      </div>\n    </div>\n  </transition>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, inject, ref } from 'vue'\nimport dayjs from 'dayjs'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport { isUndefined } from '@element-plus/utils'\nimport { panelTimePickerProps } from '../props/panel-time-picker'\nimport { useTimePanel } from '../composables/use-time-panel'\nimport {\n  buildAvailableTimeSlotGetter,\n  useOldValue,\n} from '../composables/use-time-picker'\nimport TimeSpinner from './basic-time-spinner.vue'\n\nimport type { Dayjs } from 'dayjs'\n\nconst props = defineProps(panelTimePickerProps)\nconst emit = defineEmits(['pick', 'select-range', 'set-picker-option'])\n\n// Injections\nconst pickerBase = inject('EP_PICKER_BASE') as any\nconst {\n  arrowControl,\n  disabledHours,\n  disabledMinutes,\n  disabledSeconds,\n  defaultValue,\n} = pickerBase.props\nconst { getAvailableHours, getAvailableMinutes, getAvailableSeconds } =\n  buildAvailableTimeSlotGetter(disabledHours, disabledMinutes, disabledSeconds)\n\nconst ns = useNamespace('time')\nconst { t, lang } = useLocale()\n// data\nconst selectionRange = ref([0, 2])\nconst oldValue = useOldValue(props)\n// computed\nconst transitionName = computed(() => {\n  return isUndefined(props.actualVisible)\n    ? `${ns.namespace.value}-zoom-in-top`\n    : ''\n})\nconst showSeconds = computed(() => {\n  return props.format.includes('ss')\n})\nconst amPmMode = computed(() => {\n  if (props.format.includes('A')) return 'A'\n  if (props.format.includes('a')) return 'a'\n  return ''\n})\n// method\nconst isValidValue = (_date: Dayjs) => {\n  const parsedDate = dayjs(_date).locale(lang.value)\n  const result = getRangeAvailableTime(parsedDate)\n  return parsedDate.isSame(result)\n}\nconst handleCancel = () => {\n  emit('pick', oldValue.value, false)\n}\nconst handleConfirm = (visible = false, first = false) => {\n  if (first) return\n  emit('pick', props.parsedValue, visible)\n}\nconst handleChange = (_date: Dayjs) => {\n  // visible avoids edge cases, when use scrolls during panel closing animation\n  if (!props.visible) {\n    return\n  }\n  const result = getRangeAvailableTime(_date).millisecond(0)\n  emit('pick', result, true)\n}\n\nconst setSelectionRange = (start: number, end: number) => {\n  emit('select-range', start, end)\n  selectionRange.value = [start, end]\n}\n\nconst changeSelectionRange = (step: number) => {\n  const list = [0, 3].concat(showSeconds.value ? [6] : [])\n  const mapping = ['hours', 'minutes'].concat(\n    showSeconds.value ? ['seconds'] : []\n  )\n  const index = list.indexOf(selectionRange.value[0])\n  const next = (index + step + list.length) % list.length\n  timePickerOptions['start_emitSelectRange'](mapping[next])\n}\n\nconst handleKeydown = (event: KeyboardEvent) => {\n  const code = event.code\n\n  const { left, right, up, down } = EVENT_CODE\n\n  if ([left, right].includes(code)) {\n    const step = code === left ? -1 : 1\n    changeSelectionRange(step)\n    event.preventDefault()\n    return\n  }\n\n  if ([up, down].includes(code)) {\n    const step = code === up ? -1 : 1\n    timePickerOptions['start_scrollDown'](step)\n    event.preventDefault()\n    return\n  }\n}\n\nconst { timePickerOptions, onSetOption, getAvailableTime } = useTimePanel({\n  getAvailableHours,\n  getAvailableMinutes,\n  getAvailableSeconds,\n})\n\nconst getRangeAvailableTime = (date: Dayjs) => {\n  return getAvailableTime(date, props.datetimeRole || '', true)\n}\n\nconst parseUserInput = (value: Dayjs) => {\n  if (!value) return null\n  return dayjs(value, props.format).locale(lang.value)\n}\n\nconst formatToString = (value: Dayjs) => {\n  if (!value) return null\n  return value.format(props.format)\n}\n\nconst getDefaultValue = () => {\n  return dayjs(defaultValue).locale(lang.value)\n}\n\nemit('set-picker-option', ['isValidValue', isValidValue])\nemit('set-picker-option', ['formatToString', formatToString])\nemit('set-picker-option', ['parseUserInput', parseUserInput])\nemit('set-picker-option', ['handleKeydownInput', handleKeydown])\nemit('set-picker-option', ['getRangeAvailableTime', getRangeAvailableTime])\nemit('set-picker-option', ['getDefaultValue', getDefaultValue])\n</script>\n"]},"metadata":{},"sourceType":"module"}