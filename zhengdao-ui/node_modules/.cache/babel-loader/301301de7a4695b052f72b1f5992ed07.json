{"ast":null,"code":"import _defineProperty from \"/home/little/Documents/music_web/backandfrontsep/zhengdao-ui/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nvar _autocompleteEmits;\n\nimport \"core-js/modules/es.number.constructor.js\";\nimport { NOOP, isString, isObject } from '@vue/shared';\nimport '../../../utils/index.mjs';\nimport '../../tooltip/index.mjs';\nimport '../../../constants/index.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';\nimport { useTooltipContentProps } from '../../tooltip/src/tooltip.mjs';\nimport { UPDATE_MODEL_EVENT, INPUT_EVENT, CHANGE_EVENT } from '../../../constants/event.mjs';\nvar autocompleteProps = buildProps({\n  valueKey: {\n    type: String,\n    \"default\": \"value\"\n  },\n  modelValue: {\n    type: [String, Number],\n    \"default\": \"\"\n  },\n  debounce: {\n    type: Number,\n    \"default\": 300\n  },\n  placement: {\n    type: definePropType(String),\n    values: [\"top\", \"top-start\", \"top-end\", \"bottom\", \"bottom-start\", \"bottom-end\"],\n    \"default\": \"bottom-start\"\n  },\n  fetchSuggestions: {\n    type: definePropType([Function, Array]),\n    \"default\": NOOP\n  },\n  popperClass: {\n    type: String,\n    \"default\": \"\"\n  },\n  triggerOnFocus: {\n    type: Boolean,\n    \"default\": true\n  },\n  selectWhenUnmatched: {\n    type: Boolean,\n    \"default\": false\n  },\n  hideLoading: {\n    type: Boolean,\n    \"default\": false\n  },\n  label: {\n    type: String\n  },\n  teleported: useTooltipContentProps.teleported,\n  highlightFirstItem: {\n    type: Boolean,\n    \"default\": false\n  },\n  fitInputWidth: {\n    type: Boolean,\n    \"default\": false\n  }\n});\nvar autocompleteEmits = (_autocompleteEmits = {}, _defineProperty(_autocompleteEmits, UPDATE_MODEL_EVENT, function (value) {\n  return isString(value);\n}), _defineProperty(_autocompleteEmits, INPUT_EVENT, function (value) {\n  return isString(value);\n}), _defineProperty(_autocompleteEmits, CHANGE_EVENT, function (value) {\n  return isString(value);\n}), _defineProperty(_autocompleteEmits, \"focus\", function focus(evt) {\n  return evt instanceof FocusEvent;\n}), _defineProperty(_autocompleteEmits, \"blur\", function blur(evt) {\n  return evt instanceof FocusEvent;\n}), _defineProperty(_autocompleteEmits, \"clear\", function clear() {\n  return true;\n}), _defineProperty(_autocompleteEmits, \"select\", function select(item) {\n  return isObject(item);\n}), _autocompleteEmits);\nexport { autocompleteEmits, autocompleteProps };","map":{"version":3,"mappings":";;;;;;;;;;;;AAaY,IAACA,iBAAiB,GAAGC,UAAU,CAAC;EAC1CC,QAAQ,EAAE;IACRC,IAAI,EAAEC,MADE;IAER,WAAS;EAFD,CADgC;EAK1CC,UAAU,EAAE;IACVF,IAAI,EAAE,CAACC,MAAD,EAASE,MAAT,CADI;IAEV,WAAS;EAFC,CAL8B;EAS1CC,QAAQ,EAAE;IACRJ,IAAI,EAAEG,MADE;IAER,WAAS;EAFD,CATgC;EAa1CE,SAAS,EAAE;IACTL,IAAI,EAAEM,cAAc,CAACL,MAAD,CADX;IAETM,MAAM,EAAE,CACN,KADM,EAEN,WAFM,EAGN,SAHM,EAIN,QAJM,EAKN,cALM,EAMN,YANM,CAFC;IAUT,WAAS;EAVA,CAb+B;EAyB1CC,gBAAgB,EAAE;IAChBR,IAAI,EAAEM,cAAc,CAAC,CAACG,QAAD,EAAWC,KAAX,CAAD,CADJ;IAEhB,WAASC;EAFO,CAzBwB;EA6B1CC,WAAW,EAAE;IACXZ,IAAI,EAAEC,MADK;IAEX,WAAS;EAFE,CA7B6B;EAiC1CY,cAAc,EAAE;IACdb,IAAI,EAAEc,OADQ;IAEd,WAAS;EAFK,CAjC0B;EAqC1CC,mBAAmB,EAAE;IACnBf,IAAI,EAAEc,OADa;IAEnB,WAAS;EAFU,CArCqB;EAyC1CE,WAAW,EAAE;IACXhB,IAAI,EAAEc,OADK;IAEX,WAAS;EAFE,CAzC6B;EA6C1CG,KAAK,EAAE;IACLjB,IAAI,EAAEC;EADD,CA7CmC;EAgD1CiB,UAAU,EAAEC,sBAAsB,CAACD,UAhDO;EAiD1CE,kBAAkB,EAAE;IAClBpB,IAAI,EAAEc,OADY;IAElB,WAAS;EAFS,CAjDsB;EAqD1CO,aAAa,EAAE;IACbrB,IAAI,EAAEc,OADO;IAEb,WAAS;EAFI;AArD2B,CAAD,CAA/B;AA0DA,IAACQ,iBAAiB,iEAC3BC,kBAD2B,EACN,UAACC,KAAD;EAAA,OAAWC,QAAQ,CAACD,KAAD,CAAnB;AAAA,CADM,uCAE3BE,WAF2B,EAEb,UAACF,KAAD;EAAA,OAAWC,QAAQ,CAACD,KAAD,CAAnB;AAAA,CAFa,uCAG3BG,YAH2B,EAGZ,UAACH,KAAD;EAAA,OAAWC,QAAQ,CAACD,KAAD,CAAnB;AAAA,CAHY,gDAIrB,eAACI,GAAD;EAAA,OAASA,GAAG,YAAYC,UAAxB;AAAA,CAJqB,+CAKtB,cAACD,GAAD;EAAA,OAASA,GAAG,YAAYC,UAAxB;AAAA,CALsB,gDAMrB;EAAA,OAAM,IAAN;AAAA,CANqB,iDAOpB,gBAACC,IAAD;EAAA,OAAUC,QAAQ,CAACD,IAAD,CAAlB;AAAA,CAPoB,sBAAlB","names":["autocompleteProps","buildProps","valueKey","type","String","modelValue","Number","debounce","placement","definePropType","values","fetchSuggestions","Function","Array","NOOP","popperClass","triggerOnFocus","Boolean","selectWhenUnmatched","hideLoading","label","teleported","useTooltipContentProps","highlightFirstItem","fitInputWidth","autocompleteEmits","UPDATE_MODEL_EVENT","value","isString","INPUT_EVENT","CHANGE_EVENT","evt","FocusEvent","item","isObject"],"sources":["../../../../../../packages/components/autocomplete/src/autocomplete.ts"],"sourcesContent":["import { NOOP } from '@vue/shared'\nimport {\n  buildProps,\n  definePropType,\n  isObject,\n  isString,\n} from '@element-plus/utils'\nimport { useTooltipContentProps } from '@element-plus/components/tooltip'\nimport {\n  CHANGE_EVENT,\n  INPUT_EVENT,\n  UPDATE_MODEL_EVENT,\n} from '@element-plus/constants'\n\nimport type { ExtractPropTypes } from 'vue'\nimport type Autocomplete from './autocomplete.vue'\nimport type { Placement } from '@element-plus/components/popper'\nimport type { Awaitable } from '@element-plus/utils'\n\nexport type AutocompleteData = Record<string, any>[]\nexport type AutocompleteFetchSuggestionsCallback = (\n  data: AutocompleteData\n) => void\nexport type AutocompleteFetchSuggestions =\n  | ((\n      queryString: string,\n      cb: AutocompleteFetchSuggestionsCallback\n    ) => Awaitable<AutocompleteData> | void)\n  | AutocompleteData\n\nexport const autocompleteProps = buildProps({\n  valueKey: {\n    type: String,\n    default: 'value',\n  },\n  modelValue: {\n    type: [String, Number],\n    default: '',\n  },\n  debounce: {\n    type: Number,\n    default: 300,\n  },\n  placement: {\n    type: definePropType<Placement>(String),\n    values: [\n      'top',\n      'top-start',\n      'top-end',\n      'bottom',\n      'bottom-start',\n      'bottom-end',\n    ],\n    default: 'bottom-start',\n  },\n  fetchSuggestions: {\n    type: definePropType<AutocompleteFetchSuggestions>([Function, Array]),\n    default: NOOP,\n  },\n  popperClass: {\n    type: String,\n    default: '',\n  },\n  triggerOnFocus: {\n    type: Boolean,\n    default: true,\n  },\n  selectWhenUnmatched: {\n    type: Boolean,\n    default: false,\n  },\n  hideLoading: {\n    type: Boolean,\n    default: false,\n  },\n  label: {\n    type: String,\n  },\n  teleported: useTooltipContentProps.teleported,\n  highlightFirstItem: {\n    type: Boolean,\n    default: false,\n  },\n  fitInputWidth: {\n    type: Boolean,\n    default: false,\n  },\n} as const)\nexport type AutocompleteProps = ExtractPropTypes<typeof autocompleteProps>\n\nexport const autocompleteEmits = {\n  [UPDATE_MODEL_EVENT]: (value: string) => isString(value),\n  [INPUT_EVENT]: (value: string) => isString(value),\n  [CHANGE_EVENT]: (value: string) => isString(value),\n  focus: (evt: FocusEvent) => evt instanceof FocusEvent,\n  blur: (evt: FocusEvent) => evt instanceof FocusEvent,\n  clear: () => true,\n  select: (item: { value: any }) => isObject(item),\n}\nexport type AutocompleteEmits = typeof autocompleteEmits\n\nexport type AutocompleteInstance = InstanceType<typeof Autocomplete>\n"]},"metadata":{},"sourceType":"module"}