{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport { ref, computed, onMounted } from \"vue\";\nexport default {\n  name: 'Posts',\n  props: {},\n  setup: function setup() {\n    var data = ref(null);\n    var loading = ref(true);\n    var error = ref(null);\n\n    function fetchData() {\n      loading.value = true; // I prefer to use fetch\n      // you can use use axios as an alternative\n\n      return fetch('http://jsonplaceholder.typicode.com', {\n        method: 'get',\n        headers: {\n          'content-type': 'application/json'\n        }\n      }).then(function (res) {\n        // a non-200 response code\n        if (!res.ok) {\n          // create error instance with HTTP status text\n          var _error = new Error(res.statusText);\n\n          _error.json = res.json();\n          throw _error;\n        }\n\n        return res.json();\n      }).then(function (json) {\n        // set the response data\n        data.value = json.data;\n      })[\"catch\"](function (err) {\n        error.value = err; // In case a custom JSON error response was provided\n\n        if (err.json) {\n          return err.json.then(function (json) {\n            // set the JSON response message\n            error.value.message = json.message;\n          });\n        }\n      }).then(function () {\n        loading.value = false;\n      });\n    }\n\n    onMounted(function () {\n      fetchData();\n    });\n    return {\n      data: data,\n      loading: loading,\n      error: error\n    };\n  }\n};","map":{"version":3,"mappings":";;;AAoBA,SAASA,GAAT,EAAcC,QAAd,EAAwBC,SAAxB,QAAyC,KAAzC;AACA,eAAe;EACbC,IAAI,EAAE,OADO;EAEbC,KAAK,EAAE,EAFM;EAIbC,KAJa,mBAIL;IACN,IAAMC,IAAG,GAAIN,GAAG,CAAC,IAAD,CAAhB;IACA,IAAMO,OAAM,GAAIP,GAAG,CAAC,IAAD,CAAnB;IACA,IAAMQ,KAAI,GAAIR,GAAG,CAAC,IAAD,CAAjB;;IAEA,SAASS,SAAT,GAAqB;MACjBF,OAAO,CAACG,KAAR,GAAgB,IAAhB,CADiB,CAEjB;MACA;;MACA,OAAOC,KAAK,CAAC,qCAAD,EAAwC;QAChDC,MAAM,EAAE,KADwC;QAEhDC,OAAO,EAAE;UACT,gBAAgB;QADP;MAFuC,CAAxC,CAAL,CAMFC,IANE,CAMG,aAAE,EAAK;QACb;QACA,IAAI,CAACC,GAAG,CAACC,EAAT,EAAa;UACT;UACA,IAAMR,MAAI,GAAI,IAAIS,KAAJ,CAAUF,GAAG,CAACG,UAAd,CAAd;;UACAV,MAAK,CAACW,IAAN,GAAaJ,GAAG,CAACI,IAAJ,EAAb;UACA,MAAMX,MAAN;QACJ;;QAEA,OAAOO,GAAG,CAACI,IAAJ,EAAP;MACC,CAhBE,EAiBFL,IAjBE,CAiBG,cAAG,EAAK;QACd;QACAR,IAAI,CAACI,KAAL,GAAaS,IAAI,CAACb,IAAlB;MACC,CApBE,WAqBI,aAAE,EAAK;QACdE,KAAK,CAACE,KAAN,GAAcU,GAAd,CADc,CAEd;;QACA,IAAIA,GAAG,CAACD,IAAR,EAAc;UACV,OAAOC,GAAG,CAACD,IAAJ,CAASL,IAAT,CAAc,cAAG,EAAK;YAC7B;YACAN,KAAK,CAACE,KAAN,CAAYW,OAAZ,GAAsBF,IAAI,CAACE,OAA3B;UACC,CAHM,CAAP;QAIJ;MACC,CA9BE,EA+BFP,IA/BE,CA+BG,YAAM;QACZP,OAAO,CAACG,KAAR,GAAgB,KAAhB;MACC,CAjCE,CAAP;IAkCR;;IAEIR,SAAS,CAAC,YAAM;MACdO,SAAS;IACV,CAFQ,CAAT;IAIA,OAAO;MACLH,IAAI,EAAJA,IADK;MAELC,OAAO,EAAPA,OAFK;MAGLC,KAAI,EAAJA;IAHK,CAAP;EAKF;AA1Da,CAAf","names":["ref","computed","onMounted","name","props","setup","data","loading","error","fetchData","value","fetch","method","headers","then","res","ok","Error","statusText","json","err","message"],"sourceRoot":"","sources":["/home/little/Documents/music_web/backandfrontsep/zhengdao-ui/src/components/Posts.vue"],"sourcesContent":["<template>\n  <ul v-if=\"!loading && data && data.length\">\n    <li v-for=\"post of data\">\n      <p><strong>{{post.title}}</strong></p>\n      <p>{{post.title}}</p>\n    </li>\n  </ul>\n\n  <p v-if=\"loading\">\n   Still loading..\n  </p>\n  <p v-if=\"error\">\n    error\n\n  </p>\n</template>\n\n\n\n<script>\nimport { ref, computed, onMounted } from \"vue\";\nexport default {\n  name: 'Posts',\n  props: {\n  },\n  setup() {\n    const data = ref(null);\n    const loading = ref(true);\n    const error = ref(null);\n\n    function fetchData() {\n        loading.value = true;\n        // I prefer to use fetch\n        // you can use use axios as an alternative\n        return fetch('http://jsonplaceholder.typicode.com', {\n            method: 'get',\n            headers: {\n            'content-type': 'application/json'\n            }\n        })\n            .then(res => {\n            // a non-200 response code\n            if (!res.ok) {\n                // create error instance with HTTP status text\n                const error = new Error(res.statusText);\n                error.json = res.json();\n                throw error;\n            }\n\n            return res.json();\n            })\n            .then(json => {\n            // set the response data\n            data.value = json.data;\n            })\n            .catch(err => {\n            error.value = err;\n            // In case a custom JSON error response was provided\n            if (err.json) {\n                return err.json.then(json => {\n                // set the JSON response message\n                error.value.message = json.message;\n                });\n            }\n            })\n            .then(() => {\n            loading.value = false;\n            });\n}\n\n    onMounted(() => {\n      fetchData();\n    });\n\n    return {\n      data,\n      loading,\n      error\n    };\n  }\n}\n</script>"]},"metadata":{},"sourceType":"module"}