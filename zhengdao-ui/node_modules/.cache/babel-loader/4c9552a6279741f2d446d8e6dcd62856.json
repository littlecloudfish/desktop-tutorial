{"ast":null,"code":"import _defineProperty from \"/home/little/Documents/music_web/startproj/zhengdao-ui/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.number.is-finite.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport { defineComponent, computed, ref, reactive, unref, watch, onBeforeUnmount, h, withModifiers } from 'vue';\nimport '../../../scrollbar/index.mjs';\nimport '../../../../utils/index.mjs';\nimport '../../../../hooks/index.mjs';\nimport { HORIZONTAL, ScrollbarDirKey, SCROLLBAR_MIN_SIZE } from '../defaults.mjs';\nimport { virtualizedScrollbarProps } from '../props.mjs';\nimport { renderThumbStyle } from '../utils.mjs';\nimport { useNamespace } from '../../../../hooks/use-namespace/index.mjs';\nimport { BAR_MAP } from '../../../scrollbar/src/util.mjs';\nimport { cAF, rAF } from '../../../../utils/raf.mjs';\nvar ScrollBar = defineComponent({\n  name: \"ElVirtualScrollBar\",\n  props: virtualizedScrollbarProps,\n  emits: [\"scroll\", \"start-move\", \"stop-move\"],\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit;\n    var GAP = computed(function () {\n      return props.startGap + props.endGap;\n    });\n    var nsVirtualScrollbar = useNamespace(\"virtual-scrollbar\");\n    var nsScrollbar = useNamespace(\"scrollbar\");\n    var trackRef = ref();\n    var thumbRef = ref();\n    var frameHandle = null;\n    var onselectstartStore = null;\n    var state = reactive({\n      isDragging: false,\n      traveled: 0\n    });\n    var bar = computed(function () {\n      return BAR_MAP[props.layout];\n    });\n    var trackSize = computed(function () {\n      return props.clientSize - unref(GAP);\n    });\n    var trackStyle = computed(function () {\n      var _ref2;\n\n      return _ref2 = {\n        position: \"absolute\",\n        width: \"\".concat(HORIZONTAL === props.layout ? trackSize.value : props.scrollbarSize, \"px\"),\n        height: \"\".concat(HORIZONTAL === props.layout ? props.scrollbarSize : trackSize.value, \"px\")\n      }, _defineProperty(_ref2, ScrollbarDirKey[props.layout], \"2px\"), _defineProperty(_ref2, \"right\", \"2px\"), _defineProperty(_ref2, \"bottom\", \"2px\"), _defineProperty(_ref2, \"borderRadius\", \"4px\"), _ref2;\n    });\n    var thumbSize = computed(function () {\n      var ratio = props.ratio;\n      var clientSize = props.clientSize;\n\n      if (ratio >= 100) {\n        return Number.POSITIVE_INFINITY;\n      }\n\n      if (ratio >= 50) {\n        return ratio * clientSize / 100;\n      }\n\n      var SCROLLBAR_MAX_SIZE = clientSize / 3;\n      return Math.floor(Math.min(Math.max(ratio * clientSize, SCROLLBAR_MIN_SIZE), SCROLLBAR_MAX_SIZE));\n    });\n    var thumbStyle = computed(function () {\n      if (!Number.isFinite(thumbSize.value)) {\n        return {\n          display: \"none\"\n        };\n      }\n\n      var thumb = \"\".concat(thumbSize.value, \"px\");\n      var style = renderThumbStyle({\n        bar: bar.value,\n        size: thumb,\n        move: state.traveled\n      }, props.layout);\n      return style;\n    });\n    var totalSteps = computed(function () {\n      return Math.floor(props.clientSize - thumbSize.value - unref(GAP));\n    });\n\n    var attachEvents = function attachEvents() {\n      window.addEventListener(\"mousemove\", onMouseMove);\n      window.addEventListener(\"mouseup\", onMouseUp);\n      var thumbEl = unref(thumbRef);\n      if (!thumbEl) return;\n      onselectstartStore = document.onselectstart;\n\n      document.onselectstart = function () {\n        return false;\n      };\n\n      thumbEl.addEventListener(\"touchmove\", onMouseMove);\n      thumbEl.addEventListener(\"touchend\", onMouseUp);\n    };\n\n    var detachEvents = function detachEvents() {\n      window.removeEventListener(\"mousemove\", onMouseMove);\n      window.removeEventListener(\"mouseup\", onMouseUp);\n      document.onselectstart = onselectstartStore;\n      onselectstartStore = null;\n      var thumbEl = unref(thumbRef);\n      if (!thumbEl) return;\n      thumbEl.removeEventListener(\"touchmove\", onMouseMove);\n      thumbEl.removeEventListener(\"touchend\", onMouseUp);\n    };\n\n    var onThumbMouseDown = function onThumbMouseDown(e) {\n      e.stopImmediatePropagation();\n\n      if (e.ctrlKey || [1, 2].includes(e.button)) {\n        return;\n      }\n\n      state.isDragging = true;\n      state[bar.value.axis] = e.currentTarget[bar.value.offset] - (e[bar.value.client] - e.currentTarget.getBoundingClientRect()[bar.value.direction]);\n      emit(\"start-move\");\n      attachEvents();\n    };\n\n    var onMouseUp = function onMouseUp() {\n      state.isDragging = false;\n      state[bar.value.axis] = 0;\n      emit(\"stop-move\");\n      detachEvents();\n    };\n\n    var onMouseMove = function onMouseMove(e) {\n      var isDragging = state.isDragging;\n      if (!isDragging) return;\n      if (!thumbRef.value || !trackRef.value) return;\n      var prevPage = state[bar.value.axis];\n      if (!prevPage) return;\n      cAF(frameHandle);\n      var offset = (trackRef.value.getBoundingClientRect()[bar.value.direction] - e[bar.value.client]) * -1;\n      var thumbClickPosition = thumbRef.value[bar.value.offset] - prevPage;\n      var distance = offset - thumbClickPosition;\n      frameHandle = rAF(function () {\n        state.traveled = Math.max(props.startGap, Math.min(distance, totalSteps.value));\n        emit(\"scroll\", distance, totalSteps.value);\n      });\n    };\n\n    var clickTrackHandler = function clickTrackHandler(e) {\n      var offset = Math.abs(e.target.getBoundingClientRect()[bar.value.direction] - e[bar.value.client]);\n      var thumbHalf = thumbRef.value[bar.value.offset] / 2;\n      var distance = offset - thumbHalf;\n      state.traveled = Math.max(0, Math.min(distance, totalSteps.value));\n      emit(\"scroll\", distance, totalSteps.value);\n    };\n\n    watch(function () {\n      return props.scrollFrom;\n    }, function (v) {\n      if (state.isDragging) return;\n      state.traveled = Math.ceil(v * totalSteps.value);\n    });\n    onBeforeUnmount(function () {\n      detachEvents();\n    });\n    return function () {\n      return h(\"div\", {\n        role: \"presentation\",\n        ref: trackRef,\n        \"class\": [nsVirtualScrollbar.b(), props[\"class\"], (props.alwaysOn || state.isDragging) && \"always-on\"],\n        style: trackStyle.value,\n        onMousedown: withModifiers(clickTrackHandler, [\"stop\", \"prevent\"]),\n        onTouchstartPrevent: onThumbMouseDown\n      }, h(\"div\", {\n        ref: thumbRef,\n        \"class\": nsScrollbar.e(\"thumb\"),\n        style: thumbStyle.value,\n        onMousedown: onThumbMouseDown\n      }, []));\n    };\n  }\n});\nexport { ScrollBar as default };","map":{"version":3,"mappings":"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","names":["ScrollBar","defineComponent","name","props","virtualizedScrollbarProps","emits","setup","emit","GAP","computed","startGap","endGap","nsVirtualScrollbar","useNamespace","nsScrollbar","trackRef","ref","thumbRef","frameHandle","onselectstartStore","state","reactive","isDragging","traveled","bar","BAR_MAP","layout","trackSize","clientSize","unref","trackStyle","position","width","HORIZONTAL","value","scrollbarSize","height","ScrollbarDirKey","thumbSize","ratio","Number","POSITIVE_INFINITY","SCROLLBAR_MAX_SIZE","Math","floor","min","max","SCROLLBAR_MIN_SIZE","thumbStyle","isFinite","display","thumb","style","renderThumbStyle","size","move","totalSteps","attachEvents","window","addEventListener","onMouseMove","onMouseUp","thumbEl","document","onselectstart","detachEvents","removeEventListener","onThumbMouseDown","e","stopImmediatePropagation","ctrlKey","includes","button","axis","currentTarget","offset","client","getBoundingClientRect","direction","prevPage","cAF","thumbClickPosition","distance","rAF","clickTrackHandler","abs","target","thumbHalf","watch","scrollFrom","v","ceil","onBeforeUnmount","h","role","b","alwaysOn","onMousedown","withModifiers","onTouchstartPrevent"],"sources":["../../../../../../../packages/components/virtual-list/src/components/scrollbar.ts"],"sourcesContent":["// @ts-nocheck\nimport {\n  computed,\n  defineComponent,\n  h,\n  onBeforeUnmount,\n  reactive,\n  ref,\n  unref,\n  watch,\n  withModifiers,\n} from 'vue'\nimport { BAR_MAP } from '@element-plus/components/scrollbar'\nimport { cAF, rAF } from '@element-plus/utils'\n\nimport { useNamespace } from '@element-plus/hooks'\nimport { HORIZONTAL, SCROLLBAR_MIN_SIZE, ScrollbarDirKey } from '../defaults'\nimport { virtualizedScrollbarProps } from '../props'\nimport { renderThumbStyle } from '../utils'\n\nimport type { CSSProperties } from 'vue'\n\nconst ScrollBar = defineComponent({\n  name: 'ElVirtualScrollBar',\n  props: virtualizedScrollbarProps,\n  emits: ['scroll', 'start-move', 'stop-move'],\n  setup(props, { emit }) {\n    const GAP = computed(() => props.startGap + props.endGap) // top 2 + bottom 2 | left 2 + right 2\n\n    const nsVirtualScrollbar = useNamespace('virtual-scrollbar')\n    const nsScrollbar = useNamespace('scrollbar')\n    // DOM refs\n    const trackRef = ref<HTMLElement>()\n    const thumbRef = ref<HTMLElement>()\n\n    // local variables\n    let frameHandle: null | number = null\n    let onselectstartStore: null | typeof document.onselectstart = null\n\n    // data\n    const state = reactive({\n      isDragging: false,\n      traveled: 0,\n    })\n\n    const bar = computed(() => BAR_MAP[props.layout])\n\n    const trackSize = computed(() => props.clientSize! - unref(GAP))\n\n    const trackStyle = computed<CSSProperties>(() => ({\n      position: 'absolute',\n      width: `${\n        HORIZONTAL === props.layout ? trackSize.value : props.scrollbarSize\n      }px`,\n      height: `${\n        HORIZONTAL === props.layout ? props.scrollbarSize : trackSize.value\n      }px`,\n      [ScrollbarDirKey[props.layout]]: '2px',\n      right: '2px',\n      bottom: '2px',\n      borderRadius: '4px',\n    }))\n\n    const thumbSize = computed(() => {\n      const ratio = props.ratio!\n      const clientSize = props.clientSize!\n      if (ratio >= 100) {\n        return Number.POSITIVE_INFINITY\n      }\n\n      if (ratio >= 50) {\n        return (ratio * clientSize) / 100\n      }\n\n      const SCROLLBAR_MAX_SIZE = clientSize / 3\n      return Math.floor(\n        Math.min(\n          Math.max(ratio * clientSize, SCROLLBAR_MIN_SIZE),\n          SCROLLBAR_MAX_SIZE\n        )\n      )\n    })\n\n    // const sizeRange = computed(() => props.size - thumbSize.value)\n\n    const thumbStyle = computed<CSSProperties>(() => {\n      if (!Number.isFinite(thumbSize.value)) {\n        return {\n          display: 'none',\n        }\n      }\n\n      const thumb = `${thumbSize.value}px`\n\n      const style: CSSProperties = renderThumbStyle(\n        {\n          bar: bar.value,\n          size: thumb,\n          move: state.traveled,\n        },\n        props.layout\n      )\n\n      return style\n    })\n\n    const totalSteps = computed(() =>\n      Math.floor(props.clientSize! - thumbSize.value - unref(GAP))\n    )\n\n    const attachEvents = () => {\n      window.addEventListener('mousemove', onMouseMove)\n      window.addEventListener('mouseup', onMouseUp)\n\n      const thumbEl = unref(thumbRef)\n\n      if (!thumbEl) return\n\n      onselectstartStore = document.onselectstart\n      document.onselectstart = () => false\n\n      thumbEl.addEventListener('touchmove', onMouseMove)\n      thumbEl.addEventListener('touchend', onMouseUp)\n    }\n\n    const detachEvents = () => {\n      window.removeEventListener('mousemove', onMouseMove)\n      window.removeEventListener('mouseup', onMouseUp)\n\n      document.onselectstart = onselectstartStore\n      onselectstartStore = null\n\n      const thumbEl = unref(thumbRef)\n      if (!thumbEl) return\n\n      thumbEl.removeEventListener('touchmove', onMouseMove)\n      thumbEl.removeEventListener('touchend', onMouseUp)\n    }\n\n    const onThumbMouseDown = (e: Event) => {\n      e.stopImmediatePropagation()\n      if (\n        (e as KeyboardEvent).ctrlKey ||\n        [1, 2].includes((e as MouseEvent).button)\n      ) {\n        return\n      }\n\n      state.isDragging = true\n      state[bar.value.axis] =\n        e.currentTarget![bar.value.offset] -\n        (e[bar.value.client] -\n          (e.currentTarget as HTMLElement).getBoundingClientRect()[\n            bar.value.direction\n          ])\n\n      emit('start-move')\n      attachEvents()\n    }\n\n    const onMouseUp = () => {\n      state.isDragging = false\n      state[bar.value.axis] = 0\n      emit('stop-move')\n      detachEvents()\n    }\n\n    const onMouseMove = (e: Event) => {\n      const { isDragging } = state\n      if (!isDragging) return\n      if (!thumbRef.value || !trackRef.value) return\n\n      const prevPage = state[bar.value.axis]\n      if (!prevPage) return\n\n      cAF(frameHandle!)\n      // using the current track's offset top/left - the current pointer's clientY/clientX\n      // to get the relative position of the pointer to the track.\n      const offset =\n        (trackRef.value.getBoundingClientRect()[bar.value.direction] -\n          e[bar.value.client]) *\n        -1\n\n      // find where the thumb was clicked on.\n      const thumbClickPosition = thumbRef.value[bar.value.offset] - prevPage\n      /**\n       *  +--------------+                                   +--------------+\n       *  |              -  <--------- thumb.offsetTop       |              |\n       *  |             |+|             <--+                 |              |\n       *  |              -                 |                 |              |\n       *  |   Content    |                 |                 |              |\n       *  |              |                 |                 |              |\n       *  |              |                 |                 |              |\n       *  |              |                 |                 |              -\n       *  |              |                 +-->              |             |+|\n       *  |              |                                   |              -\n       *  +--------------+                                   +--------------+\n       */\n\n      // using the current position - prev position to\n\n      const distance = offset - thumbClickPosition\n      // get how many steps in total.\n      // gap of 2 on top, 2 on bottom, in total 4.\n      // using totalSteps ÷ totalSize getting each step's size * distance to get the new\n      // scroll offset to scrollTo\n      frameHandle = rAF(() => {\n        state.traveled = Math.max(\n          props.startGap,\n          Math.min(\n            distance,\n            totalSteps.value // 2 is the top value\n          )\n        )\n        emit('scroll', distance, totalSteps.value)\n      })\n    }\n\n    const clickTrackHandler = (e: MouseEvent) => {\n      const offset = Math.abs(\n        (e.target as HTMLElement).getBoundingClientRect()[bar.value.direction] -\n          e[bar.value.client]\n      )\n      const thumbHalf = thumbRef.value![bar.value.offset] / 2\n      const distance = offset - thumbHalf\n\n      state.traveled = Math.max(0, Math.min(distance, totalSteps.value))\n      emit('scroll', distance, totalSteps.value)\n    }\n\n    watch(\n      () => props.scrollFrom,\n      (v) => {\n        if (state.isDragging) return\n        /**\n         *  this is simply mapping the current scrollbar offset\n         *\n         *  formula 1:\n         *    v = scrollOffset / (estimatedTotalSize - clientSize)\n         *    traveled = v * (clientSize - thumbSize - GAP) --> v * totalSteps\n         *\n         *  formula 2:\n         *    traveled = (v * clientSize) / (clientSize / totalSteps) --> (v * clientSize) * (totalSteps / clientSize) --> v * totalSteps\n         */\n        state.traveled = Math.ceil(v! * totalSteps.value)\n      }\n    )\n\n    onBeforeUnmount(() => {\n      detachEvents()\n    })\n\n    return () => {\n      return h(\n        'div',\n        {\n          role: 'presentation',\n          ref: trackRef,\n          class: [\n            nsVirtualScrollbar.b(),\n            props.class,\n            (props.alwaysOn || state.isDragging) && 'always-on',\n          ],\n          style: trackStyle.value,\n          onMousedown: withModifiers(clickTrackHandler, ['stop', 'prevent']),\n          onTouchstartPrevent: onThumbMouseDown,\n        },\n        h(\n          'div',\n          {\n            ref: thumbRef,\n            class: nsScrollbar.e('thumb'),\n            style: thumbStyle.value,\n            onMousedown: onThumbMouseDown,\n          },\n          []\n        )\n      )\n    }\n  },\n})\n\nexport default ScrollBar\n"]},"metadata":{},"sourceType":"module"}