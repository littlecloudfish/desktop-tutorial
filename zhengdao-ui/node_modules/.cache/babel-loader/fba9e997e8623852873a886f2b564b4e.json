{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport { computed, unref } from 'vue';\nimport { useGlobalConfig } from '../use-global-config/index.mjs';\nvar defaultNamespace = \"el\";\nvar statePrefix = \"is-\";\n\nvar _bem = function _bem(namespace, block, blockSuffix, element, modifier) {\n  var cls = \"\".concat(namespace, \"-\").concat(block);\n\n  if (blockSuffix) {\n    cls += \"-\".concat(blockSuffix);\n  }\n\n  if (element) {\n    cls += \"__\".concat(element);\n  }\n\n  if (modifier) {\n    cls += \"--\".concat(modifier);\n  }\n\n  return cls;\n};\n\nvar useNamespace = function useNamespace(block) {\n  var globalConfig = useGlobalConfig(\"namespace\");\n  var namespace = computed(function () {\n    return globalConfig.value || defaultNamespace;\n  });\n\n  var b = function b() {\n    var blockSuffix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return _bem(unref(namespace), block, blockSuffix, \"\", \"\");\n  };\n\n  var e = function e(element) {\n    return element ? _bem(unref(namespace), block, \"\", element, \"\") : \"\";\n  };\n\n  var m = function m(modifier) {\n    return modifier ? _bem(unref(namespace), block, \"\", \"\", modifier) : \"\";\n  };\n\n  var be = function be(blockSuffix, element) {\n    return blockSuffix && element ? _bem(unref(namespace), block, blockSuffix, element, \"\") : \"\";\n  };\n\n  var em = function em(element, modifier) {\n    return element && modifier ? _bem(unref(namespace), block, \"\", element, modifier) : \"\";\n  };\n\n  var bm = function bm(blockSuffix, modifier) {\n    return blockSuffix && modifier ? _bem(unref(namespace), block, blockSuffix, \"\", modifier) : \"\";\n  };\n\n  var bem = function bem(blockSuffix, element, modifier) {\n    return blockSuffix && element && modifier ? _bem(unref(namespace), block, blockSuffix, element, modifier) : \"\";\n  };\n\n  var is = function is(name) {\n    var state = (arguments.length <= 1 ? 0 : arguments.length - 1) >= 1 ? arguments.length <= 1 ? undefined : arguments[1] : true;\n    return name && state ? \"\".concat(statePrefix).concat(name) : \"\";\n  };\n\n  var cssVar = function cssVar(object) {\n    var styles = {};\n\n    for (var key in object) {\n      if (object[key]) {\n        styles[\"--\".concat(namespace.value, \"-\").concat(key)] = object[key];\n      }\n    }\n\n    return styles;\n  };\n\n  var cssVarBlock = function cssVarBlock(object) {\n    var styles = {};\n\n    for (var key in object) {\n      if (object[key]) {\n        styles[\"--\".concat(namespace.value, \"-\").concat(block, \"-\").concat(key)] = object[key];\n      }\n    }\n\n    return styles;\n  };\n\n  var cssVarName = function cssVarName(name) {\n    return \"--\".concat(namespace.value, \"-\").concat(name);\n  };\n\n  var cssVarBlockName = function cssVarBlockName(name) {\n    return \"--\".concat(namespace.value, \"-\").concat(block, \"-\").concat(name);\n  };\n\n  return {\n    namespace: namespace,\n    b: b,\n    e: e,\n    m: m,\n    be: be,\n    em: em,\n    bm: bm,\n    bem: bem,\n    is: is,\n    cssVar: cssVar,\n    cssVarName: cssVarName,\n    cssVarBlock: cssVarBlock,\n    cssVarBlockName: cssVarBlockName\n  };\n};\n\nexport { defaultNamespace, useNamespace };","map":{"version":3,"mappings":"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","names":["defaultNamespace","statePrefix","_bem","namespace","block","blockSuffix","element","modifier","cls","useNamespace","globalConfig","useGlobalConfig","computed","value","b","unref","e","m","be","em","bm","bem","is","name","state","cssVar","object","styles","key","cssVarBlock","cssVarName","cssVarBlockName"],"sources":["../../../../../packages/hooks/use-namespace/index.ts"],"sourcesContent":["import { computed, unref } from 'vue'\nimport { useGlobalConfig } from '../use-global-config'\n\nexport const defaultNamespace = 'el'\nconst statePrefix = 'is-'\n\nconst _bem = (\n  namespace: string,\n  block: string,\n  blockSuffix: string,\n  element: string,\n  modifier: string\n) => {\n  let cls = `${namespace}-${block}`\n  if (blockSuffix) {\n    cls += `-${blockSuffix}`\n  }\n  if (element) {\n    cls += `__${element}`\n  }\n  if (modifier) {\n    cls += `--${modifier}`\n  }\n  return cls\n}\n\nexport const useNamespace = (block: string) => {\n  const globalConfig = useGlobalConfig('namespace')\n  const namespace = computed(() => globalConfig.value || defaultNamespace)\n  const b = (blockSuffix = '') =>\n    _bem(unref(namespace), block, blockSuffix, '', '')\n  const e = (element?: string) =>\n    element ? _bem(unref(namespace), block, '', element, '') : ''\n  const m = (modifier?: string) =>\n    modifier ? _bem(unref(namespace), block, '', '', modifier) : ''\n  const be = (blockSuffix?: string, element?: string) =>\n    blockSuffix && element\n      ? _bem(unref(namespace), block, blockSuffix, element, '')\n      : ''\n  const em = (element?: string, modifier?: string) =>\n    element && modifier\n      ? _bem(unref(namespace), block, '', element, modifier)\n      : ''\n  const bm = (blockSuffix?: string, modifier?: string) =>\n    blockSuffix && modifier\n      ? _bem(unref(namespace), block, blockSuffix, '', modifier)\n      : ''\n  const bem = (blockSuffix?: string, element?: string, modifier?: string) =>\n    blockSuffix && element && modifier\n      ? _bem(unref(namespace), block, blockSuffix, element, modifier)\n      : ''\n  const is: {\n    (name: string, state: boolean | undefined): string\n    (name: string): string\n  } = (name: string, ...args: [boolean | undefined] | []) => {\n    const state = args.length >= 1 ? args[0]! : true\n    return name && state ? `${statePrefix}${name}` : ''\n  }\n\n  // for css var\n  // --el-xxx: value;\n  const cssVar = (object: Record<string, string>) => {\n    const styles: Record<string, string> = {}\n    for (const key in object) {\n      if (object[key]) {\n        styles[`--${namespace.value}-${key}`] = object[key]\n      }\n    }\n    return styles\n  }\n  // with block\n  const cssVarBlock = (object: Record<string, string>) => {\n    const styles: Record<string, string> = {}\n    for (const key in object) {\n      if (object[key]) {\n        styles[`--${namespace.value}-${block}-${key}`] = object[key]\n      }\n    }\n    return styles\n  }\n\n  const cssVarName = (name: string) => `--${namespace.value}-${name}`\n  const cssVarBlockName = (name: string) =>\n    `--${namespace.value}-${block}-${name}`\n\n  return {\n    namespace,\n    b,\n    e,\n    m,\n    be,\n    em,\n    bm,\n    bem,\n    is,\n    // css\n    cssVar,\n    cssVarName,\n    cssVarBlock,\n    cssVarBlockName,\n  }\n}\n\nexport type UseNamespaceReturn = ReturnType<typeof useNamespace>\n"]},"metadata":{},"sourceType":"module"}