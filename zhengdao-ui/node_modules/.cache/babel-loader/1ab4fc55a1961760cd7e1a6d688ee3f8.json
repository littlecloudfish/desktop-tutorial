{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport { defineComponent, inject, ref, computed, onBeforeUnmount, toRef, openBlock, createBlock, Transition, unref, withCtx, withDirectives, createElementVNode, normalizeClass, normalizeStyle, vShow } from 'vue';\nimport { isClient, useEventListener } from '@vueuse/core';\nimport '../../../tokens/index.mjs';\nimport '../../../utils/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { BAR_MAP, renderThumbStyle } from './util.mjs';\nimport { thumbProps } from './thumb.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { scrollbarContextKey } from '../../../tokens/scrollbar.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { throwError } from '../../../utils/error.mjs';\n\nvar _sfc_main = /* @__PURE__ */defineComponent({\n  __name: \"thumb\",\n  props: thumbProps,\n  setup: function setup(__props) {\n    var props = __props;\n    var COMPONENT_NAME = \"Thumb\";\n    var scrollbar = inject(scrollbarContextKey);\n    var ns = useNamespace(\"scrollbar\");\n    if (!scrollbar) throwError(COMPONENT_NAME, \"can not inject scrollbar context\");\n    var instance = ref();\n    var thumb = ref();\n    var thumbState = ref({});\n    var visible = ref(false);\n    var cursorDown = false;\n    var cursorLeave = false;\n    var originalOnSelectStart = isClient ? document.onselectstart : null;\n    var bar = computed(function () {\n      return BAR_MAP[props.vertical ? \"vertical\" : \"horizontal\"];\n    });\n    var thumbStyle = computed(function () {\n      return renderThumbStyle({\n        size: props.size,\n        move: props.move,\n        bar: bar.value\n      });\n    });\n    var offsetRatio = computed(function () {\n      return Math.pow(instance.value[bar.value.offset], 2) / scrollbar.wrapElement[bar.value.scrollSize] / props.ratio / thumb.value[bar.value.offset];\n    });\n\n    var clickThumbHandler = function clickThumbHandler(e) {\n      var _a;\n\n      e.stopPropagation();\n      if (e.ctrlKey || [1, 2].includes(e.button)) return;\n      (_a = window.getSelection()) == null ? void 0 : _a.removeAllRanges();\n      startDrag(e);\n      var el = e.currentTarget;\n      if (!el) return;\n      thumbState.value[bar.value.axis] = el[bar.value.offset] - (e[bar.value.client] - el.getBoundingClientRect()[bar.value.direction]);\n    };\n\n    var clickTrackHandler = function clickTrackHandler(e) {\n      if (!thumb.value || !instance.value || !scrollbar.wrapElement) return;\n      var offset = Math.abs(e.target.getBoundingClientRect()[bar.value.direction] - e[bar.value.client]);\n      var thumbHalf = thumb.value[bar.value.offset] / 2;\n      var thumbPositionPercentage = (offset - thumbHalf) * 100 * offsetRatio.value / instance.value[bar.value.offset];\n      scrollbar.wrapElement[bar.value.scroll] = thumbPositionPercentage * scrollbar.wrapElement[bar.value.scrollSize] / 100;\n    };\n\n    var startDrag = function startDrag(e) {\n      e.stopImmediatePropagation();\n      cursorDown = true;\n      document.addEventListener(\"mousemove\", mouseMoveDocumentHandler);\n      document.addEventListener(\"mouseup\", mouseUpDocumentHandler);\n      originalOnSelectStart = document.onselectstart;\n\n      document.onselectstart = function () {\n        return false;\n      };\n    };\n\n    var mouseMoveDocumentHandler = function mouseMoveDocumentHandler(e) {\n      if (!instance.value || !thumb.value) return;\n      if (cursorDown === false) return;\n      var prevPage = thumbState.value[bar.value.axis];\n      if (!prevPage) return;\n      var offset = (instance.value.getBoundingClientRect()[bar.value.direction] - e[bar.value.client]) * -1;\n      var thumbClickPosition = thumb.value[bar.value.offset] - prevPage;\n      var thumbPositionPercentage = (offset - thumbClickPosition) * 100 * offsetRatio.value / instance.value[bar.value.offset];\n      scrollbar.wrapElement[bar.value.scroll] = thumbPositionPercentage * scrollbar.wrapElement[bar.value.scrollSize] / 100;\n    };\n\n    var mouseUpDocumentHandler = function mouseUpDocumentHandler() {\n      cursorDown = false;\n      thumbState.value[bar.value.axis] = 0;\n      document.removeEventListener(\"mousemove\", mouseMoveDocumentHandler);\n      document.removeEventListener(\"mouseup\", mouseUpDocumentHandler);\n      restoreOnselectstart();\n      if (cursorLeave) visible.value = false;\n    };\n\n    var mouseMoveScrollbarHandler = function mouseMoveScrollbarHandler() {\n      cursorLeave = false;\n      visible.value = !!props.size;\n    };\n\n    var mouseLeaveScrollbarHandler = function mouseLeaveScrollbarHandler() {\n      cursorLeave = true;\n      visible.value = cursorDown;\n    };\n\n    onBeforeUnmount(function () {\n      restoreOnselectstart();\n      document.removeEventListener(\"mouseup\", mouseUpDocumentHandler);\n    });\n\n    var restoreOnselectstart = function restoreOnselectstart() {\n      if (document.onselectstart !== originalOnSelectStart) document.onselectstart = originalOnSelectStart;\n    };\n\n    useEventListener(toRef(scrollbar, \"scrollbarElement\"), \"mousemove\", mouseMoveScrollbarHandler);\n    useEventListener(toRef(scrollbar, \"scrollbarElement\"), \"mouseleave\", mouseLeaveScrollbarHandler);\n    return function (_ctx, _cache) {\n      return openBlock(), createBlock(Transition, {\n        name: unref(ns).b(\"fade\"),\n        persisted: \"\"\n      }, {\n        \"default\": withCtx(function () {\n          return [withDirectives(createElementVNode(\"div\", {\n            ref_key: \"instance\",\n            ref: instance,\n            \"class\": normalizeClass([unref(ns).e(\"bar\"), unref(ns).is(unref(bar).key)]),\n            onMousedown: clickTrackHandler\n          }, [createElementVNode(\"div\", {\n            ref_key: \"thumb\",\n            ref: thumb,\n            \"class\": normalizeClass(unref(ns).e(\"thumb\")),\n            style: normalizeStyle(unref(thumbStyle)),\n            onMousedown: clickThumbHandler\n          }, null, 38)], 34), [[vShow, _ctx.always || visible.value]])];\n        }),\n        _: 1\n      }, 8, [\"name\"]);\n    };\n  }\n});\n\nvar Thumb = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/scrollbar/src/thumb.vue\"]]);\n\nexport { Thumb as default };","map":{"version":3,"mappings":"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","names":["COMPONENT_NAME","inject","scrollbarContextKey","useNamespace","scrollbar","throwError","instance","ref","thumb","cursorDown","cursorLeave","isClient","onselectstart","bar","computed","BAR_MAP","props","renderThumbStyle","size","move","value","offset","wrapElement","scrollSize","clickThumbHandler","e","_a","startDrag","el","thumbState","clickTrackHandler","getBoundingClientRect","thumbHalf","offsetRatio","document","mouseMoveDocumentHandler","mouseUpDocumentHandler","originalOnSelectStart","prevPage","thumbClickPosition","restoreOnselectstart","visible","onBeforeUnmount","useEventListener","toRef","mouseMoveScrollbarHandler"],"sources":["../../../../../../packages/components/scrollbar/src/thumb.vue"],"sourcesContent":["<template>\n  <transition :name=\"ns.b('fade')\">\n    <div\n      v-show=\"always || visible\"\n      ref=\"instance\"\n      :class=\"[ns.e('bar'), ns.is(bar.key)]\"\n      @mousedown=\"clickTrackHandler\"\n    >\n      <div\n        ref=\"thumb\"\n        :class=\"ns.e('thumb')\"\n        :style=\"thumbStyle\"\n        @mousedown=\"clickThumbHandler\"\n      />\n    </div>\n  </transition>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, inject, onBeforeUnmount, ref, toRef } from 'vue'\nimport { isClient, useEventListener } from '@vueuse/core'\nimport { scrollbarContextKey } from '@element-plus/tokens'\nimport { throwError } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport { BAR_MAP, renderThumbStyle } from './util'\nimport { thumbProps } from './thumb'\n\nconst COMPONENT_NAME = 'Thumb'\nconst props = defineProps(thumbProps)\n\nconst scrollbar = inject(scrollbarContextKey)\nconst ns = useNamespace('scrollbar')\n\nif (!scrollbar) throwError(COMPONENT_NAME, 'can not inject scrollbar context')\n\nconst instance = ref<HTMLDivElement>()\nconst thumb = ref<HTMLDivElement>()\n\nconst thumbState = ref<Partial<Record<'X' | 'Y', number>>>({})\nconst visible = ref(false)\n\nlet cursorDown = false\nlet cursorLeave = false\nlet originalOnSelectStart:\n  | ((this: GlobalEventHandlers, ev: Event) => any)\n  | null = isClient ? document.onselectstart : null\n\nconst bar = computed(() => BAR_MAP[props.vertical ? 'vertical' : 'horizontal'])\n\nconst thumbStyle = computed(() =>\n  renderThumbStyle({\n    size: props.size,\n    move: props.move,\n    bar: bar.value,\n  })\n)\n\nconst offsetRatio = computed(\n  () =>\n    // offsetRatioX = original width of thumb / current width of thumb / ratioX\n    // offsetRatioY = original height of thumb / current height of thumb / ratioY\n    // instance height = wrap height - GAP\n    instance.value![bar.value.offset] ** 2 /\n    scrollbar.wrapElement![bar.value.scrollSize] /\n    props.ratio /\n    thumb.value![bar.value.offset]\n)\n\nconst clickThumbHandler = (e: MouseEvent) => {\n  // prevent click event of middle and right button\n  e.stopPropagation()\n  if (e.ctrlKey || [1, 2].includes(e.button)) return\n\n  window.getSelection()?.removeAllRanges()\n  startDrag(e)\n\n  const el = e.currentTarget as HTMLDivElement\n  if (!el) return\n  thumbState.value[bar.value.axis] =\n    el[bar.value.offset] -\n    (e[bar.value.client] - el.getBoundingClientRect()[bar.value.direction])\n}\n\nconst clickTrackHandler = (e: MouseEvent) => {\n  if (!thumb.value || !instance.value || !scrollbar.wrapElement) return\n\n  const offset = Math.abs(\n    (e.target as HTMLElement).getBoundingClientRect()[bar.value.direction] -\n      e[bar.value.client]\n  )\n  const thumbHalf = thumb.value[bar.value.offset] / 2\n  const thumbPositionPercentage =\n    ((offset - thumbHalf) * 100 * offsetRatio.value) /\n    instance.value[bar.value.offset]\n\n  scrollbar.wrapElement[bar.value.scroll] =\n    (thumbPositionPercentage * scrollbar.wrapElement[bar.value.scrollSize]) /\n    100\n}\n\nconst startDrag = (e: MouseEvent) => {\n  e.stopImmediatePropagation()\n  cursorDown = true\n  document.addEventListener('mousemove', mouseMoveDocumentHandler)\n  document.addEventListener('mouseup', mouseUpDocumentHandler)\n  originalOnSelectStart = document.onselectstart\n  document.onselectstart = () => false\n}\n\nconst mouseMoveDocumentHandler = (e: MouseEvent) => {\n  if (!instance.value || !thumb.value) return\n  if (cursorDown === false) return\n\n  const prevPage = thumbState.value[bar.value.axis]\n  if (!prevPage) return\n\n  const offset =\n    (instance.value.getBoundingClientRect()[bar.value.direction] -\n      e[bar.value.client]) *\n    -1\n  const thumbClickPosition = thumb.value[bar.value.offset] - prevPage\n  const thumbPositionPercentage =\n    ((offset - thumbClickPosition) * 100 * offsetRatio.value) /\n    instance.value[bar.value.offset]\n  scrollbar.wrapElement[bar.value.scroll] =\n    (thumbPositionPercentage * scrollbar.wrapElement[bar.value.scrollSize]) /\n    100\n}\n\nconst mouseUpDocumentHandler = () => {\n  cursorDown = false\n  thumbState.value[bar.value.axis] = 0\n  document.removeEventListener('mousemove', mouseMoveDocumentHandler)\n  document.removeEventListener('mouseup', mouseUpDocumentHandler)\n  restoreOnselectstart()\n  if (cursorLeave) visible.value = false\n}\n\nconst mouseMoveScrollbarHandler = () => {\n  cursorLeave = false\n  visible.value = !!props.size\n}\n\nconst mouseLeaveScrollbarHandler = () => {\n  cursorLeave = true\n  visible.value = cursorDown\n}\n\nonBeforeUnmount(() => {\n  restoreOnselectstart()\n  document.removeEventListener('mouseup', mouseUpDocumentHandler)\n})\n\nconst restoreOnselectstart = () => {\n  if (document.onselectstart !== originalOnSelectStart)\n    document.onselectstart = originalOnSelectStart\n}\n\nuseEventListener(\n  toRef(scrollbar, 'scrollbarElement'),\n  'mousemove',\n  mouseMoveScrollbarHandler\n)\nuseEventListener(\n  toRef(scrollbar, 'scrollbarElement'),\n  'mouseleave',\n  mouseLeaveScrollbarHandler\n)\n</script>\n"]},"metadata":{},"sourceType":"module"}