{"ast":null,"code":"import _defineProperty from \"/home/little/Documents/music_web/backandfrontsep/zhengdao-ui/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _regeneratorRuntime from \"/home/little/Documents/music_web/backandfrontsep/zhengdao-ui/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/little/Documents/music_web/backandfrontsep/zhengdao-ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\nvar _checkboxEmits, _checkboxGroupEmits;\n\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport { inject, computed, ref, getCurrentInstance, nextTick, watch } from 'vue';\nimport { toTypeString, isString, isArray } from '@vue/shared';\nimport '../../../constants/index.mjs';\nimport '../../../tokens/index.mjs';\nimport '../../../hooks/index.mjs';\nimport '../../../utils/index.mjs';\nimport { useSizeProp, useSize } from '../../../hooks/use-common-props/index.mjs';\nimport { formContextKey, formItemContextKey } from '../../../tokens/form.mjs';\nimport { useFormItemInputId } from '../../../hooks/use-form-item/index.mjs';\nimport { UPDATE_MODEL_EVENT } from '../../../constants/event.mjs';\nimport { debugWarn } from '../../../utils/error.mjs';\nimport { isNumber, isBoolean } from '@vueuse/core';\nvar useCheckboxGroupProps = {\n  modelValue: {\n    type: Array,\n    \"default\": function _default() {\n      return [];\n    }\n  },\n  disabled: Boolean,\n  min: {\n    type: Number,\n    \"default\": void 0\n  },\n  max: {\n    type: Number,\n    \"default\": void 0\n  },\n  size: useSizeProp,\n  id: {\n    type: String,\n    \"default\": void 0\n  },\n  label: {\n    type: String,\n    \"default\": void 0\n  },\n  fill: {\n    type: String,\n    \"default\": void 0\n  },\n  textColor: {\n    type: String,\n    \"default\": void 0\n  },\n  tag: {\n    type: String,\n    \"default\": \"div\"\n  },\n  validateEvent: {\n    type: Boolean,\n    \"default\": true\n  }\n};\nvar checkboxProps = {\n  modelValue: {\n    type: [Number, String, Boolean],\n    \"default\": function _default() {\n      return void 0;\n    }\n  },\n  label: {\n    type: [String, Boolean, Number, Object]\n  },\n  indeterminate: Boolean,\n  disabled: Boolean,\n  checked: Boolean,\n  name: {\n    type: String,\n    \"default\": void 0\n  },\n  trueLabel: {\n    type: [String, Number],\n    \"default\": void 0\n  },\n  falseLabel: {\n    type: [String, Number],\n    \"default\": void 0\n  },\n  id: {\n    type: String,\n    \"default\": void 0\n  },\n  controls: {\n    type: String,\n    \"default\": void 0\n  },\n  border: Boolean,\n  size: useSizeProp,\n  tabindex: [String, Number],\n  validateEvent: {\n    type: Boolean,\n    \"default\": true\n  }\n};\n\nvar useCheckboxGroup = function useCheckboxGroup() {\n  var elForm = inject(formContextKey, {});\n  var elFormItem = inject(formItemContextKey, {});\n  var checkboxGroup = inject(\"CheckboxGroup\", {});\n  var isGroup = computed(function () {\n    return checkboxGroup && (checkboxGroup == null ? void 0 : checkboxGroup.name) === \"ElCheckboxGroup\";\n  });\n  var elFormItemSize = computed(function () {\n    return elFormItem.size;\n  });\n  return {\n    isGroup: isGroup,\n    checkboxGroup: checkboxGroup,\n    elForm: elForm,\n    elFormItemSize: elFormItemSize,\n    elFormItem: elFormItem\n  };\n};\n\nvar useCheckboxGroupId = function useCheckboxGroupId(props, _ref) {\n  var elFormItem = _ref.elFormItem;\n\n  var _useFormItemInputId = useFormItemInputId(props, {\n    formItemContext: elFormItem\n  }),\n      groupId = _useFormItemInputId.inputId,\n      isLabeledByFormItem = _useFormItemInputId.isLabeledByFormItem;\n\n  return {\n    isLabeledByFormItem: isLabeledByFormItem,\n    groupId: groupId\n  };\n};\n\nvar useModel = function useModel(props) {\n  var selfModel = ref(false);\n\n  var _getCurrentInstance = getCurrentInstance(),\n      emit = _getCurrentInstance.emit;\n\n  var _useCheckboxGroup = useCheckboxGroup(),\n      isGroup = _useCheckboxGroup.isGroup,\n      checkboxGroup = _useCheckboxGroup.checkboxGroup,\n      elFormItem = _useCheckboxGroup.elFormItem;\n\n  var isLimitExceeded = ref(false);\n  var model = computed({\n    get: function get() {\n      var _a, _b;\n\n      return isGroup.value ? (_a = checkboxGroup.modelValue) == null ? void 0 : _a.value : (_b = props.modelValue) != null ? _b : selfModel.value;\n    },\n    set: function set(val) {\n      var _a;\n\n      if (isGroup.value && Array.isArray(val)) {\n        isLimitExceeded.value = checkboxGroup.max !== void 0 && val.length > checkboxGroup.max.value;\n        isLimitExceeded.value === false && ((_a = checkboxGroup == null ? void 0 : checkboxGroup.changeEvent) == null ? void 0 : _a.call(checkboxGroup, val));\n      } else {\n        emit(UPDATE_MODEL_EVENT, val);\n        selfModel.value = val;\n      }\n    }\n  });\n  return {\n    model: model,\n    isGroup: isGroup,\n    isLimitExceeded: isLimitExceeded,\n    elFormItem: elFormItem\n  };\n};\n\nvar useCheckboxStatus = function useCheckboxStatus(props, slots, _ref2) {\n  var model = _ref2.model;\n\n  var _useCheckboxGroup2 = useCheckboxGroup(),\n      isGroup = _useCheckboxGroup2.isGroup,\n      checkboxGroup = _useCheckboxGroup2.checkboxGroup;\n\n  var focus = ref(false);\n  var size = useSize(checkboxGroup == null ? void 0 : checkboxGroup.checkboxGroupSize, {\n    prop: true\n  });\n  var isChecked = computed(function () {\n    var value = model.value;\n\n    if (toTypeString(value) === \"[object Boolean]\") {\n      return value;\n    } else if (Array.isArray(value)) {\n      return value.includes(props.label);\n    } else if (value !== null && value !== void 0) {\n      return value === props.trueLabel;\n    } else {\n      return !!value;\n    }\n  });\n  var checkboxSize = useSize(computed(function () {\n    var _a;\n\n    return isGroup.value ? (_a = checkboxGroup == null ? void 0 : checkboxGroup.checkboxGroupSize) == null ? void 0 : _a.value : void 0;\n  }));\n  var hasOwnLabel = computed(function () {\n    return !!(slots[\"default\"] || props.label);\n  });\n  return {\n    isChecked: isChecked,\n    focus: focus,\n    size: size,\n    checkboxSize: checkboxSize,\n    hasOwnLabel: hasOwnLabel\n  };\n};\n\nvar useDisabled = function useDisabled(props, _ref3) {\n  var model = _ref3.model,\n      isChecked = _ref3.isChecked;\n\n  var _useCheckboxGroup3 = useCheckboxGroup(),\n      elForm = _useCheckboxGroup3.elForm,\n      isGroup = _useCheckboxGroup3.isGroup,\n      checkboxGroup = _useCheckboxGroup3.checkboxGroup;\n\n  var isLimitDisabled = computed(function () {\n    var _a, _b;\n\n    var max = (_a = checkboxGroup.max) == null ? void 0 : _a.value;\n    var min = (_b = checkboxGroup.min) == null ? void 0 : _b.value;\n    return !!(max || min) && model.value.length >= max && !isChecked.value || model.value.length <= min && isChecked.value;\n  });\n  var isDisabled = computed(function () {\n    var _a, _b;\n\n    var disabled = props.disabled || (elForm == null ? void 0 : elForm.disabled);\n    return (_b = isGroup.value ? ((_a = checkboxGroup.disabled) == null ? void 0 : _a.value) || disabled || isLimitDisabled.value : disabled) != null ? _b : false;\n  });\n  return {\n    isDisabled: isDisabled,\n    isLimitDisabled: isLimitDisabled\n  };\n};\n\nvar setStoreValue = function setStoreValue(props, _ref4) {\n  var model = _ref4.model;\n\n  function addToStore() {\n    if (Array.isArray(model.value) && !model.value.includes(props.label)) {\n      model.value.push(props.label);\n    } else {\n      model.value = props.trueLabel || true;\n    }\n  }\n\n  props.checked && addToStore();\n};\n\nvar useEvent = function useEvent(props, _ref5) {\n  var model = _ref5.model,\n      isLimitExceeded = _ref5.isLimitExceeded,\n      hasOwnLabel = _ref5.hasOwnLabel,\n      isDisabled = _ref5.isDisabled,\n      isLabeledByFormItem = _ref5.isLabeledByFormItem;\n\n  var _useCheckboxGroup4 = useCheckboxGroup(),\n      elFormItem = _useCheckboxGroup4.elFormItem,\n      checkboxGroup = _useCheckboxGroup4.checkboxGroup;\n\n  var _getCurrentInstance2 = getCurrentInstance(),\n      emit = _getCurrentInstance2.emit;\n\n  function getLabeledValue(value) {\n    var _a, _b;\n\n    return value === props.trueLabel || value === true ? (_a = props.trueLabel) != null ? _a : true : (_b = props.falseLabel) != null ? _b : false;\n  }\n\n  function emitChangeEvent(checked, e) {\n    emit(\"change\", getLabeledValue(checked), e);\n  }\n\n  function handleChange(e) {\n    if (isLimitExceeded.value) return;\n    var target = e.target;\n    emit(\"change\", getLabeledValue(target.checked), e);\n  }\n\n  function onClickRoot(_x) {\n    return _onClickRoot.apply(this, arguments);\n  }\n\n  function _onClickRoot() {\n    _onClickRoot = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(e) {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!isLimitExceeded.value) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 2:\n              if (!(!hasOwnLabel.value && !isDisabled.value && isLabeledByFormItem.value)) {\n                _context.next = 7;\n                break;\n              }\n\n              model.value = getLabeledValue([false, props.falseLabel].includes(model.value));\n              _context.next = 6;\n              return nextTick();\n\n            case 6:\n              emitChangeEvent(model.value, e);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _onClickRoot.apply(this, arguments);\n  }\n\n  var validateEvent = computed(function () {\n    var _a;\n\n    return ((_a = checkboxGroup.validateEvent) == null ? void 0 : _a.value) || props.validateEvent;\n  });\n  watch(function () {\n    return props.modelValue;\n  }, function () {\n    var _a;\n\n    if (validateEvent.value) {\n      (_a = elFormItem == null ? void 0 : elFormItem.validate) == null ? void 0 : _a.call(elFormItem, \"change\")[\"catch\"](function (err) {\n        return debugWarn(err);\n      });\n    }\n  });\n  return {\n    handleChange: handleChange,\n    onClickRoot: onClickRoot\n  };\n};\n\nvar checkboxEmits = (_checkboxEmits = {}, _defineProperty(_checkboxEmits, UPDATE_MODEL_EVENT, function (val) {\n  return isString(val) || isNumber(val) || isBoolean(val);\n}), _defineProperty(_checkboxEmits, \"change\", function change(val) {\n  return isString(val) || isNumber(val) || isBoolean(val);\n}), _checkboxEmits);\nvar checkboxGroupEmits = (_checkboxGroupEmits = {}, _defineProperty(_checkboxGroupEmits, UPDATE_MODEL_EVENT, function (val) {\n  return isArray(val);\n}), _defineProperty(_checkboxGroupEmits, \"change\", function change(val) {\n  return isArray(val);\n}), _checkboxGroupEmits);\n\nvar useCheckbox = function useCheckbox(props, slots) {\n  var _useModel = useModel(props),\n      model = _useModel.model,\n      isGroup = _useModel.isGroup,\n      isLimitExceeded = _useModel.isLimitExceeded,\n      elFormItem = _useModel.elFormItem;\n\n  var _useCheckboxStatus = useCheckboxStatus(props, slots, {\n    model: model\n  }),\n      focus = _useCheckboxStatus.focus,\n      size = _useCheckboxStatus.size,\n      isChecked = _useCheckboxStatus.isChecked,\n      checkboxSize = _useCheckboxStatus.checkboxSize,\n      hasOwnLabel = _useCheckboxStatus.hasOwnLabel;\n\n  var _useDisabled = useDisabled(props, {\n    model: model,\n    isChecked: isChecked\n  }),\n      isDisabled = _useDisabled.isDisabled;\n\n  var _useFormItemInputId2 = useFormItemInputId(props, {\n    formItemContext: elFormItem,\n    disableIdGeneration: hasOwnLabel,\n    disableIdManagement: isGroup\n  }),\n      inputId = _useFormItemInputId2.inputId,\n      isLabeledByFormItem = _useFormItemInputId2.isLabeledByFormItem;\n\n  var _useEvent = useEvent(props, {\n    model: model,\n    isLimitExceeded: isLimitExceeded,\n    hasOwnLabel: hasOwnLabel,\n    isDisabled: isDisabled,\n    isLabeledByFormItem: isLabeledByFormItem\n  }),\n      handleChange = _useEvent.handleChange,\n      onClickRoot = _useEvent.onClickRoot;\n\n  setStoreValue(props, {\n    model: model\n  });\n  return {\n    elFormItem: elFormItem,\n    inputId: inputId,\n    isLabeledByFormItem: isLabeledByFormItem,\n    isChecked: isChecked,\n    isDisabled: isDisabled,\n    isGroup: isGroup,\n    checkboxSize: checkboxSize,\n    hasOwnLabel: hasOwnLabel,\n    model: model,\n    handleChange: handleChange,\n    onClickRoot: onClickRoot,\n    focus: focus,\n    size: size\n  };\n};\n\nexport { checkboxEmits, checkboxGroupEmits, checkboxProps, useCheckbox, useCheckboxGroup, useCheckboxGroupId, useCheckboxGroupProps };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAYY,IAACA,qBAAqB,GAAG;EACnCC,UAAU,EAAE;IACVC,IAAI,EAAEC,KADI;IAEV,WAAS;MAAA,OAAM,EAAN;IAAA;EAFC,CADuB;EAKnCC,QAAQ,EAAEC,OALyB;EAMnCC,GAAG,EAAE;IACHJ,IAAI,EAAEK,MADH;IAEH,WAAS,KAAK;EAFX,CAN8B;EAUnCC,GAAG,EAAE;IACHN,IAAI,EAAEK,MADH;IAEH,WAAS,KAAK;EAFX,CAV8B;EAcnCE,IAAI,EAAEC,WAd6B;EAenCC,EAAE,EAAE;IACFT,IAAI,EAAEU,MADJ;IAEF,WAAS,KAAK;EAFZ,CAf+B;EAmBnCC,KAAK,EAAE;IACLX,IAAI,EAAEU,MADD;IAEL,WAAS,KAAK;EAFT,CAnB4B;EAuBnCE,IAAI,EAAE;IACJZ,IAAI,EAAEU,MADF;IAEJ,WAAS,KAAK;EAFV,CAvB6B;EA2BnCG,SAAS,EAAE;IACTb,IAAI,EAAEU,MADG;IAET,WAAS,KAAK;EAFL,CA3BwB;EA+BnCI,GAAG,EAAE;IACHd,IAAI,EAAEU,MADH;IAEH,WAAS;EAFN,CA/B8B;EAmCnCK,aAAa,EAAE;IACbf,IAAI,EAAEG,OADO;IAEb,WAAS;EAFI;AAnCoB,CAAzB;AAwCA,IAACa,aAAa,GAAG;EAC3BjB,UAAU,EAAE;IACVC,IAAI,EAAE,CAACK,MAAD,EAASK,MAAT,EAAiBP,OAAjB,CADI;IAEV,WAAS;MAAA,OAAM,KAAK,CAAX;IAAA;EAFC,CADe;EAK3BQ,KAAK,EAAE;IACLX,IAAI,EAAE,CAACU,MAAD,EAASP,OAAT,EAAkBE,MAAlB,EAA0BY,MAA1B;EADD,CALoB;EAQ3BC,aAAa,EAAEf,OARY;EAS3BD,QAAQ,EAAEC,OATiB;EAU3BgB,OAAO,EAAEhB,OAVkB;EAW3BiB,IAAI,EAAE;IACJpB,IAAI,EAAEU,MADF;IAEJ,WAAS,KAAK;EAFV,CAXqB;EAe3BW,SAAS,EAAE;IACTrB,IAAI,EAAE,CAACU,MAAD,EAASL,MAAT,CADG;IAET,WAAS,KAAK;EAFL,CAfgB;EAmB3BiB,UAAU,EAAE;IACVtB,IAAI,EAAE,CAACU,MAAD,EAASL,MAAT,CADI;IAEV,WAAS,KAAK;EAFJ,CAnBe;EAuB3BI,EAAE,EAAE;IACFT,IAAI,EAAEU,MADJ;IAEF,WAAS,KAAK;EAFZ,CAvBuB;EA2B3Ba,QAAQ,EAAE;IACRvB,IAAI,EAAEU,MADE;IAER,WAAS,KAAK;EAFN,CA3BiB;EA+B3Bc,MAAM,EAAErB,OA/BmB;EAgC3BI,IAAI,EAAEC,WAhCqB;EAiC3BiB,QAAQ,EAAE,CAACf,MAAD,EAASL,MAAT,CAjCiB;EAkC3BU,aAAa,EAAE;IACbf,IAAI,EAAEG,OADO;IAEb,WAAS;EAFI;AAlCY,CAAjB;;AAuCA,IAACuB,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;EACpC,IAAMC,MAAM,GAAGC,MAAM,CAACC,cAAD,EAAiB,EAAjB,CAArB;EACA,IAAMC,UAAU,GAAGF,MAAM,CAACG,kBAAD,EAAqB,EAArB,CAAzB;EACA,IAAMC,aAAa,GAAGJ,MAAM,CAAC,eAAD,EAAkB,EAAlB,CAA5B;EACA,IAAMK,OAAO,GAAGC,QAAQ,CAAC;IAAA,OAAMF,aAAa,IAAI,CAACA,aAAa,IAAI,IAAjB,GAAwB,KAAK,CAA7B,GAAiCA,aAAa,CAACZ,IAAhD,MAA0D,iBAAjF;EAAA,CAAD,CAAxB;EACA,IAAMe,cAAc,GAAGD,QAAQ,CAAC,YAAM;IACpC,OAAOJ,UAAU,CAACvB,IAAlB;EACD,CAF8B,CAA/B;EAGA,OAAO;IACL0B,OAAO,EAAPA,OADK;IAELD,aAAa,EAAbA,aAFK;IAGLL,MAAM,EAANA,MAHK;IAILQ,cAAc,EAAdA,cAJK;IAKLL,UAAU,EAAVA;EALK,CAAP;AAOF,CAfY;;AAgBA,IAACM,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,QAA2B;EAAA,IAAjBP,UAAiB,QAAjBA,UAAiB;;EAC3D,0BAAkDQ,kBAAkB,CAACD,KAAD,EAAQ;IAC1EE,eAAe,EAAET;EADyD,CAAR,CAApE;EAAA,IAAiBU,OAAjB,uBAAQC,OAAR;EAAA,IAA0BC,mBAA1B,uBAA0BA,mBAA1B;;EAGA,OAAO;IACLA,mBAAmB,EAAnBA,mBADK;IAELF,OAAO,EAAPA;EAFK,CAAP;AAIF,CARY;;AASZ,IAAMG,QAAQ,GAAG,SAAXA,QAAW,CAACN,KAAD,EAAW;EAC1B,IAAMO,SAAS,GAAGC,GAAG,CAAC,KAAD,CAArB;;EACA,0BAAiBC,kBAAkB,EAAnC;EAAA,IAAQC,IAAR,uBAAQA,IAAR;;EACA,wBAA+CrB,gBAAgB,EAA/D;EAAA,IAAQO,OAAR,qBAAQA,OAAR;EAAA,IAAiBD,aAAjB,qBAAiBA,aAAjB;EAAA,IAAgCF,UAAhC,qBAAgCA,UAAhC;;EACA,IAAMkB,eAAe,GAAGH,GAAG,CAAC,KAAD,CAA3B;EACA,IAAMI,KAAK,GAAGf,QAAQ,CAAC;IACrBgB,GADqB,iBACf;MACJ,IAAIC,EAAJ,EAAQC,EAAR;;MACA,OAAOnB,OAAO,CAACoB,KAAR,GAAgB,CAACF,EAAE,GAAGnB,aAAa,CAACjC,UAApB,KAAmC,IAAnC,GAA0C,KAAK,CAA/C,GAAmDoD,EAAE,CAACE,KAAtE,GAA8E,CAACD,EAAE,GAAGf,KAAK,CAACtC,UAAZ,KAA2B,IAA3B,GAAkCqD,EAAlC,GAAuCR,SAAS,CAACS,KAAtI;IACD,CAJoB;IAKrBC,GALqB,eAKjBC,GALiB,EAKZ;MACP,IAAIJ,EAAJ;;MACA,IAAIlB,OAAO,CAACoB,KAAR,IAAiBpD,KAAK,CAACuD,OAAN,CAAcD,GAAd,CAArB,EAAyC;QACvCP,eAAe,CAACK,KAAhB,GAAwBrB,aAAa,CAAC1B,GAAd,KAAsB,KAAK,CAA3B,IAAgCiD,GAAG,CAACE,MAAJ,GAAazB,aAAa,CAAC1B,GAAd,CAAkB+C,KAAvF;QACAL,eAAe,CAACK,KAAhB,KAA0B,KAA1B,KAAoC,CAACF,EAAE,GAAGnB,aAAa,IAAI,IAAjB,GAAwB,KAAK,CAA7B,GAAiCA,aAAa,CAAC0B,WAArD,KAAqE,IAArE,GAA4E,KAAK,CAAjF,GAAqFP,EAAE,CAACQ,IAAH,CAAQ3B,aAAR,EAAuBuB,GAAvB,CAAzH;MACD,CAHD,MAGO;QACLR,IAAI,CAACa,kBAAD,EAAqBL,GAArB,CAAJ;QACAX,SAAS,CAACS,KAAV,GAAkBE,GAAlB;MACD;IACF;EAdoB,CAAD,CAAtB;EAgBA,OAAO;IACLN,KAAK,EAALA,KADK;IAELhB,OAAO,EAAPA,OAFK;IAGLe,eAAe,EAAfA,eAHK;IAILlB,UAAU,EAAVA;EAJK,CAAP;AAMD,CA3BD;;AA4BA,IAAM+B,iBAAiB,GAAG,SAApBA,iBAAoB,CAACxB,KAAD,EAAQyB,KAAR,SAA6B;EAAA,IAAZb,KAAY,SAAZA,KAAY;;EACrD,yBAAmCvB,gBAAgB,EAAnD;EAAA,IAAQO,OAAR,sBAAQA,OAAR;EAAA,IAAiBD,aAAjB,sBAAiBA,aAAjB;;EACA,IAAM+B,KAAK,GAAGlB,GAAG,CAAC,KAAD,CAAjB;EACA,IAAMtC,IAAI,GAAGyD,OAAO,CAAChC,aAAa,IAAI,IAAjB,GAAwB,KAAK,CAA7B,GAAiCA,aAAa,CAACiC,iBAAhD,EAAmE;IAAEC,IAAI,EAAE;EAAR,CAAnE,CAApB;EACA,IAAMC,SAAS,GAAGjC,QAAQ,CAAC,YAAM;IAC/B,IAAMmB,KAAK,GAAGJ,KAAK,CAACI,KAApB;;IACA,IAAIe,YAAY,CAACf,KAAD,CAAZ,KAAwB,kBAA5B,EAAgD;MAC9C,OAAOA,KAAP;IACD,CAFD,MAEO,IAAIpD,KAAK,CAACuD,OAAN,CAAcH,KAAd,CAAJ,EAA0B;MAC/B,OAAOA,KAAK,CAACgB,QAAN,CAAehC,KAAK,CAAC1B,KAArB,CAAP;IACD,CAFM,MAEA,IAAI0C,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,KAAK,CAArC,EAAwC;MAC7C,OAAOA,KAAK,KAAKhB,KAAK,CAAChB,SAAvB;IACD,CAFM,MAEA;MACL,OAAO,CAAC,CAACgC,KAAT;IACD;EACF,CAXyB,CAA1B;EAYA,IAAMiB,YAAY,GAAGN,OAAO,CAAC9B,QAAQ,CAAC,YAAM;IAC1C,IAAIiB,EAAJ;;IACA,OAAOlB,OAAO,CAACoB,KAAR,GAAgB,CAACF,EAAE,GAAGnB,aAAa,IAAI,IAAjB,GAAwB,KAAK,CAA7B,GAAiCA,aAAa,CAACiC,iBAArD,KAA2E,IAA3E,GAAkF,KAAK,CAAvF,GAA2Fd,EAAE,CAACE,KAA9G,GAAsH,KAAK,CAAlI;EACD,CAHoC,CAAT,CAA5B;EAIA,IAAMkB,WAAW,GAAGrC,QAAQ,CAAC,YAAM;IACjC,OAAO,CAAC,EAAE4B,KAAK,WAAL,IAAiBzB,KAAK,CAAC1B,KAAzB,CAAR;EACD,CAF2B,CAA5B;EAGA,OAAO;IACLwD,SAAS,EAATA,SADK;IAELJ,KAAK,EAALA,KAFK;IAGLxD,IAAI,EAAJA,IAHK;IAIL+D,YAAY,EAAZA,YAJK;IAKLC,WAAW,EAAXA;EALK,CAAP;AAOD,CA9BD;;AA+BA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACnC,KAAD,SAGd;EAAA,IAFJY,KAEI,SAFJA,KAEI;EAAA,IADJkB,SACI,SADJA,SACI;;EACJ,yBAA2CzC,gBAAgB,EAA3D;EAAA,IAAQC,MAAR,sBAAQA,MAAR;EAAA,IAAgBM,OAAhB,sBAAgBA,OAAhB;EAAA,IAAyBD,aAAzB,sBAAyBA,aAAzB;;EACA,IAAMyC,eAAe,GAAGvC,QAAQ,CAAC,YAAM;IACrC,IAAIiB,EAAJ,EAAQC,EAAR;;IACA,IAAM9C,GAAG,GAAG,CAAC6C,EAAE,GAAGnB,aAAa,CAAC1B,GAApB,KAA4B,IAA5B,GAAmC,KAAK,CAAxC,GAA4C6C,EAAE,CAACE,KAA3D;IACA,IAAMjD,GAAG,GAAG,CAACgD,EAAE,GAAGpB,aAAa,CAAC5B,GAApB,KAA4B,IAA5B,GAAmC,KAAK,CAAxC,GAA4CgD,EAAE,CAACC,KAA3D;IACA,OAAO,CAAC,EAAE/C,GAAG,IAAIF,GAAT,CAAD,IAAkB6C,KAAK,CAACI,KAAN,CAAYI,MAAZ,IAAsBnD,GAAxC,IAA+C,CAAC6D,SAAS,CAACd,KAA1D,IAAmEJ,KAAK,CAACI,KAAN,CAAYI,MAAZ,IAAsBrD,GAAtB,IAA6B+D,SAAS,CAACd,KAAjH;EACD,CAL+B,CAAhC;EAMA,IAAMqB,UAAU,GAAGxC,QAAQ,CAAC,YAAM;IAChC,IAAIiB,EAAJ,EAAQC,EAAR;;IACA,IAAMlD,QAAQ,GAAGmC,KAAK,CAACnC,QAAN,KAAmByB,MAAM,IAAI,IAAV,GAAiB,KAAK,CAAtB,GAA0BA,MAAM,CAACzB,QAApD,CAAjB;IACA,OAAO,CAACkD,EAAE,GAAGnB,OAAO,CAACoB,KAAR,GAAgB,CAAC,CAACF,EAAE,GAAGnB,aAAa,CAAC9B,QAApB,KAAiC,IAAjC,GAAwC,KAAK,CAA7C,GAAiDiD,EAAE,CAACE,KAArD,KAA+DnD,QAA/D,IAA2EuE,eAAe,CAACpB,KAA3G,GAAmHnD,QAAzH,KAAsI,IAAtI,GAA6IkD,EAA7I,GAAkJ,KAAzJ;EACD,CAJ0B,CAA3B;EAKA,OAAO;IACLsB,UAAU,EAAVA,UADK;IAELD,eAAe,EAAfA;EAFK,CAAP;AAID,CApBD;;AAqBA,IAAME,aAAa,GAAG,SAAhBA,aAAgB,CAACtC,KAAD,SAAsB;EAAA,IAAZY,KAAY,SAAZA,KAAY;;EAC1C,SAAS2B,UAAT,GAAsB;IACpB,IAAI3E,KAAK,CAACuD,OAAN,CAAcP,KAAK,CAACI,KAApB,KAA8B,CAACJ,KAAK,CAACI,KAAN,CAAYgB,QAAZ,CAAqBhC,KAAK,CAAC1B,KAA3B,CAAnC,EAAsE;MACpEsC,KAAK,CAACI,KAAN,CAAYwB,IAAZ,CAAiBxC,KAAK,CAAC1B,KAAvB;IACD,CAFD,MAEO;MACLsC,KAAK,CAACI,KAAN,GAAchB,KAAK,CAAChB,SAAN,IAAmB,IAAjC;IACD;EACF;;EACDgB,KAAK,CAAClB,OAAN,IAAiByD,UAAU,EAA3B;AACD,CATD;;AAUA,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAACzC,KAAD,SAMX;EAAA,IALJY,KAKI,SALJA,KAKI;EAAA,IAJJD,eAII,SAJJA,eAII;EAAA,IAHJuB,WAGI,SAHJA,WAGI;EAAA,IAFJG,UAEI,SAFJA,UAEI;EAAA,IADJhC,mBACI,SADJA,mBACI;;EACJ,yBAAsChB,gBAAgB,EAAtD;EAAA,IAAQI,UAAR,sBAAQA,UAAR;EAAA,IAAoBE,aAApB,sBAAoBA,aAApB;;EACA,2BAAiBc,kBAAkB,EAAnC;EAAA,IAAQC,IAAR,wBAAQA,IAAR;;EACA,SAASgC,eAAT,CAAyB1B,KAAzB,EAAgC;IAC9B,IAAIF,EAAJ,EAAQC,EAAR;;IACA,OAAOC,KAAK,KAAKhB,KAAK,CAAChB,SAAhB,IAA6BgC,KAAK,KAAK,IAAvC,GAA8C,CAACF,EAAE,GAAGd,KAAK,CAAChB,SAAZ,KAA0B,IAA1B,GAAiC8B,EAAjC,GAAsC,IAApF,GAA2F,CAACC,EAAE,GAAGf,KAAK,CAACf,UAAZ,KAA2B,IAA3B,GAAkC8B,EAAlC,GAAuC,KAAzI;EACD;;EACD,SAAS4B,eAAT,CAAyB7D,OAAzB,EAAkC8D,CAAlC,EAAqC;IACnClC,IAAI,CAAC,QAAD,EAAWgC,eAAe,CAAC5D,OAAD,CAA1B,EAAqC8D,CAArC,CAAJ;EACD;;EACD,SAASC,YAAT,CAAsBD,CAAtB,EAAyB;IACvB,IAAIjC,eAAe,CAACK,KAApB,EACE;IACF,IAAM8B,MAAM,GAAGF,CAAC,CAACE,MAAjB;IACApC,IAAI,CAAC,QAAD,EAAWgC,eAAe,CAACI,MAAM,CAAChE,OAAR,CAA1B,EAA4C8D,CAA5C,CAAJ;EACD;;EAfG,SAgBWG,WAhBX;IAAA;EAAA;;EAAA;IAAA,0EAgBJ,iBAA2BH,CAA3B;MAAA;QAAA;UAAA;YAAA;cAAA,KACMjC,eAAe,CAACK,KADtB;gBAAA;gBAAA;cAAA;;cAAA;;YAAA;cAAA,MAGM,CAACkB,WAAW,CAAClB,KAAb,IAAsB,CAACqB,UAAU,CAACrB,KAAlC,IAA2CX,mBAAmB,CAACW,KAHrE;gBAAA;gBAAA;cAAA;;cAIIJ,KAAK,CAACI,KAAN,GAAc0B,eAAe,CAAC,CAAC,KAAD,EAAQ1C,KAAK,CAACf,UAAd,EAA0B+C,QAA1B,CAAmCpB,KAAK,CAACI,KAAzC,CAAD,CAA7B;cAJJ;cAAA,OAKUgC,QAAQ,EALlB;;YAAA;cAMIL,eAAe,CAAC/B,KAAK,CAACI,KAAP,EAAc4B,CAAd,CAAf;;YANJ;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAhBI;IAAA;EAAA;;EAyBJ,IAAMlE,aAAa,GAAGmB,QAAQ,CAAC,YAAM;IACnC,IAAIiB,EAAJ;;IACA,OAAO,CAAC,CAACA,EAAE,GAAGnB,aAAa,CAACjB,aAApB,KAAsC,IAAtC,GAA6C,KAAK,CAAlD,GAAsDoC,EAAE,CAACE,KAA1D,KAAoEhB,KAAK,CAACtB,aAAjF;EACD,CAH6B,CAA9B;EAIAuE,KAAK,CAAC;IAAA,OAAMjD,KAAK,CAACtC,UAAZ;EAAA,CAAD,EAAyB,YAAM;IAClC,IAAIoD,EAAJ;;IACA,IAAIpC,aAAa,CAACsC,KAAlB,EAAyB;MACvB,CAACF,EAAE,GAAGrB,UAAU,IAAI,IAAd,GAAqB,KAAK,CAA1B,GAA8BA,UAAU,CAACyD,QAA/C,KAA4D,IAA5D,GAAmE,KAAK,CAAxE,GAA4EpC,EAAE,CAACQ,IAAH,CAAQ7B,UAAR,EAAoB,QAApB,WAAoC,UAAC0D,GAAD;QAAA,OAASC,SAAS,CAACD,GAAD,CAAlB;MAAA,CAApC,CAA5E;IACD;EACF,CALI,CAAL;EAMA,OAAO;IACLN,YAAY,EAAZA,YADK;IAELE,WAAW,EAAXA;EAFK,CAAP;AAID,CA7CD;;AA8CY,IAACM,aAAa,yDACvB9B,kBADuB,EACF,UAACL,GAAD;EAAA,OAASoC,QAAQ,CAACpC,GAAD,CAAR,IAAiBqC,QAAQ,CAACrC,GAAD,CAAzB,IAAkCsC,SAAS,CAACtC,GAAD,CAApD;AAAA,CADE,6CAEhB,gBAACA,GAAD;EAAA,OAASoC,QAAQ,CAACpC,GAAD,CAAR,IAAiBqC,QAAQ,CAACrC,GAAD,CAAzB,IAAkCsC,SAAS,CAACtC,GAAD,CAApD;AAAA,CAFgB,kBAAd;AAIA,IAACuC,kBAAkB,mEAC5BlC,kBAD4B,EACP,UAACL,GAAD;EAAA,OAASC,OAAO,CAACD,GAAD,CAAhB;AAAA,CADO,kDAErB,gBAACA,GAAD;EAAA,OAASC,OAAO,CAACD,GAAD,CAAhB;AAAA,CAFqB,uBAAnB;;AAIA,IAACwC,WAAW,GAAG,SAAdA,WAAc,CAAC1D,KAAD,EAAQyB,KAAR,EAAkB;EAC3C,gBAAwDnB,QAAQ,CAACN,KAAD,CAAhE;EAAA,IAAQY,KAAR,aAAQA,KAAR;EAAA,IAAehB,OAAf,aAAeA,OAAf;EAAA,IAAwBe,eAAxB,aAAwBA,eAAxB;EAAA,IAAyClB,UAAzC,aAAyCA,UAAzC;;EACA,yBAA8D+B,iBAAiB,CAACxB,KAAD,EAAQyB,KAAR,EAAe;IAC5Fb,KAAK,EAALA;EAD4F,CAAf,CAA/E;EAAA,IAAQc,KAAR,sBAAQA,KAAR;EAAA,IAAexD,IAAf,sBAAeA,IAAf;EAAA,IAAqB4D,SAArB,sBAAqBA,SAArB;EAAA,IAAgCG,YAAhC,sBAAgCA,YAAhC;EAAA,IAA8CC,WAA9C,sBAA8CA,WAA9C;;EAGA,mBAAuBC,WAAW,CAACnC,KAAD,EAAQ;IAAEY,KAAK,EAALA,KAAF;IAASkB,SAAS,EAATA;EAAT,CAAR,CAAlC;EAAA,IAAQO,UAAR,gBAAQA,UAAR;;EACA,2BAAyCpC,kBAAkB,CAACD,KAAD,EAAQ;IACjEE,eAAe,EAAET,UADgD;IAEjEkE,mBAAmB,EAAEzB,WAF4C;IAGjE0B,mBAAmB,EAAEhE;EAH4C,CAAR,CAA3D;EAAA,IAAQQ,OAAR,wBAAQA,OAAR;EAAA,IAAiBC,mBAAjB,wBAAiBA,mBAAjB;;EAKA,gBAAsCoC,QAAQ,CAACzC,KAAD,EAAQ;IACpDY,KAAK,EAALA,KADoD;IAEpDD,eAAe,EAAfA,eAFoD;IAGpDuB,WAAW,EAAXA,WAHoD;IAIpDG,UAAU,EAAVA,UAJoD;IAKpDhC,mBAAmB,EAAnBA;EALoD,CAAR,CAA9C;EAAA,IAAQwC,YAAR,aAAQA,YAAR;EAAA,IAAsBE,WAAtB,aAAsBA,WAAtB;;EAOAT,aAAa,CAACtC,KAAD,EAAQ;IAAEY,KAAK,EAALA;EAAF,CAAR,CAAb;EACA,OAAO;IACLnB,UAAU,EAAVA,UADK;IAELW,OAAO,EAAPA,OAFK;IAGLC,mBAAmB,EAAnBA,mBAHK;IAILyB,SAAS,EAATA,SAJK;IAKLO,UAAU,EAAVA,UALK;IAMLzC,OAAO,EAAPA,OANK;IAOLqC,YAAY,EAAZA,YAPK;IAQLC,WAAW,EAAXA,WARK;IASLtB,KAAK,EAALA,KATK;IAULiC,YAAY,EAAZA,YAVK;IAWLE,WAAW,EAAXA,WAXK;IAYLrB,KAAK,EAALA,KAZK;IAaLxD,IAAI,EAAJA;EAbK,CAAP;AAeF,CAlCY","names":["useCheckboxGroupProps","modelValue","type","Array","disabled","Boolean","min","Number","max","size","useSizeProp","id","String","label","fill","textColor","tag","validateEvent","checkboxProps","Object","indeterminate","checked","name","trueLabel","falseLabel","controls","border","tabindex","useCheckboxGroup","elForm","inject","formContextKey","elFormItem","formItemContextKey","checkboxGroup","isGroup","computed","elFormItemSize","useCheckboxGroupId","props","useFormItemInputId","formItemContext","groupId","inputId","isLabeledByFormItem","useModel","selfModel","ref","getCurrentInstance","emit","isLimitExceeded","model","get","_a","_b","value","set","val","isArray","length","changeEvent","call","UPDATE_MODEL_EVENT","useCheckboxStatus","slots","focus","useSize","checkboxGroupSize","prop","isChecked","toTypeString","includes","checkboxSize","hasOwnLabel","useDisabled","isLimitDisabled","isDisabled","setStoreValue","addToStore","push","useEvent","getLabeledValue","emitChangeEvent","e","handleChange","target","onClickRoot","nextTick","watch","validate","err","debugWarn","checkboxEmits","isString","isNumber","isBoolean","checkboxGroupEmits","useCheckbox","disableIdGeneration","disableIdManagement"],"sources":["../../../../../../packages/components/checkbox/src/checkbox.ts"],"sourcesContent":["import { computed, getCurrentInstance, inject, nextTick, ref, watch } from 'vue'\nimport { toTypeString } from '@vue/shared'\nimport { UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport { formContextKey, formItemContextKey } from '@element-plus/tokens'\nimport { useFormItemInputId, useSize, useSizeProp } from '@element-plus/hooks'\nimport {\n  debugWarn,\n  isArray,\n  isBoolean,\n  isNumber,\n  isString,\n} from '@element-plus/utils'\nimport type { ComponentInternalInstance, ExtractPropTypes, PropType } from 'vue'\nimport type { FormContext, FormItemContext } from '@element-plus/tokens'\nimport type { ICheckboxGroupInstance } from './checkbox.type'\nimport type Checkbox from './checkbox.vue'\n\nexport const useCheckboxGroupProps = {\n  modelValue: {\n    type: Array as PropType<Array<string | number>>,\n    default: () => [],\n  },\n  disabled: Boolean,\n  min: {\n    type: Number,\n    default: undefined,\n  },\n  max: {\n    type: Number,\n    default: undefined,\n  },\n  size: useSizeProp,\n  id: {\n    type: String,\n    default: undefined,\n  },\n  label: {\n    type: String,\n    default: undefined,\n  },\n  fill: {\n    type: String,\n    default: undefined,\n  },\n  textColor: {\n    type: String,\n    default: undefined,\n  },\n  tag: {\n    type: String,\n    default: 'div',\n  },\n  validateEvent: {\n    type: Boolean,\n    default: true,\n  },\n}\n\nexport type IUseCheckboxGroupProps = ExtractPropTypes<\n  typeof useCheckboxGroupProps\n>\n\nexport const checkboxProps = {\n  modelValue: {\n    type: [Number, String, Boolean],\n    default: () => undefined,\n  },\n  label: {\n    type: [String, Boolean, Number, Object],\n  },\n  indeterminate: Boolean,\n  disabled: Boolean,\n  checked: Boolean,\n  name: {\n    type: String,\n    default: undefined,\n  },\n  trueLabel: {\n    type: [String, Number],\n    default: undefined,\n  },\n  falseLabel: {\n    type: [String, Number],\n    default: undefined,\n  },\n  id: {\n    type: String,\n    default: undefined,\n  },\n  controls: {\n    type: String,\n    default: undefined,\n  },\n  border: Boolean,\n  size: useSizeProp,\n  tabindex: [String, Number],\n  validateEvent: {\n    type: Boolean,\n    default: true,\n  },\n}\n\nexport const useCheckboxGroup = () => {\n  const elForm = inject(formContextKey, {} as FormContext)\n  const elFormItem = inject(formItemContextKey, {} as FormItemContext)\n  const checkboxGroup = inject<ICheckboxGroupInstance>('CheckboxGroup', {})\n  const isGroup = computed(\n    () => checkboxGroup && checkboxGroup?.name === 'ElCheckboxGroup'\n  )\n  const elFormItemSize = computed(() => {\n    return elFormItem.size\n  })\n  return {\n    isGroup,\n    checkboxGroup,\n    elForm,\n    elFormItemSize,\n    elFormItem,\n  }\n}\n\nexport const useCheckboxGroupId = (\n  props: IUseCheckboxGroupProps,\n  { elFormItem }: Partial<ReturnType<typeof useCheckboxGroup>>\n) => {\n  const { inputId: groupId, isLabeledByFormItem } = useFormItemInputId(props, {\n    formItemContext: elFormItem,\n  })\n\n  return {\n    isLabeledByFormItem,\n    groupId,\n  }\n}\n\nconst useModel = (props: CheckboxProps) => {\n  const selfModel = ref<any>(false)\n  const { emit } = getCurrentInstance()!\n  const { isGroup, checkboxGroup, elFormItem } = useCheckboxGroup()\n  const isLimitExceeded = ref(false)\n  const model = computed({\n    get() {\n      return isGroup.value\n        ? checkboxGroup.modelValue?.value\n        : props.modelValue ?? selfModel.value\n    },\n\n    set(val: unknown) {\n      if (isGroup.value && Array.isArray(val)) {\n        isLimitExceeded.value =\n          checkboxGroup.max !== undefined &&\n          val.length > checkboxGroup.max.value\n        isLimitExceeded.value === false && checkboxGroup?.changeEvent?.(val)\n      } else {\n        emit(UPDATE_MODEL_EVENT, val)\n        selfModel.value = val\n      }\n    },\n  })\n\n  return {\n    model,\n    isGroup,\n    isLimitExceeded,\n    elFormItem,\n  }\n}\n\nconst useCheckboxStatus = (\n  props: CheckboxProps,\n  slots: ComponentInternalInstance['slots'],\n  { model }: Partial<ReturnType<typeof useModel>>\n) => {\n  const { isGroup, checkboxGroup } = useCheckboxGroup()\n  const focus = ref(false)\n  const size = useSize(checkboxGroup?.checkboxGroupSize, { prop: true })\n  const isChecked = computed<boolean>(() => {\n    const value = model!.value\n    if (toTypeString(value) === '[object Boolean]') {\n      return value\n    } else if (Array.isArray(value)) {\n      return value.includes(props.label)\n    } else if (value !== null && value !== undefined) {\n      return value === props.trueLabel\n    } else {\n      return !!value\n    }\n  })\n\n  const checkboxSize = useSize(\n    computed(() =>\n      isGroup.value ? checkboxGroup?.checkboxGroupSize?.value : undefined\n    )\n  )\n\n  const hasOwnLabel = computed<boolean>(() => {\n    return !!(slots.default || props.label)\n  })\n\n  return {\n    isChecked,\n    focus,\n    size,\n    checkboxSize,\n    hasOwnLabel,\n  }\n}\n\nconst useDisabled = (\n  props: CheckboxProps,\n  {\n    model,\n    isChecked,\n  }: Partial<ReturnType<typeof useModel>> &\n    Partial<ReturnType<typeof useCheckboxStatus>>\n) => {\n  const { elForm, isGroup, checkboxGroup } = useCheckboxGroup()\n  const isLimitDisabled = computed(() => {\n    const max = checkboxGroup.max?.value!\n    const min = checkboxGroup.min?.value!\n    return (\n      (!!(max || min) && model!.value.length >= max && !isChecked!.value) ||\n      (model!.value.length <= min && isChecked!.value)\n    )\n  })\n  const isDisabled = computed(() => {\n    const disabled = props.disabled || elForm?.disabled\n    return (\n      (isGroup.value\n        ? checkboxGroup.disabled?.value || disabled || isLimitDisabled.value\n        : disabled) ?? false\n    )\n  })\n\n  return {\n    isDisabled,\n    isLimitDisabled,\n  }\n}\n\nconst setStoreValue = (\n  props: CheckboxProps,\n  { model }: Partial<ReturnType<typeof useModel>>\n) => {\n  function addToStore() {\n    if (Array.isArray(model!.value) && !model!.value.includes(props.label)) {\n      model!.value.push(props.label)\n    } else {\n      model!.value = props.trueLabel || true\n    }\n  }\n  props.checked && addToStore()\n}\n\nconst useEvent = (\n  props: CheckboxProps,\n  {\n    model,\n    isLimitExceeded,\n    hasOwnLabel,\n    isDisabled,\n    isLabeledByFormItem,\n  }: Partial<\n    ReturnType<typeof useModel> &\n      ReturnType<typeof useCheckboxStatus> &\n      ReturnType<typeof useDisabled> &\n      ReturnType<typeof useFormItemInputId>\n  >\n) => {\n  const { elFormItem, checkboxGroup } = useCheckboxGroup()\n  const { emit } = getCurrentInstance()!\n\n  function getLabeledValue(value: string | number | boolean) {\n    return value === props.trueLabel || value === true\n      ? props.trueLabel ?? true\n      : props.falseLabel ?? false\n  }\n\n  function emitChangeEvent(\n    checked: string | number | boolean,\n    e: InputEvent | MouseEvent\n  ) {\n    emit('change', getLabeledValue(checked), e)\n  }\n\n  function handleChange(e: Event) {\n    if (isLimitExceeded!.value) return\n    const target = e.target as HTMLInputElement\n    emit('change', getLabeledValue(target.checked), e)\n  }\n\n  async function onClickRoot(e: MouseEvent) {\n    if (isLimitExceeded!.value) return\n    if (\n      !hasOwnLabel!.value &&\n      !isDisabled!.value &&\n      isLabeledByFormItem!.value\n    ) {\n      model!.value = getLabeledValue(\n        [false, props.falseLabel].includes(model!.value)\n      )\n      await nextTick()\n      emitChangeEvent(model!.value, e)\n    }\n  }\n\n  const validateEvent = computed(\n    () => checkboxGroup.validateEvent?.value || props.validateEvent\n  )\n\n  watch(\n    () => props.modelValue,\n    () => {\n      if (validateEvent.value) {\n        elFormItem?.validate?.('change').catch((err) => debugWarn(err))\n      }\n    }\n  )\n\n  return {\n    handleChange,\n    onClickRoot,\n  }\n}\n\nexport type CheckboxValueType = string | number | boolean\n\nexport const checkboxEmits = {\n  [UPDATE_MODEL_EVENT]: (val: CheckboxValueType) =>\n    isString(val) || isNumber(val) || isBoolean(val),\n  change: (val: CheckboxValueType) =>\n    isString(val) || isNumber(val) || isBoolean(val),\n}\n\nexport const checkboxGroupEmits = {\n  [UPDATE_MODEL_EVENT]: (val: CheckboxValueType[]) => isArray(val),\n  change: (val: CheckboxValueType[]) => isArray(val),\n}\n\nexport const useCheckbox = (\n  props: CheckboxProps,\n  slots: ComponentInternalInstance['slots']\n) => {\n  const { model, isGroup, isLimitExceeded, elFormItem } = useModel(props)\n  const { focus, size, isChecked, checkboxSize, hasOwnLabel } =\n    useCheckboxStatus(props, slots, {\n      model,\n    })\n  const { isDisabled } = useDisabled(props, { model, isChecked })\n  const { inputId, isLabeledByFormItem } = useFormItemInputId(props, {\n    formItemContext: elFormItem,\n    disableIdGeneration: hasOwnLabel,\n    disableIdManagement: isGroup,\n  })\n  const { handleChange, onClickRoot } = useEvent(props, {\n    model,\n    isLimitExceeded,\n    hasOwnLabel,\n    isDisabled,\n    isLabeledByFormItem,\n  })\n\n  setStoreValue(props, { model })\n\n  return {\n    elFormItem,\n    inputId,\n    isLabeledByFormItem,\n    isChecked,\n    isDisabled,\n    isGroup,\n    checkboxSize,\n    hasOwnLabel,\n    model,\n    handleChange,\n    onClickRoot,\n    focus,\n    size,\n  }\n}\n\nexport type CheckboxProps = ExtractPropTypes<typeof checkboxProps>\nexport type CheckboxEmits = typeof checkboxEmits\nexport type CheckboxInstance = InstanceType<typeof Checkbox>\n"]},"metadata":{},"sourceType":"module"}