{"ast":null,"code":"import _regeneratorRuntime from \"/home/little/Documents/music_web/startproj/zhengdao-ui/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/little/Documents/music_web/startproj/zhengdao-ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/home/little/Documents/music_web/startproj/zhengdao-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.flat.js\";\nimport \"core-js/modules/es.array.unscopables.flat.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.number.parse-int.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport { defineComponent, ref, computed, unref, watch, nextTick, openBlock, createElementBlock, normalizeClass, createElementVNode, toDisplayString, createCommentVNode, Fragment, renderList, createVNode } from 'vue';\nimport dayjs from 'dayjs';\nimport '../../../../hooks/index.mjs';\nimport '../../../../utils/index.mjs';\nimport { basicDateTableProps } from '../props/basic-date-table.mjs';\nimport { buildPickerTable } from '../utils.mjs';\nimport ElDatePickerCell from './basic-cell-render.mjs';\nimport _export_sfc from '../../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../../hooks/use-namespace/index.mjs';\nimport { useLocale } from '../../../../hooks/use-locale/index.mjs';\nimport { castArray } from '../../../../utils/arrays.mjs';\nvar _hoisted_1 = [\"aria-label\"];\nvar _hoisted_2 = {\n  key: 0,\n  scope: \"col\"\n};\nvar _hoisted_3 = [\"aria-label\"];\nvar _hoisted_4 = [\"aria-current\", \"aria-selected\", \"tabindex\"];\n\nvar _sfc_main = /* @__PURE__ */defineComponent({\n  __name: \"basic-date-table\",\n  props: basicDateTableProps,\n  emits: [\"changerange\", \"pick\", \"select\"],\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose,\n        emit = _ref.emit;\n    var props = __props;\n    var ns = useNamespace(\"date-table\");\n\n    var _useLocale = useLocale(),\n        t = _useLocale.t,\n        lang = _useLocale.lang;\n\n    var tbodyRef = ref();\n    var currentCellRef = ref();\n    var lastRow = ref();\n    var lastColumn = ref();\n    var tableRows = ref([[], [], [], [], [], []]);\n    var focusWithClick = false;\n    var firstDayOfWeek = props.date.$locale().weekStart || 7;\n    var WEEKS_CONSTANT = props.date.locale(\"en\").localeData().weekdaysShort().map(function (_) {\n      return _.toLowerCase();\n    });\n    var offsetDay = computed(function () {\n      return firstDayOfWeek > 3 ? 7 - firstDayOfWeek : -firstDayOfWeek;\n    });\n    var startDate = computed(function () {\n      var startDayOfMonth = props.date.startOf(\"month\");\n      return startDayOfMonth.subtract(startDayOfMonth.day() || 7, \"day\");\n    });\n    var WEEKS = computed(function () {\n      return WEEKS_CONSTANT.concat(WEEKS_CONSTANT).slice(firstDayOfWeek, firstDayOfWeek + 7);\n    });\n    var hasCurrent = computed(function () {\n      return rows.value.flat().some(function (row) {\n        return row.isCurrent;\n      });\n    });\n    var days = computed(function () {\n      var startOfMonth = props.date.startOf(\"month\");\n      var startOfMonthDay = startOfMonth.day() || 7;\n      var dateCountOfMonth = startOfMonth.daysInMonth();\n      var dateCountOfLastMonth = startOfMonth.subtract(1, \"month\").daysInMonth();\n      return {\n        startOfMonthDay: startOfMonthDay,\n        dateCountOfMonth: dateCountOfMonth,\n        dateCountOfLastMonth: dateCountOfLastMonth\n      };\n    });\n    var selectedDate = computed(function () {\n      return props.selectionMode === \"dates\" ? castArray(props.parsedValue) : [];\n    });\n\n    var setDateText = function setDateText(cell, _ref2) {\n      var count = _ref2.count,\n          rowIndex = _ref2.rowIndex,\n          columnIndex = _ref2.columnIndex;\n\n      var _unref = unref(days),\n          startOfMonthDay = _unref.startOfMonthDay,\n          dateCountOfMonth = _unref.dateCountOfMonth,\n          dateCountOfLastMonth = _unref.dateCountOfLastMonth;\n\n      var offset = unref(offsetDay);\n\n      if (rowIndex >= 0 && rowIndex <= 1) {\n        var numberOfDaysFromPreviousMonth = startOfMonthDay + offset < 0 ? 7 + startOfMonthDay + offset : startOfMonthDay + offset;\n\n        if (columnIndex + rowIndex * 7 >= numberOfDaysFromPreviousMonth) {\n          cell.text = count;\n          return true;\n        } else {\n          cell.text = dateCountOfLastMonth - (numberOfDaysFromPreviousMonth - columnIndex % 7) + 1 + rowIndex * 7;\n          cell.type = \"prev-month\";\n        }\n      } else {\n        if (count <= dateCountOfMonth) {\n          cell.text = count;\n        } else {\n          cell.text = count - dateCountOfMonth;\n          cell.type = \"next-month\";\n        }\n\n        return true;\n      }\n\n      return false;\n    };\n\n    var _setCellMetadata = function setCellMetadata(cell, _ref3, count) {\n      var columnIndex = _ref3.columnIndex,\n          rowIndex = _ref3.rowIndex;\n      var disabledDate = props.disabledDate,\n          cellClassName = props.cellClassName;\n\n      var _selectedDate = unref(selectedDate);\n\n      var shouldIncrement = setDateText(cell, {\n        count: count,\n        rowIndex: rowIndex,\n        columnIndex: columnIndex\n      });\n      var cellDate = cell.dayjs.toDate();\n      cell.selected = _selectedDate.find(function (d) {\n        return d.valueOf() === cell.dayjs.valueOf();\n      });\n      cell.isSelected = !!cell.selected;\n      cell.isCurrent = isCurrent(cell);\n      cell.disabled = disabledDate == null ? void 0 : disabledDate(cellDate);\n      cell.customClass = cellClassName == null ? void 0 : cellClassName(cellDate);\n      return shouldIncrement;\n    };\n\n    var setRowMetadata = function setRowMetadata(row) {\n      if (props.selectionMode === \"week\") {\n        var _ref4 = props.showWeekNumber ? [1, 7] : [0, 6],\n            _ref5 = _slicedToArray(_ref4, 2),\n            start = _ref5[0],\n            end = _ref5[1];\n\n        var isActive = isWeekActive(row[start + 1]);\n        row[start].inRange = isActive;\n        row[start].start = isActive;\n        row[end].inRange = isActive;\n        row[end].end = isActive;\n      }\n    };\n\n    var rows = computed(function () {\n      var minDate = props.minDate,\n          maxDate = props.maxDate,\n          rangeState = props.rangeState,\n          showWeekNumber = props.showWeekNumber;\n      var offset = offsetDay.value;\n      var rows_ = tableRows.value;\n      var dateUnit = \"day\";\n      var count = 1;\n\n      if (showWeekNumber) {\n        for (var rowIndex = 0; rowIndex < 6; rowIndex++) {\n          if (!rows_[rowIndex][0]) {\n            rows_[rowIndex][0] = {\n              type: \"week\",\n              text: startDate.value.add(rowIndex * 7 + 1, dateUnit).week()\n            };\n          }\n        }\n      }\n\n      buildPickerTable({\n        row: 6,\n        column: 7\n      }, rows_, {\n        startDate: minDate,\n        columnIndexOffset: showWeekNumber ? 1 : 0,\n        nextEndDate: rangeState.endDate || maxDate || rangeState.selecting && minDate || null,\n        now: dayjs().locale(unref(lang)).startOf(dateUnit),\n        unit: dateUnit,\n        relativeDateGetter: function relativeDateGetter(idx) {\n          return startDate.value.add(idx - offset, dateUnit);\n        },\n        setCellMetadata: function setCellMetadata() {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          if (_setCellMetadata.apply(void 0, args.concat([count]))) {\n            count += 1;\n          }\n        },\n        setRowMetadata: setRowMetadata\n      });\n      return rows_;\n    });\n    watch(function () {\n      return props.date;\n    }, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var _a, _b;\n\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!((_a = tbodyRef.value) == null ? void 0 : _a.contains(document.activeElement))) {\n                _context.next = 4;\n                break;\n              }\n\n              _context.next = 3;\n              return nextTick();\n\n            case 3:\n              (_b = currentCellRef.value) == null ? void 0 : _b.focus();\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    var focus = /*#__PURE__*/function () {\n      var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _a;\n\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                (_a = currentCellRef.value) == null ? void 0 : _a.focus();\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function focus() {\n        return _ref7.apply(this, arguments);\n      };\n    }();\n\n    var isNormalDay = function isNormalDay() {\n      var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n      return [\"normal\", \"today\"].includes(type);\n    };\n\n    var isCurrent = function isCurrent(cell) {\n      return props.selectionMode === \"date\" && isNormalDay(cell.type) && cellMatchesDate(cell, props.parsedValue);\n    };\n\n    var cellMatchesDate = function cellMatchesDate(cell, date) {\n      if (!date) return false;\n      return dayjs(date).locale(lang.value).isSame(props.date.date(Number(cell.text)), \"day\");\n    };\n\n    var getCellClasses = function getCellClasses(cell) {\n      var classes = [];\n\n      if (isNormalDay(cell.type) && !cell.disabled) {\n        classes.push(\"available\");\n\n        if (cell.type === \"today\") {\n          classes.push(\"today\");\n        }\n      } else {\n        classes.push(cell.type);\n      }\n\n      if (isCurrent(cell)) {\n        classes.push(\"current\");\n      }\n\n      if (cell.inRange && (isNormalDay(cell.type) || props.selectionMode === \"week\")) {\n        classes.push(\"in-range\");\n\n        if (cell.start) {\n          classes.push(\"start-date\");\n        }\n\n        if (cell.end) {\n          classes.push(\"end-date\");\n        }\n      }\n\n      if (cell.disabled) {\n        classes.push(\"disabled\");\n      }\n\n      if (cell.selected) {\n        classes.push(\"selected\");\n      }\n\n      if (cell.customClass) {\n        classes.push(cell.customClass);\n      }\n\n      return classes.join(\" \");\n    };\n\n    var getDateOfCell = function getDateOfCell(row, column) {\n      var offsetFromStart = row * 7 + (column - (props.showWeekNumber ? 1 : 0)) - offsetDay.value;\n      return startDate.value.add(offsetFromStart, \"day\");\n    };\n\n    var handleMouseMove = function handleMouseMove(event) {\n      var _a;\n\n      if (!props.rangeState.selecting) return;\n      var target = event.target;\n\n      if (target.tagName === \"SPAN\") {\n        target = (_a = target.parentNode) == null ? void 0 : _a.parentNode;\n      }\n\n      if (target.tagName === \"DIV\") {\n        target = target.parentNode;\n      }\n\n      if (target.tagName !== \"TD\") return;\n      var row = target.parentNode.rowIndex - 1;\n      var column = target.cellIndex;\n      if (rows.value[row][column].disabled) return;\n\n      if (row !== lastRow.value || column !== lastColumn.value) {\n        lastRow.value = row;\n        lastColumn.value = column;\n        emit(\"changerange\", {\n          selecting: true,\n          endDate: getDateOfCell(row, column)\n        });\n      }\n    };\n\n    var isSelectedCell = function isSelectedCell(cell) {\n      return !hasCurrent.value && (cell == null ? void 0 : cell.text) === 1 && cell.type === \"normal\" || cell.isCurrent;\n    };\n\n    var handleFocus = function handleFocus(event) {\n      if (focusWithClick || hasCurrent.value || props.selectionMode !== \"date\") return;\n      handlePickDate(event, true);\n    };\n\n    var handleMouseDown = function handleMouseDown(event) {\n      var target = event.target.closest(\"td\");\n      if (!target) return;\n      focusWithClick = true;\n    };\n\n    var handleMouseUp = function handleMouseUp(event) {\n      var target = event.target.closest(\"td\");\n      if (!target) return;\n      focusWithClick = false;\n    };\n\n    var handlePickDate = function handlePickDate(event) {\n      var isKeyboardMovement = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var target = event.target.closest(\"td\");\n      if (!target) return;\n      var row = target.parentNode.rowIndex - 1;\n      var column = target.cellIndex;\n      var cell = rows.value[row][column];\n      if (cell.disabled || cell.type === \"week\") return;\n      var newDate = getDateOfCell(row, column);\n\n      if (props.selectionMode === \"range\") {\n        if (!props.rangeState.selecting || !props.minDate) {\n          emit(\"pick\", {\n            minDate: newDate,\n            maxDate: null\n          });\n          emit(\"select\", true);\n        } else {\n          if (newDate >= props.minDate) {\n            emit(\"pick\", {\n              minDate: props.minDate,\n              maxDate: newDate\n            });\n          } else {\n            emit(\"pick\", {\n              minDate: newDate,\n              maxDate: props.minDate\n            });\n          }\n\n          emit(\"select\", false);\n        }\n      } else if (props.selectionMode === \"date\") {\n        emit(\"pick\", newDate, isKeyboardMovement);\n      } else if (props.selectionMode === \"week\") {\n        var weekNumber = newDate.week();\n        var value = \"\".concat(newDate.year(), \"w\").concat(weekNumber);\n        emit(\"pick\", {\n          year: newDate.year(),\n          week: weekNumber,\n          value: value,\n          date: newDate.startOf(\"week\")\n        });\n      } else if (props.selectionMode === \"dates\") {\n        var newValue = cell.selected ? castArray(props.parsedValue).filter(function (d) {\n          return (d == null ? void 0 : d.valueOf()) !== newDate.valueOf();\n        }) : castArray(props.parsedValue).concat([newDate]);\n        emit(\"pick\", newValue);\n      }\n    };\n\n    var isWeekActive = function isWeekActive(cell) {\n      if (props.selectionMode !== \"week\") return false;\n      var newDate = props.date.startOf(\"day\");\n\n      if (cell.type === \"prev-month\") {\n        newDate = newDate.subtract(1, \"month\");\n      }\n\n      if (cell.type === \"next-month\") {\n        newDate = newDate.add(1, \"month\");\n      }\n\n      newDate = newDate.date(Number.parseInt(cell.text, 10));\n\n      if (props.parsedValue && !Array.isArray(props.parsedValue)) {\n        var dayOffset = (props.parsedValue.day() - firstDayOfWeek + 7) % 7 - 1;\n        var weekDate = props.parsedValue.subtract(dayOffset, \"day\");\n        return weekDate.isSame(newDate, \"day\");\n      }\n\n      return false;\n    };\n\n    expose({\n      focus: focus\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createElementBlock(\"table\", {\n        role: \"grid\",\n        \"aria-label\": unref(t)(\"el.datepicker.dateTablePrompt\"),\n        cellspacing: \"0\",\n        cellpadding: \"0\",\n        \"class\": normalizeClass([unref(ns).b(), {\n          \"is-week-mode\": _ctx.selectionMode === \"week\"\n        }]),\n        onClick: handlePickDate,\n        onMousemove: handleMouseMove,\n        onMousedown: handleMouseDown,\n        onMouseup: handleMouseUp\n      }, [createElementVNode(\"tbody\", {\n        ref_key: \"tbodyRef\",\n        ref: tbodyRef\n      }, [createElementVNode(\"tr\", null, [_ctx.showWeekNumber ? (openBlock(), createElementBlock(\"th\", _hoisted_2, toDisplayString(unref(t)(\"el.datepicker.week\")), 1)) : createCommentVNode(\"v-if\", true), (openBlock(true), createElementBlock(Fragment, null, renderList(unref(WEEKS), function (week, key) {\n        return openBlock(), createElementBlock(\"th\", {\n          key: key,\n          scope: \"col\",\n          \"aria-label\": unref(t)(\"el.datepicker.weeksFull.\" + week)\n        }, toDisplayString(unref(t)(\"el.datepicker.weeks.\" + week)), 9, _hoisted_3);\n      }), 128))]), (openBlock(true), createElementBlock(Fragment, null, renderList(unref(rows), function (row, rowKey) {\n        return openBlock(), createElementBlock(\"tr\", {\n          key: rowKey,\n          \"class\": normalizeClass([unref(ns).e(\"row\"), {\n            current: isWeekActive(row[1])\n          }])\n        }, [(openBlock(true), createElementBlock(Fragment, null, renderList(row, function (cell, columnKey) {\n          return openBlock(), createElementBlock(\"td\", {\n            key: \"\".concat(rowKey, \".\").concat(columnKey),\n            ref_for: true,\n            ref: function ref(el) {\n              return isSelectedCell(cell) && (currentCellRef.value = el);\n            },\n            \"class\": normalizeClass(getCellClasses(cell)),\n            \"aria-current\": cell.isCurrent ? \"date\" : void 0,\n            \"aria-selected\": cell.isCurrent,\n            tabindex: isSelectedCell(cell) ? 0 : -1,\n            onFocus: handleFocus\n          }, [createVNode(unref(ElDatePickerCell), {\n            cell: cell\n          }, null, 8, [\"cell\"])], 42, _hoisted_4);\n        }), 128))], 2);\n      }), 128))], 512)], 42, _hoisted_1);\n    };\n  }\n});\n\nvar DateTable = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/date-picker/src/date-picker-com/basic-date-table.vue\"]]);\n\nexport { DateTable as default };","map":{"version":3,"mappings":"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","names":["useNamespace","useLocale","t","lang","tbodyRef","ref","currentCellRef","lastRow","lastColumn","tableRows","focusWithClick","firstDayOfWeek","date","$locale","weekStart","WEEKS_CONSTANT","locale","localeData","weekdaysShort","map","_","toLowerCase","computed","startDayOfMonth","startOf","subtract","day","concat","slice","rows","value","flat","some","row","startOfMonth","daysInMonth","dateCountOfLastMonth","startOfMonthDay","dateCountOfMonth","props","selectionMode","castArray","setDateText","cell","count","rowIndex","columnIndex","unref","days","offsetDay","numberOfDaysFromPreviousMonth","offset","text","type","setCellMetadata","disabledDate","cellClassName","selectedDate","shouldIncrement","toDate","_selectedDate","d","dayjs","valueOf","isCurrent","setRowMetadata","start","end","isActive","inRange","minDate","maxDate","rangeState","showWeekNumber","rows_","dateUnit","startDate","add","week","buildPickerTable","column","columnIndexOffset","nextEndDate","selecting","now","unit","relativeDateGetter","idx","args","watch","_a","nextTick","includes","isNormalDay","cellMatchesDate","isSame","getCellClasses","classes","push","customClass","getDateOfCell","offsetFromStart","tagName","target","disabled","emit","endDate","isSelectedCell","handleFocus","handlePickDate","event","newDate","isKeyboardMovement","year","isWeekActive"],"sources":["../../../../../../../packages/components/date-picker/src/date-picker-com/basic-date-table.vue"],"sourcesContent":["<template>\n  <table\n    role=\"grid\"\n    :aria-label=\"t('el.datepicker.dateTablePrompt')\"\n    cellspacing=\"0\"\n    cellpadding=\"0\"\n    :class=\"[ns.b(), { 'is-week-mode': selectionMode === 'week' }]\"\n    @click=\"handlePickDate\"\n    @mousemove=\"handleMouseMove\"\n    @mousedown=\"handleMouseDown\"\n    @mouseup=\"handleMouseUp\"\n  >\n    <tbody ref=\"tbodyRef\">\n      <tr>\n        <th v-if=\"showWeekNumber\" scope=\"col\">{{ t('el.datepicker.week') }}</th>\n        <th\n          v-for=\"(week, key) in WEEKS\"\n          :key=\"key\"\n          scope=\"col\"\n          :aria-label=\"t('el.datepicker.weeksFull.' + week)\"\n        >\n          {{ t('el.datepicker.weeks.' + week) }}\n        </th>\n      </tr>\n      <tr\n        v-for=\"(row, rowKey) in rows\"\n        :key=\"rowKey\"\n        :class=\"[ns.e('row'), { current: isWeekActive(row[1]) }]\"\n      >\n        <td\n          v-for=\"(cell, columnKey) in row\"\n          :key=\"`${rowKey}.${columnKey}`\"\n          :ref=\"(el) => isSelectedCell(cell) && (currentCellRef = el as HTMLElement)\"\n          :class=\"getCellClasses(cell)\"\n          :aria-current=\"cell.isCurrent ? 'date' : undefined\"\n          :aria-selected=\"cell.isCurrent\"\n          :tabindex=\"isSelectedCell(cell) ? 0 : -1\"\n          @focus=\"handleFocus\"\n        >\n          <el-date-picker-cell :cell=\"cell\" />\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, nextTick, ref, unref, watch } from 'vue'\nimport dayjs from 'dayjs'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport { castArray } from '@element-plus/utils'\nimport { basicDateTableProps } from '../props/basic-date-table'\nimport { buildPickerTable } from '../utils'\nimport ElDatePickerCell from './basic-cell-render'\n\nimport type { Dayjs } from 'dayjs'\nimport type { DateCell } from '../date-picker.type'\n\nconst props = defineProps(basicDateTableProps)\nconst emit = defineEmits(['changerange', 'pick', 'select'])\n\nconst ns = useNamespace('date-table')\n\nconst { t, lang } = useLocale()\n\nconst tbodyRef = ref<HTMLElement>()\nconst currentCellRef = ref<HTMLElement>()\n// data\nconst lastRow = ref<number>()\nconst lastColumn = ref<number>()\nconst tableRows = ref<DateCell[][]>([[], [], [], [], [], []])\n\nlet focusWithClick = false\n\n// todo better way to get Day.js locale object\nconst firstDayOfWeek = (props.date as any).$locale().weekStart || 7\nconst WEEKS_CONSTANT = props.date\n  .locale('en')\n  .localeData()\n  .weekdaysShort()\n  .map((_) => _.toLowerCase())\n\nconst offsetDay = computed(() => {\n  // Sunday 7(0), cal the left and right offset days, 3217654, such as Monday is -1, the is to adjust the position of the first two rows of dates\n  return firstDayOfWeek > 3 ? 7 - firstDayOfWeek : -firstDayOfWeek\n})\n\nconst startDate = computed(() => {\n  const startDayOfMonth = props.date.startOf('month')\n  return startDayOfMonth.subtract(startDayOfMonth.day() || 7, 'day')\n})\n\nconst WEEKS = computed(() => {\n  return WEEKS_CONSTANT.concat(WEEKS_CONSTANT).slice(\n    firstDayOfWeek,\n    firstDayOfWeek + 7\n  )\n})\n\nconst hasCurrent = computed<boolean>(() => {\n  return rows.value.flat().some((row) => {\n    return row.isCurrent\n  })\n})\n\nconst days = computed(() => {\n  const startOfMonth = props.date.startOf('month')\n  const startOfMonthDay = startOfMonth.day() || 7 // day of first day\n  const dateCountOfMonth = startOfMonth.daysInMonth()\n\n  const dateCountOfLastMonth = startOfMonth.subtract(1, 'month').daysInMonth()\n\n  return {\n    startOfMonthDay,\n    dateCountOfMonth,\n    dateCountOfLastMonth,\n  }\n})\n\nconst selectedDate = computed(() => {\n  return props.selectionMode === 'dates'\n    ? (castArray(props.parsedValue) as Dayjs[])\n    : ([] as Dayjs[])\n})\n\n// Return value indicates should the counter be incremented\nconst setDateText = (\n  cell: DateCell,\n  {\n    count,\n    rowIndex,\n    columnIndex,\n  }: {\n    count: number\n    rowIndex: number\n    columnIndex: number\n  }\n): boolean => {\n  const { startOfMonthDay, dateCountOfMonth, dateCountOfLastMonth } =\n    unref(days)\n  const offset = unref(offsetDay)\n  if (rowIndex >= 0 && rowIndex <= 1) {\n    const numberOfDaysFromPreviousMonth =\n      startOfMonthDay + offset < 0\n        ? 7 + startOfMonthDay + offset\n        : startOfMonthDay + offset\n\n    if (columnIndex + rowIndex * 7 >= numberOfDaysFromPreviousMonth) {\n      cell.text = count\n      return true\n    } else {\n      cell.text =\n        dateCountOfLastMonth -\n        (numberOfDaysFromPreviousMonth - (columnIndex % 7)) +\n        1 +\n        rowIndex * 7\n      cell.type = 'prev-month'\n    }\n  } else {\n    if (count <= dateCountOfMonth) {\n      cell.text = count\n    } else {\n      cell.text = count - dateCountOfMonth\n      cell.type = 'next-month'\n    }\n    return true\n  }\n  return false\n}\n\nconst setCellMetadata = (\n  cell: DateCell,\n  {\n    columnIndex,\n    rowIndex,\n  }: {\n    columnIndex: number\n    rowIndex: number\n  },\n  count: number\n) => {\n  const { disabledDate, cellClassName } = props\n  const _selectedDate = unref(selectedDate)\n  const shouldIncrement = setDateText(cell, { count, rowIndex, columnIndex })\n\n  const cellDate = cell.dayjs!.toDate()\n  cell.selected = _selectedDate.find(\n    (d) => d.valueOf() === cell.dayjs!.valueOf()\n  )\n  cell.isSelected = !!cell.selected\n  cell.isCurrent = isCurrent(cell)\n  cell.disabled = disabledDate?.(cellDate)\n  cell.customClass = cellClassName?.(cellDate)\n  return shouldIncrement\n}\n\nconst setRowMetadata = (row: DateCell[]) => {\n  if (props.selectionMode === 'week') {\n    const [start, end] = props.showWeekNumber ? [1, 7] : [0, 6]\n    const isActive = isWeekActive(row[start + 1])\n    row[start].inRange = isActive\n    row[start].start = isActive\n    row[end].inRange = isActive\n    row[end].end = isActive\n  }\n}\n\nconst rows = computed(() => {\n  const { minDate, maxDate, rangeState, showWeekNumber } = props\n\n  const offset = offsetDay.value\n  const rows_ = tableRows.value\n  const dateUnit = 'day'\n  let count = 1\n\n  if (showWeekNumber) {\n    for (let rowIndex = 0; rowIndex < 6; rowIndex++) {\n      if (!rows_[rowIndex][0]) {\n        rows_[rowIndex][0] = {\n          type: 'week',\n          text: startDate.value.add(rowIndex * 7 + 1, dateUnit).week(),\n        }\n      }\n    }\n  }\n\n  buildPickerTable({ row: 6, column: 7 }, rows_, {\n    startDate: minDate,\n    columnIndexOffset: showWeekNumber ? 1 : 0,\n    nextEndDate:\n      rangeState.endDate ||\n      maxDate ||\n      (rangeState.selecting && minDate) ||\n      null,\n    now: dayjs().locale(unref(lang)).startOf(dateUnit),\n    unit: dateUnit,\n    relativeDateGetter: (idx: number) =>\n      startDate.value.add(idx - offset, dateUnit),\n    setCellMetadata: (...args) => {\n      if (setCellMetadata(...args, count)) {\n        count += 1\n      }\n    },\n\n    setRowMetadata,\n  })\n\n  return rows_\n})\n\nwatch(\n  () => props.date,\n  async () => {\n    if (tbodyRef.value?.contains(document.activeElement)) {\n      await nextTick()\n      currentCellRef.value?.focus()\n    }\n  }\n)\n\nconst focus = async () => {\n  currentCellRef.value?.focus()\n}\n\nconst isNormalDay = (type = '') => {\n  return ['normal', 'today'].includes(type)\n}\n\nconst isCurrent = (cell: DateCell): boolean => {\n  return (\n    props.selectionMode === 'date' &&\n    isNormalDay(cell.type) &&\n    cellMatchesDate(cell, props.parsedValue as Dayjs)\n  )\n}\n\nconst cellMatchesDate = (cell: DateCell, date: Dayjs) => {\n  if (!date) return false\n  return dayjs(date)\n    .locale(lang.value)\n    .isSame(props.date.date(Number(cell.text)), 'day')\n}\n\nconst getCellClasses = (cell: DateCell) => {\n  const classes: string[] = []\n  if (isNormalDay(cell.type) && !cell.disabled) {\n    classes.push('available')\n    if (cell.type === 'today') {\n      classes.push('today')\n    }\n  } else {\n    classes.push(cell.type!)\n  }\n\n  if (isCurrent(cell)) {\n    classes.push('current')\n  }\n\n  if (\n    cell.inRange &&\n    (isNormalDay(cell.type) || props.selectionMode === 'week')\n  ) {\n    classes.push('in-range')\n\n    if (cell.start) {\n      classes.push('start-date')\n    }\n\n    if (cell.end) {\n      classes.push('end-date')\n    }\n  }\n\n  if (cell.disabled) {\n    classes.push('disabled')\n  }\n\n  if (cell.selected) {\n    classes.push('selected')\n  }\n\n  if (cell.customClass) {\n    classes.push(cell.customClass)\n  }\n\n  return classes.join(' ')\n}\n\nconst getDateOfCell = (row: number, column: number) => {\n  const offsetFromStart =\n    row * 7 + (column - (props.showWeekNumber ? 1 : 0)) - offsetDay.value\n  return startDate.value.add(offsetFromStart, 'day')\n}\n\nconst handleMouseMove = (event: MouseEvent) => {\n  if (!props.rangeState.selecting) return\n\n  let target = event.target as HTMLElement\n  if (target.tagName === 'SPAN') {\n    target = target.parentNode?.parentNode as HTMLElement\n  }\n  if (target.tagName === 'DIV') {\n    target = target.parentNode as HTMLElement\n  }\n  if (target.tagName !== 'TD') return\n\n  const row = (target.parentNode as HTMLTableRowElement).rowIndex - 1\n  const column = (target as HTMLTableCellElement).cellIndex\n\n  // can not select disabled date\n  if (rows.value[row][column].disabled) return\n\n  // only update rangeState when mouse moves to a new cell\n  // this avoids frequent Date object creation and improves performance\n  if (row !== lastRow.value || column !== lastColumn.value) {\n    lastRow.value = row\n    lastColumn.value = column\n    emit('changerange', {\n      selecting: true,\n      endDate: getDateOfCell(row, column),\n    })\n  }\n}\n\nconst isSelectedCell = (cell: DateCell) => {\n  return (\n    (!hasCurrent.value && cell?.text === 1 && cell.type === 'normal') ||\n    cell.isCurrent\n  )\n}\n\nconst handleFocus = (event: FocusEvent) => {\n  if (focusWithClick || hasCurrent.value || props.selectionMode !== 'date')\n    return\n  handlePickDate(event, true)\n}\n\nconst handleMouseDown = (event: MouseEvent) => {\n  const target = (event.target as HTMLElement).closest('td')\n  if (!target) return\n  focusWithClick = true\n}\n\nconst handleMouseUp = (event: MouseEvent) => {\n  const target = (event.target as HTMLElement).closest('td')\n  if (!target) return\n  focusWithClick = false\n}\n\nconst handlePickDate = (\n  event: FocusEvent | MouseEvent,\n  isKeyboardMovement = false\n) => {\n  const target = (event.target as HTMLElement).closest('td')\n\n  if (!target) return\n\n  const row = (target.parentNode as HTMLTableRowElement).rowIndex - 1\n  const column = (target as HTMLTableCellElement).cellIndex\n  const cell = rows.value[row][column]\n\n  if (cell.disabled || cell.type === 'week') return\n\n  const newDate = getDateOfCell(row, column)\n\n  if (props.selectionMode === 'range') {\n    if (!props.rangeState.selecting || !props.minDate) {\n      emit('pick', { minDate: newDate, maxDate: null })\n      emit('select', true)\n    } else {\n      if (newDate >= props.minDate) {\n        emit('pick', { minDate: props.minDate, maxDate: newDate })\n      } else {\n        emit('pick', { minDate: newDate, maxDate: props.minDate })\n      }\n      emit('select', false)\n    }\n  } else if (props.selectionMode === 'date') {\n    emit('pick', newDate, isKeyboardMovement)\n  } else if (props.selectionMode === 'week') {\n    const weekNumber = newDate.week()\n    const value = `${newDate.year()}w${weekNumber}`\n    emit('pick', {\n      year: newDate.year(),\n      week: weekNumber,\n      value,\n      date: newDate.startOf('week'),\n    })\n  } else if (props.selectionMode === 'dates') {\n    const newValue = cell.selected\n      ? castArray(props.parsedValue).filter(\n          (d) => d?.valueOf() !== newDate.valueOf()\n        )\n      : castArray(props.parsedValue).concat([newDate])\n    emit('pick', newValue)\n  }\n}\n\nconst isWeekActive = (cell: DateCell) => {\n  if (props.selectionMode !== 'week') return false\n  let newDate = props.date.startOf('day')\n\n  if (cell.type === 'prev-month') {\n    newDate = newDate.subtract(1, 'month')\n  }\n\n  if (cell.type === 'next-month') {\n    newDate = newDate.add(1, 'month')\n  }\n\n  newDate = newDate.date(Number.parseInt(cell.text as any, 10))\n\n  if (props.parsedValue && !Array.isArray(props.parsedValue)) {\n    const dayOffset = ((props.parsedValue.day() - firstDayOfWeek + 7) % 7) - 1\n    const weekDate = props.parsedValue.subtract(dayOffset, 'day')\n    return weekDate.isSame(newDate, 'day')\n  }\n  return false\n}\n\ndefineExpose({\n  /**\n   * @description focus on current cell\n   */\n  focus,\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}