{"ast":null,"code":"import _slicedToArray from \"/home/little/Documents/music_web/backandfrontsep/zhengdao-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport { defineComponent, inject, computed, ref, unref, openBlock, createElementBlock, normalizeClass, createElementVNode, toDisplayString, createVNode, createCommentVNode } from 'vue';\nimport dayjs from 'dayjs';\nimport { union } from 'lodash-unified';\nimport '../../../../hooks/index.mjs';\nimport '../../../../utils/index.mjs';\nimport '../../../../constants/index.mjs';\nimport { panelTimeRangeProps } from '../props/panel-time-range.mjs';\nimport { useTimePanel } from '../composables/use-time-panel.mjs';\nimport { useOldValue, buildAvailableTimeSlotGetter } from '../composables/use-time-picker.mjs';\nimport TimeSpinner from './basic-time-spinner.mjs';\nimport _export_sfc from '../../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useLocale } from '../../../../hooks/use-locale/index.mjs';\nimport { useNamespace } from '../../../../hooks/use-namespace/index.mjs';\nimport { EVENT_CODE } from '../../../../constants/aria.mjs';\nimport { isArray } from '@vue/shared';\nvar _hoisted_1 = [\"disabled\"];\n\nvar _sfc_main = /* @__PURE__ */defineComponent({\n  __name: \"panel-time-range\",\n  props: panelTimeRangeProps,\n  emits: [\"pick\", \"select-range\", \"set-picker-option\"],\n  setup: function setup(__props, _ref) {\n    var emit = _ref.emit;\n    var props = __props;\n\n    var makeSelectRange = function makeSelectRange(start, end) {\n      var result = [];\n\n      for (var i = start; i <= end; i++) {\n        result.push(i);\n      }\n\n      return result;\n    };\n\n    var _useLocale = useLocale(),\n        t = _useLocale.t,\n        lang = _useLocale.lang;\n\n    var nsTime = useNamespace(\"time\");\n    var nsPicker = useNamespace(\"picker\");\n    var pickerBase = inject(\"EP_PICKER_BASE\");\n    var _pickerBase$props = pickerBase.props,\n        arrowControl = _pickerBase$props.arrowControl,\n        disabledHours = _pickerBase$props.disabledHours,\n        disabledMinutes = _pickerBase$props.disabledMinutes,\n        disabledSeconds = _pickerBase$props.disabledSeconds,\n        defaultValue = _pickerBase$props.defaultValue;\n    var startTime = computed(function () {\n      return props.parsedValue[0];\n    });\n    var endTime = computed(function () {\n      return props.parsedValue[1];\n    });\n    var oldValue = useOldValue(props);\n\n    var handleCancel = function handleCancel() {\n      emit(\"pick\", oldValue.value, false);\n    };\n\n    var showSeconds = computed(function () {\n      return props.format.includes(\"ss\");\n    });\n    var amPmMode = computed(function () {\n      if (props.format.includes(\"A\")) return \"A\";\n      if (props.format.includes(\"a\")) return \"a\";\n      return \"\";\n    });\n\n    var handleConfirm = function handleConfirm() {\n      var visible = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      emit(\"pick\", [startTime.value, endTime.value], visible);\n    };\n\n    var handleMinChange = function handleMinChange(date) {\n      handleChange(date.millisecond(0), endTime.value);\n    };\n\n    var handleMaxChange = function handleMaxChange(date) {\n      handleChange(startTime.value, date.millisecond(0));\n    };\n\n    var isValidValue = function isValidValue(_date) {\n      var parsedDate = _date.map(function (_) {\n        return dayjs(_).locale(lang.value);\n      });\n\n      var result = getRangeAvailableTime(parsedDate);\n      return parsedDate[0].isSame(result[0]) && parsedDate[1].isSame(result[1]);\n    };\n\n    var handleChange = function handleChange(start, end) {\n      emit(\"pick\", [start, end], true);\n    };\n\n    var btnConfirmDisabled = computed(function () {\n      return startTime.value > endTime.value;\n    });\n    var selectionRange = ref([0, 2]);\n\n    var setMinSelectionRange = function setMinSelectionRange(start, end) {\n      emit(\"select-range\", start, end, \"min\");\n      selectionRange.value = [start, end];\n    };\n\n    var offset = computed(function () {\n      return showSeconds.value ? 11 : 8;\n    });\n\n    var setMaxSelectionRange = function setMaxSelectionRange(start, end) {\n      emit(\"select-range\", start, end, \"max\");\n\n      var _offset = unref(offset);\n\n      selectionRange.value = [start + _offset, end + _offset];\n    };\n\n    var changeSelectionRange = function changeSelectionRange(step) {\n      var list = showSeconds.value ? [0, 3, 6, 11, 14, 17] : [0, 3, 8, 11];\n      var mapping = [\"hours\", \"minutes\"].concat(showSeconds.value ? [\"seconds\"] : []);\n      var index = list.indexOf(selectionRange.value[0]);\n      var next = (index + step + list.length) % list.length;\n      var half = list.length / 2;\n\n      if (next < half) {\n        timePickerOptions[\"start_emitSelectRange\"](mapping[next]);\n      } else {\n        timePickerOptions[\"end_emitSelectRange\"](mapping[next - half]);\n      }\n    };\n\n    var handleKeydown = function handleKeydown(event) {\n      var code = event.code;\n      var left = EVENT_CODE.left,\n          right = EVENT_CODE.right,\n          up = EVENT_CODE.up,\n          down = EVENT_CODE.down;\n\n      if ([left, right].includes(code)) {\n        var step = code === left ? -1 : 1;\n        changeSelectionRange(step);\n        event.preventDefault();\n        return;\n      }\n\n      if ([up, down].includes(code)) {\n        var _step = code === up ? -1 : 1;\n\n        var role = selectionRange.value[0] < offset.value ? \"start\" : \"end\";\n        timePickerOptions[\"\".concat(role, \"_scrollDown\")](_step);\n        event.preventDefault();\n        return;\n      }\n    };\n\n    var disabledHours_ = function disabledHours_(role, compare) {\n      var defaultDisable = disabledHours ? disabledHours(role) : [];\n      var isStart = role === \"start\";\n      var compareDate = compare || (isStart ? endTime.value : startTime.value);\n      var compareHour = compareDate.hour();\n      var nextDisable = isStart ? makeSelectRange(compareHour + 1, 23) : makeSelectRange(0, compareHour - 1);\n      return union(defaultDisable, nextDisable);\n    };\n\n    var disabledMinutes_ = function disabledMinutes_(hour, role, compare) {\n      var defaultDisable = disabledMinutes ? disabledMinutes(hour, role) : [];\n      var isStart = role === \"start\";\n      var compareDate = compare || (isStart ? endTime.value : startTime.value);\n      var compareHour = compareDate.hour();\n\n      if (hour !== compareHour) {\n        return defaultDisable;\n      }\n\n      var compareMinute = compareDate.minute();\n      var nextDisable = isStart ? makeSelectRange(compareMinute + 1, 59) : makeSelectRange(0, compareMinute - 1);\n      return union(defaultDisable, nextDisable);\n    };\n\n    var disabledSeconds_ = function disabledSeconds_(hour, minute, role, compare) {\n      var defaultDisable = disabledSeconds ? disabledSeconds(hour, minute, role) : [];\n      var isStart = role === \"start\";\n      var compareDate = compare || (isStart ? endTime.value : startTime.value);\n      var compareHour = compareDate.hour();\n      var compareMinute = compareDate.minute();\n\n      if (hour !== compareHour || minute !== compareMinute) {\n        return defaultDisable;\n      }\n\n      var compareSecond = compareDate.second();\n      var nextDisable = isStart ? makeSelectRange(compareSecond + 1, 59) : makeSelectRange(0, compareSecond - 1);\n      return union(defaultDisable, nextDisable);\n    };\n\n    var getRangeAvailableTime = function getRangeAvailableTime(_ref2) {\n      var _ref3 = _slicedToArray(_ref2, 2),\n          start = _ref3[0],\n          end = _ref3[1];\n\n      return [getAvailableTime(start, \"start\", true, end), getAvailableTime(end, \"end\", false, start)];\n    };\n\n    var _buildAvailableTimeSl = buildAvailableTimeSlotGetter(disabledHours_, disabledMinutes_, disabledSeconds_),\n        getAvailableHours = _buildAvailableTimeSl.getAvailableHours,\n        getAvailableMinutes = _buildAvailableTimeSl.getAvailableMinutes,\n        getAvailableSeconds = _buildAvailableTimeSl.getAvailableSeconds;\n\n    var _useTimePanel = useTimePanel({\n      getAvailableHours: getAvailableHours,\n      getAvailableMinutes: getAvailableMinutes,\n      getAvailableSeconds: getAvailableSeconds\n    }),\n        timePickerOptions = _useTimePanel.timePickerOptions,\n        getAvailableTime = _useTimePanel.getAvailableTime,\n        onSetOption = _useTimePanel.onSetOption;\n\n    var parseUserInput = function parseUserInput(days) {\n      if (!days) return null;\n\n      if (isArray(days)) {\n        return days.map(function (d) {\n          return dayjs(d, props.format).locale(lang.value);\n        });\n      }\n\n      return dayjs(days, props.format).locale(lang.value);\n    };\n\n    var formatToString = function formatToString(days) {\n      if (!days) return null;\n\n      if (isArray(days)) {\n        return days.map(function (d) {\n          return d.format(props.format);\n        });\n      }\n\n      return days.format(props.format);\n    };\n\n    var getDefaultValue = function getDefaultValue() {\n      if (isArray(defaultValue)) {\n        return defaultValue.map(function (d) {\n          return dayjs(d).locale(lang.value);\n        });\n      }\n\n      var defaultDay = dayjs(defaultValue).locale(lang.value);\n      return [defaultDay, defaultDay.add(60, \"m\")];\n    };\n\n    emit(\"set-picker-option\", [\"formatToString\", formatToString]);\n    emit(\"set-picker-option\", [\"parseUserInput\", parseUserInput]);\n    emit(\"set-picker-option\", [\"isValidValue\", isValidValue]);\n    emit(\"set-picker-option\", [\"handleKeydownInput\", handleKeydown]);\n    emit(\"set-picker-option\", [\"getDefaultValue\", getDefaultValue]);\n    emit(\"set-picker-option\", [\"getRangeAvailableTime\", getRangeAvailableTime]);\n    return function (_ctx, _cache) {\n      return _ctx.actualVisible ? (openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        \"class\": normalizeClass([unref(nsTime).b(\"range-picker\"), unref(nsPicker).b(\"panel\")])\n      }, [createElementVNode(\"div\", {\n        \"class\": normalizeClass(unref(nsTime).be(\"range-picker\", \"content\"))\n      }, [createElementVNode(\"div\", {\n        \"class\": normalizeClass(unref(nsTime).be(\"range-picker\", \"cell\"))\n      }, [createElementVNode(\"div\", {\n        \"class\": normalizeClass(unref(nsTime).be(\"range-picker\", \"header\"))\n      }, toDisplayString(unref(t)(\"el.datepicker.startTime\")), 3), createElementVNode(\"div\", {\n        \"class\": normalizeClass([unref(nsTime).be(\"range-picker\", \"body\"), unref(nsTime).be(\"panel\", \"content\"), unref(nsTime).is(\"arrow\", unref(arrowControl)), {\n          \"has-seconds\": unref(showSeconds)\n        }])\n      }, [createVNode(TimeSpinner, {\n        ref: \"minSpinner\",\n        role: \"start\",\n        \"show-seconds\": unref(showSeconds),\n        \"am-pm-mode\": unref(amPmMode),\n        \"arrow-control\": unref(arrowControl),\n        \"spinner-date\": unref(startTime),\n        \"disabled-hours\": disabledHours_,\n        \"disabled-minutes\": disabledMinutes_,\n        \"disabled-seconds\": disabledSeconds_,\n        onChange: handleMinChange,\n        onSetOption: unref(onSetOption),\n        onSelectRange: setMinSelectionRange\n      }, null, 8, [\"show-seconds\", \"am-pm-mode\", \"arrow-control\", \"spinner-date\", \"onSetOption\"])], 2)], 2), createElementVNode(\"div\", {\n        \"class\": normalizeClass(unref(nsTime).be(\"range-picker\", \"cell\"))\n      }, [createElementVNode(\"div\", {\n        \"class\": normalizeClass(unref(nsTime).be(\"range-picker\", \"header\"))\n      }, toDisplayString(unref(t)(\"el.datepicker.endTime\")), 3), createElementVNode(\"div\", {\n        \"class\": normalizeClass([unref(nsTime).be(\"range-picker\", \"body\"), unref(nsTime).be(\"panel\", \"content\"), unref(nsTime).is(\"arrow\", unref(arrowControl)), {\n          \"has-seconds\": unref(showSeconds)\n        }])\n      }, [createVNode(TimeSpinner, {\n        ref: \"maxSpinner\",\n        role: \"end\",\n        \"show-seconds\": unref(showSeconds),\n        \"am-pm-mode\": unref(amPmMode),\n        \"arrow-control\": unref(arrowControl),\n        \"spinner-date\": unref(endTime),\n        \"disabled-hours\": disabledHours_,\n        \"disabled-minutes\": disabledMinutes_,\n        \"disabled-seconds\": disabledSeconds_,\n        onChange: handleMaxChange,\n        onSetOption: unref(onSetOption),\n        onSelectRange: setMaxSelectionRange\n      }, null, 8, [\"show-seconds\", \"am-pm-mode\", \"arrow-control\", \"spinner-date\", \"onSetOption\"])], 2)], 2)], 2), createElementVNode(\"div\", {\n        \"class\": normalizeClass(unref(nsTime).be(\"panel\", \"footer\"))\n      }, [createElementVNode(\"button\", {\n        type: \"button\",\n        \"class\": normalizeClass([unref(nsTime).be(\"panel\", \"btn\"), \"cancel\"]),\n        onClick: _cache[0] || (_cache[0] = function ($event) {\n          return handleCancel();\n        })\n      }, toDisplayString(unref(t)(\"el.datepicker.cancel\")), 3), createElementVNode(\"button\", {\n        type: \"button\",\n        \"class\": normalizeClass([unref(nsTime).be(\"panel\", \"btn\"), \"confirm\"]),\n        disabled: unref(btnConfirmDisabled),\n        onClick: _cache[1] || (_cache[1] = function ($event) {\n          return handleConfirm();\n        })\n      }, toDisplayString(unref(t)(\"el.datepicker.confirm\")), 11, _hoisted_1)], 2)], 2)) : createCommentVNode(\"v-if\", true);\n    };\n  }\n});\n\nvar TimeRangePanel = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/time-picker/src/time-picker-com/panel-time-range.vue\"]]);\n\nexport { TimeRangePanel as default };","map":{"version":3,"mappings":"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","names":["makeSelectRange","start","end","result","i","push","useLocale","t","lang","useNamespace","inject","pickerBase","arrowControl","disabledHours","disabledMinutes","disabledSeconds","defaultValue","startTime","props","parsedValue","endTime","useOldValue","handleCancel","emit","oldValue","computed","format","includes","handleConfirm","visible","value","handleMinChange","date","handleChange","handleMaxChange","isValidValue","_date","_","dayjs","locale","getRangeAvailableTime","parsedDate","isSame","selectionRange","setMinSelectionRange","offset","showSeconds","setMaxSelectionRange","unref","_offset","changeSelectionRange","step","list","mapping","concat","index","indexOf","next","length","half","timePickerOptions","handleKeydown","event","code","left","EVENT_CODE","right","up","down","preventDefault","role","disabledHours_","compare","defaultDisable","isStart","compareDate","hour","compareHour","nextDisable","disabledMinutes_","minute","compareMinute","disabledSeconds_","second","compareSecond","getAvailableTime","buildAvailableTimeSlotGetter","getAvailableHours","getAvailableMinutes","getAvailableSeconds","useTimePanel","onSetOption","parseUserInput","days","d","formatToString","map","getDefaultValue","defaultDay","add"],"sources":["../../../../../../../packages/components/time-picker/src/time-picker-com/panel-time-range.vue"],"sourcesContent":["<template>\n  <div\n    v-if=\"actualVisible\"\n    :class=\"[nsTime.b('range-picker'), nsPicker.b('panel')]\"\n  >\n    <div :class=\"nsTime.be('range-picker', 'content')\">\n      <div :class=\"nsTime.be('range-picker', 'cell')\">\n        <div :class=\"nsTime.be('range-picker', 'header')\">\n          {{ t('el.datepicker.startTime') }}\n        </div>\n        <div\n          :class=\"[\n            nsTime.be('range-picker', 'body'),\n            nsTime.be('panel', 'content'),\n            nsTime.is('arrow', arrowControl),\n            { 'has-seconds': showSeconds },\n          ]\"\n        >\n          <time-spinner\n            ref=\"minSpinner\"\n            role=\"start\"\n            :show-seconds=\"showSeconds\"\n            :am-pm-mode=\"amPmMode\"\n            :arrow-control=\"arrowControl\"\n            :spinner-date=\"startTime\"\n            :disabled-hours=\"disabledHours_\"\n            :disabled-minutes=\"disabledMinutes_\"\n            :disabled-seconds=\"disabledSeconds_\"\n            @change=\"handleMinChange\"\n            @set-option=\"onSetOption\"\n            @select-range=\"setMinSelectionRange\"\n          />\n        </div>\n      </div>\n      <div :class=\"nsTime.be('range-picker', 'cell')\">\n        <div :class=\"nsTime.be('range-picker', 'header')\">\n          {{ t('el.datepicker.endTime') }}\n        </div>\n        <div\n          :class=\"[\n            nsTime.be('range-picker', 'body'),\n            nsTime.be('panel', 'content'),\n            nsTime.is('arrow', arrowControl),\n            { 'has-seconds': showSeconds },\n          ]\"\n        >\n          <time-spinner\n            ref=\"maxSpinner\"\n            role=\"end\"\n            :show-seconds=\"showSeconds\"\n            :am-pm-mode=\"amPmMode\"\n            :arrow-control=\"arrowControl\"\n            :spinner-date=\"endTime\"\n            :disabled-hours=\"disabledHours_\"\n            :disabled-minutes=\"disabledMinutes_\"\n            :disabled-seconds=\"disabledSeconds_\"\n            @change=\"handleMaxChange\"\n            @set-option=\"onSetOption\"\n            @select-range=\"setMaxSelectionRange\"\n          />\n        </div>\n      </div>\n    </div>\n    <div :class=\"nsTime.be('panel', 'footer')\">\n      <button\n        type=\"button\"\n        :class=\"[nsTime.be('panel', 'btn'), 'cancel']\"\n        @click=\"handleCancel()\"\n      >\n        {{ t('el.datepicker.cancel') }}\n      </button>\n      <button\n        type=\"button\"\n        :class=\"[nsTime.be('panel', 'btn'), 'confirm']\"\n        :disabled=\"btnConfirmDisabled\"\n        @click=\"handleConfirm()\"\n      >\n        {{ t('el.datepicker.confirm') }}\n      </button>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, inject, ref, unref } from 'vue'\nimport dayjs from 'dayjs'\nimport { union } from 'lodash-unified'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport { isArray } from '@element-plus/utils'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport { panelTimeRangeProps } from '../props/panel-time-range'\nimport { useTimePanel } from '../composables/use-time-panel'\nimport {\n  buildAvailableTimeSlotGetter,\n  useOldValue,\n} from '../composables/use-time-picker'\nimport TimeSpinner from './basic-time-spinner.vue'\n\nimport type { Dayjs } from 'dayjs'\n\nconst props = defineProps(panelTimeRangeProps)\nconst emit = defineEmits(['pick', 'select-range', 'set-picker-option'])\n\nconst makeSelectRange = (start: number, end: number) => {\n  const result: number[] = []\n  for (let i = start; i <= end; i++) {\n    result.push(i)\n  }\n  return result\n}\n\nconst { t, lang } = useLocale()\nconst nsTime = useNamespace('time')\nconst nsPicker = useNamespace('picker')\nconst pickerBase = inject('EP_PICKER_BASE') as any\nconst {\n  arrowControl,\n  disabledHours,\n  disabledMinutes,\n  disabledSeconds,\n  defaultValue,\n} = pickerBase.props\n\nconst startTime = computed(() => props.parsedValue![0])\nconst endTime = computed(() => props.parsedValue![1])\nconst oldValue = useOldValue(props)\nconst handleCancel = () => {\n  emit('pick', oldValue.value, false)\n}\nconst showSeconds = computed(() => {\n  return props.format.includes('ss')\n})\nconst amPmMode = computed(() => {\n  if (props.format.includes('A')) return 'A'\n  if (props.format.includes('a')) return 'a'\n  return ''\n})\n\nconst handleConfirm = (visible = false) => {\n  emit('pick', [startTime.value, endTime.value], visible)\n}\n\nconst handleMinChange = (date: Dayjs) => {\n  handleChange(date.millisecond(0), endTime.value)\n}\nconst handleMaxChange = (date: Dayjs) => {\n  handleChange(startTime.value, date.millisecond(0))\n}\n\nconst isValidValue = (_date: Dayjs[]) => {\n  const parsedDate = _date.map((_) => dayjs(_).locale(lang.value))\n  const result = getRangeAvailableTime(parsedDate)\n  return parsedDate[0].isSame(result[0]) && parsedDate[1].isSame(result[1])\n}\n\nconst handleChange = (start: Dayjs, end: Dayjs) => {\n  // todo getRangeAvailableTime(_date).millisecond(0)\n  emit('pick', [start, end], true)\n}\nconst btnConfirmDisabled = computed(() => {\n  return startTime.value > endTime.value\n})\n\nconst selectionRange = ref([0, 2])\nconst setMinSelectionRange = (start: number, end: number) => {\n  emit('select-range', start, end, 'min')\n  selectionRange.value = [start, end]\n}\n\nconst offset = computed(() => (showSeconds.value ? 11 : 8))\nconst setMaxSelectionRange = (start: number, end: number) => {\n  emit('select-range', start, end, 'max')\n  const _offset = unref(offset)\n  selectionRange.value = [start + _offset, end + _offset]\n}\n\nconst changeSelectionRange = (step: number) => {\n  const list = showSeconds.value ? [0, 3, 6, 11, 14, 17] : [0, 3, 8, 11]\n  const mapping = ['hours', 'minutes'].concat(\n    showSeconds.value ? ['seconds'] : []\n  )\n  const index = list.indexOf(selectionRange.value[0])\n  const next = (index + step + list.length) % list.length\n  const half = list.length / 2\n  if (next < half) {\n    timePickerOptions['start_emitSelectRange'](mapping[next])\n  } else {\n    timePickerOptions['end_emitSelectRange'](mapping[next - half])\n  }\n}\n\nconst handleKeydown = (event: KeyboardEvent) => {\n  const code = event.code\n\n  const { left, right, up, down } = EVENT_CODE\n\n  if ([left, right].includes(code)) {\n    const step = code === left ? -1 : 1\n    changeSelectionRange(step)\n    event.preventDefault()\n    return\n  }\n\n  if ([up, down].includes(code)) {\n    const step = code === up ? -1 : 1\n    const role = selectionRange.value[0] < offset.value ? 'start' : 'end'\n    timePickerOptions[`${role}_scrollDown`](step)\n    event.preventDefault()\n    return\n  }\n}\n\nconst disabledHours_ = (role: string, compare?: Dayjs) => {\n  const defaultDisable = disabledHours ? disabledHours(role) : []\n  const isStart = role === 'start'\n  const compareDate = compare || (isStart ? endTime.value : startTime.value)\n  const compareHour = compareDate.hour()\n  const nextDisable = isStart\n    ? makeSelectRange(compareHour + 1, 23)\n    : makeSelectRange(0, compareHour - 1)\n  return union(defaultDisable, nextDisable)\n}\nconst disabledMinutes_ = (hour: number, role: string, compare?: Dayjs) => {\n  const defaultDisable = disabledMinutes ? disabledMinutes(hour, role) : []\n  const isStart = role === 'start'\n  const compareDate = compare || (isStart ? endTime.value : startTime.value)\n  const compareHour = compareDate.hour()\n  if (hour !== compareHour) {\n    return defaultDisable\n  }\n  const compareMinute = compareDate.minute()\n  const nextDisable = isStart\n    ? makeSelectRange(compareMinute + 1, 59)\n    : makeSelectRange(0, compareMinute - 1)\n  return union(defaultDisable, nextDisable)\n}\nconst disabledSeconds_ = (\n  hour: number,\n  minute: number,\n  role: string,\n  compare?: Dayjs\n) => {\n  const defaultDisable = disabledSeconds\n    ? disabledSeconds(hour, minute, role)\n    : []\n  const isStart = role === 'start'\n  const compareDate = compare || (isStart ? endTime.value : startTime.value)\n  const compareHour = compareDate.hour()\n  const compareMinute = compareDate.minute()\n  if (hour !== compareHour || minute !== compareMinute) {\n    return defaultDisable\n  }\n  const compareSecond = compareDate.second()\n  const nextDisable = isStart\n    ? makeSelectRange(compareSecond + 1, 59)\n    : makeSelectRange(0, compareSecond - 1)\n  return union(defaultDisable, nextDisable)\n}\n\nconst getRangeAvailableTime = ([start, end]: Array<Dayjs>) => {\n  return [\n    getAvailableTime(start, 'start', true, end),\n    getAvailableTime(end, 'end', false, start),\n  ] as const\n}\n\nconst { getAvailableHours, getAvailableMinutes, getAvailableSeconds } =\n  buildAvailableTimeSlotGetter(\n    disabledHours_,\n    disabledMinutes_,\n    disabledSeconds_\n  )\n\nconst {\n  timePickerOptions,\n\n  getAvailableTime,\n  onSetOption,\n} = useTimePanel({\n  getAvailableHours,\n  getAvailableMinutes,\n  getAvailableSeconds,\n})\n\nconst parseUserInput = (days: Dayjs[] | Dayjs) => {\n  if (!days) return null\n  if (isArray(days)) {\n    return days.map((d) => dayjs(d, props.format).locale(lang.value))\n  }\n  return dayjs(days, props.format).locale(lang.value)\n}\n\nconst formatToString = (days: Dayjs[] | Dayjs) => {\n  if (!days) return null\n  if (isArray(days)) {\n    return days.map((d) => d.format(props.format))\n  }\n  return days.format(props.format)\n}\n\nconst getDefaultValue = () => {\n  if (isArray(defaultValue)) {\n    return defaultValue.map((d: Date) => dayjs(d).locale(lang.value))\n  }\n  const defaultDay = dayjs(defaultValue).locale(lang.value)\n  return [defaultDay, defaultDay.add(60, 'm')]\n}\n\nemit('set-picker-option', ['formatToString', formatToString])\nemit('set-picker-option', ['parseUserInput', parseUserInput])\nemit('set-picker-option', ['isValidValue', isValidValue])\nemit('set-picker-option', ['handleKeydownInput', handleKeydown])\nemit('set-picker-option', ['getDefaultValue', getDefaultValue])\nemit('set-picker-option', ['getRangeAvailableTime', getRangeAvailableTime])\n</script>\n"]},"metadata":{},"sourceType":"module"}