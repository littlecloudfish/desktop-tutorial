{"ast":null,"code":"'use strict'; // pluralize\n\nconst p = function (word, num) {\n  return num === 1 ? word : `${word}s`;\n};\n\nconst isNullOrUndefined = function (value) {\n  return value === null || value === undefined;\n};\n\nfunction minLowercase(length = 1, message) {\n  const msg = message || '${path} must contain at least ${length} lowercase ' + p('letter', length);\n  return this.test({\n    name: 'minLowercase',\n    exclusive: true,\n    message: msg,\n    params: {\n      length\n    },\n\n    test(value) {\n      return isNullOrUndefined(value) || (value.match(/[a-z]/g) || []).length >= length;\n    }\n\n  });\n} // minLowercase()\n\n\nfunction minUppercase(length = 1, message) {\n  const msg = message || '${path} must contain at least ${length} uppercase ' + p('letter', length);\n  return this.test({\n    name: 'minUppercase',\n    exclusive: true,\n    message: msg,\n    params: {\n      length\n    },\n\n    test(value) {\n      return isNullOrUndefined(value) || (value.match(/[A-Z]/g) || []).length >= length;\n    }\n\n  });\n} // minUppercase()\n\n\nfunction minNumbers(length = 1, message) {\n  const msg = message || '${path} must contain at least ${length} ' + p('number', length);\n  return this.test({\n    name: 'minNumber',\n    exclusive: true,\n    message: msg,\n    params: {\n      length\n    },\n\n    test(value) {\n      return isNullOrUndefined(value) || (value.match(/[0-9]/g) || []).length >= length;\n    }\n\n  });\n} // minNumber()\n\n\nfunction minSymbols(length = 1, message) {\n  const msg = message || '${path} must contain at least ${length} ' + p('symbol', length);\n  return this.test({\n    name: 'minSymbol',\n    exclusive: true,\n    message: msg,\n    params: {\n      length\n    },\n\n    test(value) {\n      return isNullOrUndefined(value) || (value.match(/[^a-zA-Z0-9\\s]/g) || []).length >= length;\n    }\n\n  });\n} // minSymbol()\n\n\nfunction minRepeating(length = 2, message) {\n  const msg = message || '${path} must not contain sequences of more than ${length} repeated ' + p('character', length);\n  return this.test({\n    name: 'minRepeating',\n    exclusive: true,\n    message: msg,\n    params: {\n      length: length\n    },\n\n    test(value) {\n      return isNullOrUndefined(value) || !new RegExp(`(.)\\\\1{${length},}`).test(value);\n    }\n\n  });\n} // minRepeating()\n\n\nfunction minWords(length = 2, message) {\n  const msg = message || '${path} must contain at least ${length} ' + p('word', length);\n  const rx = new RegExp('[a-zA-Z0-9]');\n  return this.test({\n    name: 'minWords',\n    exclusive: true,\n    message: msg,\n    params: {\n      length: length\n    },\n\n    test(value) {\n      return isNullOrUndefined(value) || value.split(' ').filter(v => !!v && rx.test(v)).length >= length;\n    }\n\n  });\n} // minWords()\n\n\nfunction password() {\n  return this.min(8).max(250).minLowercase(1).minUppercase(1).minNumbers(1).minSymbols(1);\n} // password()\n\n\nfunction setup(yup) {\n  yup.addMethod(yup.string, 'minLowercase', minLowercase);\n  yup.addMethod(yup.string, 'minUppercase', minUppercase);\n  yup.addMethod(yup.string, 'minNumber', minNumbers);\n  yup.addMethod(yup.string, 'minNumbers', minNumbers);\n  yup.addMethod(yup.string, 'minSymbol', minSymbols);\n  yup.addMethod(yup.string, 'minSymbols', minSymbols);\n  yup.addMethod(yup.string, 'minRepeating', minRepeating);\n  yup.addMethod(yup.string, 'minWords', minWords);\n  yup.addMethod(yup.string, 'password', password);\n}\n\nmodule.exports = setup;","map":{"version":3,"names":["p","word","num","isNullOrUndefined","value","undefined","minLowercase","length","message","msg","test","name","exclusive","params","match","minUppercase","minNumbers","minSymbols","minRepeating","RegExp","minWords","rx","split","filter","v","password","min","max","setup","yup","addMethod","string","module","exports"],"sources":["/home/little/Documents/music_web/startproj/zhengdao-ui/node_modules/yup-password/index.js"],"sourcesContent":["'use strict'\n\n// pluralize\nconst p = function (word, num) {\n    return num === 1 ? word : `${word}s`\n}\n\nconst isNullOrUndefined = function (value) {\n    return value === null || value === undefined\n}\n\nfunction minLowercase(length = 1, message) {\n    const msg = message || '${path} must contain at least ${length} lowercase ' + p('letter', length)\n    return this.test({\n        name: 'minLowercase',\n        exclusive: true,\n        message: msg,\n        params: { length },\n        test(value) {\n            return isNullOrUndefined(value) || (value.match(/[a-z]/g) || []).length >= length\n        }\n    })\n} // minLowercase()\n\nfunction minUppercase(length = 1, message) {\n    const msg = message || '${path} must contain at least ${length} uppercase ' + p('letter', length)\n    return this.test({\n        name: 'minUppercase',\n        exclusive: true,\n        message: msg,\n        params: { length },\n        test(value) {\n            return isNullOrUndefined(value) || (value.match(/[A-Z]/g) || []).length >= length\n        }\n    })\n} // minUppercase()\n\nfunction minNumbers(length = 1, message) {\n    const msg = message || '${path} must contain at least ${length} ' + p('number', length)\n    return this.test({\n        name: 'minNumber',\n        exclusive: true,\n        message: msg,\n        params: { length },\n        test(value) {\n            return isNullOrUndefined(value) || (value.match(/[0-9]/g) || []).length >= length\n        }\n    })\n} // minNumber()\n\nfunction minSymbols(length = 1, message) {\n    const msg = message || '${path} must contain at least ${length} ' + p('symbol', length)\n    return this.test({\n        name: 'minSymbol',\n        exclusive: true,\n        message: msg,\n        params: { length },\n        test(value) {\n            return isNullOrUndefined(value) || (value.match(/[^a-zA-Z0-9\\s]/g) || []).length >= length\n        }\n    })\n} // minSymbol()\n\nfunction minRepeating(length = 2, message) {\n    const msg = message || '${path} must not contain sequences of more than ${length} repeated ' + p('character', length)\n    return this.test({\n        name: 'minRepeating',\n        exclusive: true,\n        message: msg,\n        params: { length: length },\n        test(value) {\n            return isNullOrUndefined(value) || ! new RegExp(`(.)\\\\1{${length},}`).test(value)\n        }\n    })\n} // minRepeating()\n\nfunction minWords(length = 2, message) {\n    const msg = message || '${path} must contain at least ${length} ' + p('word', length)\n    const rx = new RegExp('[a-zA-Z0-9]')\n    return this.test({\n        name: 'minWords',\n        exclusive: true,\n        message: msg,\n        params: { length: length },\n        test(value) {\n            return isNullOrUndefined(value) || value.split(' ').filter(v => !! v && rx.test(v)).length >= length\n        }\n    })\n} // minWords()\n\nfunction password() {\n    return this\n        .min(8)\n        .max(250)\n        .minLowercase(1)\n        .minUppercase(1)\n        .minNumbers(1)\n        .minSymbols(1)\n} // password()\n\nfunction setup(yup) {\n    yup.addMethod(yup.string, 'minLowercase', minLowercase)\n    yup.addMethod(yup.string, 'minUppercase', minUppercase)\n    yup.addMethod(yup.string, 'minNumber', minNumbers)\n    yup.addMethod(yup.string, 'minNumbers', minNumbers)\n    yup.addMethod(yup.string, 'minSymbol', minSymbols)\n    yup.addMethod(yup.string, 'minSymbols', minSymbols)\n    yup.addMethod(yup.string, 'minRepeating', minRepeating)\n    yup.addMethod(yup.string, 'minWords', minWords)\n    yup.addMethod(yup.string, 'password', password)\n}\n\nmodule.exports = setup\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}