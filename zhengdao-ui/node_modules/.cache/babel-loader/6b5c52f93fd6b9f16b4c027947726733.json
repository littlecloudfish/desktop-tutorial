{"ast":null,"code":"import \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nexport default {\n  data: function data() {\n    return {\n      loading: false,\n      post: null,\n      error: null\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    // watch the params of the route to fetch the data again\n    this.$watch(function () {\n      return _this.$route.params;\n    }, function () {\n      _this.fetchData();\n    }, // fetch the data when the view is created and the data is\n    // already being observed\n    {\n      immediate: true\n    });\n  },\n  methods: {\n    fetchData: function fetchData() {\n      var _this2 = this;\n\n      this.error = this.post = null;\n      this.loading = true; // replace `getPost` with your data fetching util / API wrapper\n\n      getPost(this.$route.params.id, function (err, post) {\n        _this2.loading = false;\n\n        if (err) {\n          _this2.error = err.toString();\n        } else {\n          _this2.post = post;\n        }\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;AAaA,eAAe;EACbA,IADa,kBACN;IACL,OAAO;MACLC,OAAO,EAAE,KADJ;MAELC,IAAI,EAAE,IAFD;MAGLC,KAAK,EAAE;IAHF,CAAP;EAKD,CAPY;EAQbC,OARa,qBAQH;IAAA;;IACR;IACA,KAAKC,MAAL,CACE;MAAA,OAAM,KAAI,CAACC,MAAL,CAAYC,MAAlB;IAAA,CADF,EAEE,YAAM;MACJ,KAAI,CAACC,SAAL;IACD,CAJH,EAKE;IACA;IACA;MAAEC,SAAS,EAAE;IAAb,CAPF;EASD,CAnBY;EAoBbC,OAAO,EAAE;IACPF,SADO,uBACK;MAAA;;MACV,KAAKL,KAAL,GAAa,KAAKD,IAAL,GAAY,IAAzB;MACA,KAAKD,OAAL,GAAe,IAAf,CAFU,CAGV;;MACAU,OAAO,CAAC,KAAKL,MAAL,CAAYC,MAAZ,CAAmBK,EAApB,EAAwB,UAACC,GAAD,EAAMX,IAAN,EAAe;QAC5C,MAAI,CAACD,OAAL,GAAe,KAAf;;QACA,IAAIY,GAAJ,EAAS;UACP,MAAI,CAACV,KAAL,GAAaU,GAAG,CAACC,QAAJ,EAAb;QACF,CAFA,MAEO;UACL,MAAI,CAACZ,IAAL,GAAYA,IAAZ;QACF;MACD,CAPM,CAAP;IAQD;EAbM;AApBI,CAAf","names":["data","loading","post","error","created","$watch","$route","params","fetchData","immediate","methods","getPost","id","err","toString"],"sourceRoot":"","sources":["/home/little/Documents/music_web/startproj/zhengdao-ui/src/views/AboutView.vue"],"sourcesContent":["<template>\n  <div class=\"post\">\n    <div v-if=\"loading\" class=\"loading\">Loading...</div>\n\n    <div v-if=\"error\" class=\"error\">{{ error }}</div>\n\n    <div v-if=\"post\" class=\"content\">\n      <h2>{{ post.title }}</h2>\n      <p>{{ post.body }}</p>\n    </div>\n  </div>\n</template>\n<script>\nexport default {\n  data() {\n    return {\n      loading: false,\n      post: null,\n      error: null,\n    }\n  },\n  created() {\n    // watch the params of the route to fetch the data again\n    this.$watch(\n      () => this.$route.params,\n      () => {\n        this.fetchData()\n      },\n      // fetch the data when the view is created and the data is\n      // already being observed\n      { immediate: true }\n    )\n  },\n  methods: {\n    fetchData() {\n      this.error = this.post = null\n      this.loading = true\n      // replace `getPost` with your data fetching util / API wrapper\n      getPost(this.$route.params.id, (err, post) => {\n        this.loading = false\n        if (err) {\n          this.error = err.toString()\n        } else {\n          this.post = post\n        }\n      })\n    },\n  },\n}\n</script>"]},"metadata":{},"sourceType":"module"}