{"ast":null,"code":"import { watch, unref, nextTick } from 'vue';\n\nvar useDelayedRender = function useDelayedRender(_ref) {\n  var indicator = _ref.indicator,\n      intermediateIndicator = _ref.intermediateIndicator,\n      _ref$shouldSetInterme = _ref.shouldSetIntermediate,\n      shouldSetIntermediate = _ref$shouldSetInterme === void 0 ? function () {\n    return true;\n  } : _ref$shouldSetInterme,\n      beforeShow = _ref.beforeShow,\n      afterShow = _ref.afterShow,\n      afterHide = _ref.afterHide,\n      beforeHide = _ref.beforeHide;\n  watch(function () {\n    return unref(indicator);\n  }, function (val) {\n    if (val) {\n      beforeShow == null ? void 0 : beforeShow();\n      nextTick(function () {\n        if (!unref(indicator)) return;\n\n        if (shouldSetIntermediate(\"show\")) {\n          intermediateIndicator.value = true;\n        }\n      });\n    } else {\n      beforeHide == null ? void 0 : beforeHide();\n      nextTick(function () {\n        if (unref(indicator)) return;\n\n        if (shouldSetIntermediate(\"hide\")) {\n          intermediateIndicator.value = false;\n        }\n      });\n    }\n  });\n  watch(function () {\n    return intermediateIndicator.value;\n  }, function (val) {\n    if (val) {\n      afterShow == null ? void 0 : afterShow();\n    } else {\n      afterHide == null ? void 0 : afterHide();\n    }\n  });\n};\n\nexport { useDelayedRender };","map":{"version":3,"mappings":";;AACY,IAACA,gBAAgB,GAAG,SAAnBA,gBAAmB,OAQ1B;EAAA,IAPJC,SAOI,QAPJA,SAOI;EAAA,IANJC,qBAMI,QANJA,qBAMI;EAAA,iCALJC,qBAKI;EAAA,IALJA,qBAKI,sCALoB;IAAA,OAAM,IAAN;EAAA,CAKpB;EAAA,IAJJC,UAII,QAJJA,UAII;EAAA,IAHJC,SAGI,QAHJA,SAGI;EAAA,IAFJC,SAEI,QAFJA,SAEI;EAAA,IADJC,UACI,QADJA,UACI;EACJC,KAAK,CAAC;IAAA,OAAMC,KAAK,CAACR,SAAD,CAAX;EAAA,CAAD,EAAyB,UAACS,GAAD,EAAS;IACrC,IAAIA,GAAJ,EAAS;MACPN,UAAU,IAAI,IAAd,GAAqB,KAAK,CAA1B,GAA8BA,UAAU,EAAxC;MACAO,QAAQ,CAAC,YAAM;QACb,IAAI,CAACF,KAAK,CAACR,SAAD,CAAV,EACE;;QACF,IAAIE,qBAAqB,CAAC,MAAD,CAAzB,EAAmC;UACjCD,qBAAqB,CAACU,KAAtB,GAA8B,IAA9B;QACD;MACF,CANO,CAAR;IAOD,CATD,MASO;MACLL,UAAU,IAAI,IAAd,GAAqB,KAAK,CAA1B,GAA8BA,UAAU,EAAxC;MACAI,QAAQ,CAAC,YAAM;QACb,IAAIF,KAAK,CAACR,SAAD,CAAT,EACE;;QACF,IAAIE,qBAAqB,CAAC,MAAD,CAAzB,EAAmC;UACjCD,qBAAqB,CAACU,KAAtB,GAA8B,KAA9B;QACD;MACF,CANO,CAAR;IAOD;EACF,CApBI,CAAL;EAqBAJ,KAAK,CAAC;IAAA,OAAMN,qBAAqB,CAACU,KAA5B;EAAA,CAAD,EAAoC,UAACF,GAAD,EAAS;IAChD,IAAIA,GAAJ,EAAS;MACPL,SAAS,IAAI,IAAb,GAAoB,KAAK,CAAzB,GAA6BA,SAAS,EAAtC;IACD,CAFD,MAEO;MACLC,SAAS,IAAI,IAAb,GAAoB,KAAK,CAAzB,GAA6BA,SAAS,EAAtC;IACD;EACF,CANI,CAAL;AAOF,CArCY","names":["useDelayedRender","indicator","intermediateIndicator","shouldSetIntermediate","beforeShow","afterShow","afterHide","beforeHide","watch","unref","val","nextTick","value"],"sources":["../../../../../packages/hooks/use-intermediate-render/index.ts"],"sourcesContent":["import { nextTick, unref, watch } from 'vue'\n\nimport type { Ref } from 'vue'\n\nexport type UseDelayedRenderProps = {\n  indicator: Ref<boolean>\n  intermediateIndicator: Ref<boolean>\n  shouldSetIntermediate?: (step: 'show' | 'hide') => boolean\n  beforeShow?: () => void\n  beforeHide?: () => void\n  afterShow?: () => void\n  afterHide?: () => void\n}\n\nexport const useDelayedRender = ({\n  indicator,\n  intermediateIndicator,\n  shouldSetIntermediate = () => true,\n  beforeShow,\n  afterShow,\n  afterHide,\n  beforeHide,\n}: UseDelayedRenderProps) => {\n  watch(\n    () => unref(indicator),\n    (val) => {\n      if (val) {\n        beforeShow?.()\n        nextTick(() => {\n          if (!unref(indicator)) return\n          if (shouldSetIntermediate('show')) {\n            intermediateIndicator.value = true\n          }\n        })\n      } else {\n        beforeHide?.()\n        nextTick(() => {\n          if (unref(indicator)) return\n\n          if (shouldSetIntermediate('hide')) {\n            intermediateIndicator.value = false\n          }\n        })\n      }\n    }\n  )\n\n  // because we don't always set the value ourselves, so that we\n  // simply watch the value's state, then invoke the corresponding hook.\n  watch(\n    () => intermediateIndicator.value,\n    (val) => {\n      if (val) {\n        afterShow?.()\n      } else {\n        afterHide?.()\n      }\n    }\n  )\n}\n"]},"metadata":{},"sourceType":"module"}