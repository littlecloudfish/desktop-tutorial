{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.reverse.js\";\nimport { defineComponent, inject, computed, unref, openBlock, createElementBlock, normalizeClass, normalizeStyle, renderSlot } from 'vue';\nimport '../../../utils/index.mjs';\nimport '../../../constants/index.mjs';\nimport '../../focus-trap/index.mjs';\nimport '../../roving-focus-group/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { DROPDOWN_INJECTION_KEY } from './tokens.mjs';\nimport { dropdownMenuProps, DROPDOWN_COLLECTION_INJECTION_KEY as COLLECTION_INJECTION_KEY, FIRST_LAST_KEYS, LAST_KEYS } from './dropdown.mjs';\nimport { useDropdown } from './useDropdown.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { FOCUS_TRAP_INJECTION_KEY } from '../../focus-trap/src/tokens.mjs';\nimport { ROVING_FOCUS_GROUP_INJECTION_KEY } from '../../roving-focus-group/src/tokens.mjs';\nimport { ROVING_FOCUS_COLLECTION_INJECTION_KEY as COLLECTION_INJECTION_KEY$1 } from '../../roving-focus-group/src/roving-focus-group.mjs';\nimport { composeRefs } from '../../../utils/vue/refs.mjs';\nimport { composeEventHandlers } from '../../../utils/dom/event.mjs';\nimport { EVENT_CODE } from '../../../constants/aria.mjs';\nimport { focusFirst } from '../../roving-focus-group/src/utils.mjs';\n\nvar _sfc_main = defineComponent({\n  name: \"ElDropdownMenu\",\n  props: dropdownMenuProps,\n  setup: function setup(props) {\n    var ns = useNamespace(\"dropdown\");\n\n    var _useDropdown = useDropdown(),\n        _elDropdownSize = _useDropdown._elDropdownSize;\n\n    var size = _elDropdownSize.value;\n\n    var _inject = inject(FOCUS_TRAP_INJECTION_KEY, void 0),\n        focusTrapRef = _inject.focusTrapRef,\n        onKeydown = _inject.onKeydown;\n\n    var _inject2 = inject(DROPDOWN_INJECTION_KEY, void 0),\n        contentRef = _inject2.contentRef,\n        role = _inject2.role,\n        triggerId = _inject2.triggerId;\n\n    var _inject3 = inject(COLLECTION_INJECTION_KEY, void 0),\n        dropdownCollectionRef = _inject3.collectionRef,\n        getItems = _inject3.getItems;\n\n    var _inject4 = inject(ROVING_FOCUS_GROUP_INJECTION_KEY, void 0),\n        rovingFocusGroupRef = _inject4.rovingFocusGroupRef,\n        rovingFocusGroupRootStyle = _inject4.rovingFocusGroupRootStyle,\n        tabIndex = _inject4.tabIndex,\n        onBlur = _inject4.onBlur,\n        onFocus = _inject4.onFocus,\n        onMousedown = _inject4.onMousedown;\n\n    var _inject5 = inject(COLLECTION_INJECTION_KEY$1, void 0),\n        rovingFocusGroupCollectionRef = _inject5.collectionRef;\n\n    var dropdownKls = computed(function () {\n      return [ns.b(\"menu\"), ns.bm(\"menu\", size == null ? void 0 : size.value)];\n    });\n    var dropdownListWrapperRef = composeRefs(contentRef, dropdownCollectionRef, focusTrapRef, rovingFocusGroupRef, rovingFocusGroupCollectionRef);\n    var composedKeydown = composeEventHandlers(function (e) {\n      var _a;\n\n      (_a = props.onKeydown) == null ? void 0 : _a.call(props, e);\n    }, function (e) {\n      var currentTarget = e.currentTarget,\n          code = e.code,\n          target = e.target;\n      var isKeydownContained = currentTarget.contains(target);\n\n      if (isKeydownContained) {}\n\n      if (EVENT_CODE.tab === code) {\n        e.stopImmediatePropagation();\n      }\n\n      e.preventDefault();\n      if (target !== unref(contentRef)) return;\n      if (!FIRST_LAST_KEYS.includes(code)) return;\n      var items = getItems().filter(function (item) {\n        return !item.disabled;\n      });\n      var targets = items.map(function (item) {\n        return item.ref;\n      });\n\n      if (LAST_KEYS.includes(code)) {\n        targets.reverse();\n      }\n\n      focusFirst(targets);\n    });\n\n    var handleKeydown = function handleKeydown(e) {\n      composedKeydown(e);\n      onKeydown(e);\n    };\n\n    return {\n      size: size,\n      rovingFocusGroupRootStyle: rovingFocusGroupRootStyle,\n      tabIndex: tabIndex,\n      dropdownKls: dropdownKls,\n      role: role,\n      triggerId: triggerId,\n      dropdownListWrapperRef: dropdownListWrapperRef,\n      handleKeydown: handleKeydown,\n      onBlur: onBlur,\n      onFocus: onFocus,\n      onMousedown: onMousedown\n    };\n  }\n});\n\nvar _hoisted_1 = [\"role\", \"aria-labelledby\"];\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"ul\", {\n    ref: _ctx.dropdownListWrapperRef,\n    \"class\": normalizeClass(_ctx.dropdownKls),\n    style: normalizeStyle(_ctx.rovingFocusGroupRootStyle),\n    tabindex: -1,\n    role: _ctx.role,\n    \"aria-labelledby\": _ctx.triggerId,\n    onBlur: _cache[0] || (_cache[0] = function () {\n      return _ctx.onBlur && _ctx.onBlur.apply(_ctx, arguments);\n    }),\n    onFocus: _cache[1] || (_cache[1] = function () {\n      return _ctx.onFocus && _ctx.onFocus.apply(_ctx, arguments);\n    }),\n    onKeydown: _cache[2] || (_cache[2] = function () {\n      return _ctx.handleKeydown && _ctx.handleKeydown.apply(_ctx, arguments);\n    }),\n    onMousedown: _cache[3] || (_cache[3] = function () {\n      return _ctx.onMousedown && _ctx.onMousedown.apply(_ctx, arguments);\n    })\n  }, [renderSlot(_ctx.$slots, \"default\")], 46, _hoisted_1);\n}\n\nvar DropdownMenu = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/dropdown/src/dropdown-menu.vue\"]]);\n\nexport { DropdownMenu as default };","map":{"version":3,"mappings":"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","names":["_sfc_main","defineComponent","name","props","setup","useNamespace","useDropdown","_elDropdownSize","size","inject","FOCUS_TRAP_INJECTION_KEY","focusTrapRef","onKeydown","DROPDOWN_INJECTION_KEY","contentRef","role","triggerId","DROPDOWN_COLLECTION_INJECTION_KEY","dropdownCollectionRef","collectionRef","getItems","ROVING_FOCUS_GROUP_INJECTION_KEY","rovingFocusGroupRef","rovingFocusGroupRootStyle","tabIndex","onBlur","onFocus","onMousedown","ROVING_FOCUS_COLLECTION_INJECTION_KEY","rovingFocusGroupCollectionRef","computed","ns","bm","dropdownListWrapperRef","composeRefs","composeEventHandlers","e","_a","target","isKeydownContained","EVENT_CODE","code","items","item","targets","focusFirst","handleKeydown","composedKeydown","dropdownKls","_cache","_openBlock","ref","_normalizeClass","_ctx","style","tabindex"],"sources":["../../../../../../packages/components/dropdown/src/dropdown-menu.vue"],"sourcesContent":["<template>\n  <ul\n    :ref=\"dropdownListWrapperRef\"\n    :class=\"dropdownKls\"\n    :style=\"rovingFocusGroupRootStyle\"\n    :tabindex=\"-1\"\n    :role=\"role\"\n    :aria-labelledby=\"triggerId\"\n    @blur=\"onBlur\"\n    @focus=\"onFocus\"\n    @keydown=\"handleKeydown\"\n    @mousedown=\"onMousedown\"\n  >\n    <slot />\n  </ul>\n</template>\n<script lang=\"ts\">\n// @ts-nocheck\nimport { computed, defineComponent, inject, unref } from 'vue'\nimport { composeEventHandlers, composeRefs } from '@element-plus/utils'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport { FOCUS_TRAP_INJECTION_KEY } from '@element-plus/components/focus-trap'\nimport {\n  ROVING_FOCUS_COLLECTION_INJECTION_KEY,\n  ROVING_FOCUS_GROUP_INJECTION_KEY,\n  focusFirst,\n} from '@element-plus/components/roving-focus-group'\nimport { useNamespace } from '@element-plus/hooks'\nimport { DROPDOWN_INJECTION_KEY } from './tokens'\nimport {\n  DROPDOWN_COLLECTION_INJECTION_KEY,\n  FIRST_LAST_KEYS,\n  LAST_KEYS,\n  dropdownMenuProps,\n} from './dropdown'\nimport { useDropdown } from './useDropdown'\n\nexport default defineComponent({\n  name: 'ElDropdownMenu',\n  props: dropdownMenuProps,\n  setup(props) {\n    const ns = useNamespace('dropdown')\n    const { _elDropdownSize } = useDropdown()\n    const size = _elDropdownSize.value\n\n    const { focusTrapRef, onKeydown } = inject(\n      FOCUS_TRAP_INJECTION_KEY,\n      undefined\n    )!\n\n    const { contentRef, role, triggerId } = inject(\n      DROPDOWN_INJECTION_KEY,\n      undefined\n    )!\n\n    const { collectionRef: dropdownCollectionRef, getItems } = inject(\n      DROPDOWN_COLLECTION_INJECTION_KEY,\n      undefined\n    )!\n\n    const {\n      rovingFocusGroupRef,\n      rovingFocusGroupRootStyle,\n      tabIndex,\n      onBlur,\n      onFocus,\n      onMousedown,\n    } = inject(ROVING_FOCUS_GROUP_INJECTION_KEY, undefined)!\n\n    const { collectionRef: rovingFocusGroupCollectionRef } = inject(\n      ROVING_FOCUS_COLLECTION_INJECTION_KEY,\n      undefined\n    )!\n\n    const dropdownKls = computed(() => {\n      return [ns.b('menu'), ns.bm('menu', size?.value)]\n    })\n\n    const dropdownListWrapperRef = composeRefs(\n      contentRef,\n      dropdownCollectionRef,\n      focusTrapRef,\n      rovingFocusGroupRef,\n      rovingFocusGroupCollectionRef\n    )\n\n    const composedKeydown = composeEventHandlers(\n      (e: KeyboardEvent) => {\n        props.onKeydown?.(e)\n      },\n      (e) => {\n        const { currentTarget, code, target } = e\n        const isKeydownContained = (currentTarget as Node).contains(\n          target as Node\n        )\n\n        if (isKeydownContained) {\n          // TODO: implement typeahead search\n        }\n\n        if (EVENT_CODE.tab === code) {\n          e.stopImmediatePropagation()\n        }\n\n        e.preventDefault()\n\n        if (target !== unref(contentRef)) return\n        if (!FIRST_LAST_KEYS.includes(code)) return\n        const items = getItems<{ disabled: boolean }>().filter(\n          (item) => !item.disabled\n        )\n        const targets = items.map((item) => item.ref!)\n        if (LAST_KEYS.includes(code)) {\n          targets.reverse()\n        }\n        focusFirst(targets)\n      }\n    )\n\n    const handleKeydown = (e: KeyboardEvent) => {\n      composedKeydown(e)\n      onKeydown(e)\n    }\n\n    return {\n      size,\n      rovingFocusGroupRootStyle,\n      tabIndex,\n      dropdownKls,\n      role,\n      triggerId,\n      dropdownListWrapperRef,\n      handleKeydown,\n      onBlur,\n      onFocus,\n      onMousedown,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}