{"ast":null,"code":"import { defineComponent, computed, h } from 'vue';\nimport '../../../utils/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { isString } from '@vue/shared';\nvar sliderMarkerProps = buildProps({\n  mark: {\n    type: definePropType([String, Object]),\n    \"default\": void 0\n  }\n});\nvar SliderMarker = defineComponent({\n  name: \"ElSliderMarker\",\n  props: sliderMarkerProps,\n  setup: function setup(props) {\n    var ns = useNamespace(\"slider\");\n    var label = computed(function () {\n      return isString(props.mark) ? props.mark : props.mark.label;\n    });\n    var style = computed(function () {\n      return isString(props.mark) ? void 0 : props.mark.style;\n    });\n    return function () {\n      return h(\"div\", {\n        \"class\": ns.e(\"marks-text\"),\n        style: style.value\n      }, label.value);\n    };\n  }\n});\nexport { SliderMarker as default, sliderMarkerProps };","map":{"version":3,"mappings":";;;;;;AAGY,IAACA,iBAAiB,GAAGC,UAAU,CAAC;EAC1CC,IAAI,EAAE;IACJC,IAAI,EAAEC,cAAc,CAAC,CAACC,MAAD,EAASC,MAAT,CAAD,CADhB;IAEJ,WAAS,KAAK;EAFV;AADoC,CAAD,CAA/B;AAMZ,mBAAeC,eAAe,CAAC;EAC7BC,IAAI,EAAE,gBADuB;EAE7BC,KAAK,EAAET,iBAFsB;EAG7BU,KAH6B,iBAGvBD,KAHuB,EAGhB;IACX,IAAME,EAAE,GAAGC,YAAY,CAAC,QAAD,CAAvB;IACA,IAAMC,KAAK,GAAGC,QAAQ,CAAC,YAAM;MAC3B,OAAOC,QAAQ,CAACN,KAAK,CAACP,IAAP,CAAR,GAAuBO,KAAK,CAACP,IAA7B,GAAoCO,KAAK,CAACP,IAAN,CAAWW,KAAtD;IACD,CAFqB,CAAtB;IAGA,IAAMG,KAAK,GAAGF,QAAQ,CAAC;MAAA,OAAMC,QAAQ,CAACN,KAAK,CAACP,IAAP,CAAR,GAAuB,KAAK,CAA5B,GAAgCO,KAAK,CAACP,IAAN,CAAWc,KAAjD;IAAA,CAAD,CAAtB;IACA,OAAO;MAAA,OAAMC,CAAC,CAAC,KAAD,EAAQ;QACpB,SAAON,EAAE,CAACO,CAAH,CAAK,YAAL,CADa;QAEpBF,KAAK,EAAEA,KAAK,CAACG;MAFO,CAAR,EAGXN,KAAK,CAACM,KAHK,CAAP;IAAA,CAAP;EAID;AAb4B,CAAD,CAA9B","names":["sliderMarkerProps","buildProps","mark","type","definePropType","String","Object","defineComponent","name","props","setup","ns","useNamespace","label","computed","isString","style","h","e","value"],"sources":["../../../../../../packages/components/slider/src/marker.ts"],"sourcesContent":["import { computed, defineComponent, h } from 'vue'\nimport { buildProps, definePropType, isString } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport type { CSSProperties, ExtractPropTypes } from 'vue'\n\nexport const sliderMarkerProps = buildProps({\n  mark: {\n    type: definePropType<\n      | string\n      | {\n          style: CSSProperties\n          label: any\n        }\n    >([String, Object]),\n    default: undefined,\n  },\n} as const)\nexport type SliderMarkerProps = ExtractPropTypes<typeof sliderMarkerProps>\n\nexport default defineComponent({\n  name: 'ElSliderMarker',\n  props: sliderMarkerProps,\n  setup(props) {\n    const ns = useNamespace('slider')\n    const label = computed(() => {\n      return isString(props.mark) ? props.mark : props.mark!.label\n    })\n    const style = computed(() =>\n      isString(props.mark) ? undefined : props.mark!.style\n    )\n\n    return () =>\n      h(\n        'div',\n        {\n          class: ns.e('marks-text'),\n          style: style.value,\n        },\n        label.value\n      )\n  },\n})\n"]},"metadata":{},"sourceType":"module"}