{"ast":null,"code":"import _defineProperty from \"/home/little/Documents/music_web/backandfrontsep/zhengdao-ui/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport { isVNode, defineComponent, provide, unref, createVNode, mergeProps } from 'vue';\nimport '../../../hooks/index.mjs';\nimport { useTable } from './use-table.mjs';\nimport { TableV2InjectionKey } from './tokens.mjs';\nimport { tableV2Props } from './table.mjs';\nimport MainTable from './renderers/main-table.mjs';\nimport LeftTable from './renderers/left-table.mjs';\nimport LeftTable$1 from './renderers/right-table.mjs';\nimport RowRenderer from './renderers/row.mjs';\nimport CellRenderer from './renderers/cell.mjs';\nimport HeaderRenderer from './renderers/header.mjs';\nimport HeaderCellRenderer from './renderers/header-cell.mjs';\nimport Footer from './renderers/footer.mjs';\nimport Footer$1 from './renderers/empty.mjs';\nimport Overlay from './renderers/overlay.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\n\nfunction _isSlot(s) {\n  return typeof s === \"function\" || Object.prototype.toString.call(s) === \"[object Object]\" && !isVNode(s);\n}\n\nvar COMPONENT_NAME = \"ElTableV2\";\nvar TableV2 = defineComponent({\n  name: COMPONENT_NAME,\n  props: tableV2Props,\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots,\n        expose = _ref.expose;\n    var ns = useNamespace(\"table-v2\");\n\n    var _useTable = useTable(props),\n        columnsStyles = _useTable.columnsStyles,\n        fixedColumnsOnLeft = _useTable.fixedColumnsOnLeft,\n        fixedColumnsOnRight = _useTable.fixedColumnsOnRight,\n        mainColumns = _useTable.mainColumns,\n        mainTableHeight = _useTable.mainTableHeight,\n        fixedTableHeight = _useTable.fixedTableHeight,\n        leftTableWidth = _useTable.leftTableWidth,\n        rightTableWidth = _useTable.rightTableWidth,\n        data = _useTable.data,\n        depthMap = _useTable.depthMap,\n        expandedRowKeys = _useTable.expandedRowKeys,\n        hasFixedColumns = _useTable.hasFixedColumns,\n        hoveringRowKey = _useTable.hoveringRowKey,\n        mainTableRef = _useTable.mainTableRef,\n        leftTableRef = _useTable.leftTableRef,\n        rightTableRef = _useTable.rightTableRef,\n        isDynamic = _useTable.isDynamic,\n        isResetting = _useTable.isResetting,\n        isScrolling = _useTable.isScrolling,\n        bodyWidth = _useTable.bodyWidth,\n        emptyStyle = _useTable.emptyStyle,\n        rootStyle = _useTable.rootStyle,\n        headerWidth = _useTable.headerWidth,\n        footerHeight = _useTable.footerHeight,\n        showEmpty = _useTable.showEmpty,\n        scrollTo = _useTable.scrollTo,\n        scrollToLeft = _useTable.scrollToLeft,\n        scrollToTop = _useTable.scrollToTop,\n        scrollToRow = _useTable.scrollToRow,\n        getRowHeight = _useTable.getRowHeight,\n        onColumnSorted = _useTable.onColumnSorted,\n        onRowHeightChange = _useTable.onRowHeightChange,\n        onRowHovered = _useTable.onRowHovered,\n        onRowExpanded = _useTable.onRowExpanded,\n        onRowsRendered = _useTable.onRowsRendered,\n        onScroll = _useTable.onScroll,\n        onVerticalScroll = _useTable.onVerticalScroll;\n\n    expose({\n      scrollTo: scrollTo,\n      scrollToLeft: scrollToLeft,\n      scrollToTop: scrollToTop,\n      scrollToRow: scrollToRow\n    });\n    provide(TableV2InjectionKey, {\n      ns: ns,\n      isResetting: isResetting,\n      hoveringRowKey: hoveringRowKey,\n      isScrolling: isScrolling\n    });\n    return function () {\n      var cache = props.cache,\n          cellProps = props.cellProps,\n          estimatedRowHeight = props.estimatedRowHeight,\n          expandColumnKey = props.expandColumnKey,\n          fixedData = props.fixedData,\n          headerHeight = props.headerHeight,\n          headerClass = props.headerClass,\n          headerProps = props.headerProps,\n          headerCellProps = props.headerCellProps,\n          sortBy = props.sortBy,\n          sortState = props.sortState,\n          rowHeight = props.rowHeight,\n          rowClass = props.rowClass,\n          rowEventHandlers = props.rowEventHandlers,\n          rowKey = props.rowKey,\n          rowProps = props.rowProps,\n          scrollbarAlwaysOn = props.scrollbarAlwaysOn,\n          indentSize = props.indentSize,\n          iconSize = props.iconSize,\n          useIsScrolling = props.useIsScrolling,\n          vScrollbarSize = props.vScrollbarSize,\n          width = props.width;\n\n      var _data = unref(data);\n\n      var mainTableProps = {\n        cache: cache,\n        \"class\": ns.e(\"main\"),\n        columns: unref(mainColumns),\n        data: _data,\n        fixedData: fixedData,\n        estimatedRowHeight: estimatedRowHeight,\n        bodyWidth: unref(bodyWidth),\n        headerHeight: headerHeight,\n        headerWidth: unref(headerWidth),\n        height: unref(mainTableHeight),\n        mainTableRef: mainTableRef,\n        rowKey: rowKey,\n        rowHeight: rowHeight,\n        scrollbarAlwaysOn: scrollbarAlwaysOn,\n        scrollbarStartGap: 2,\n        scrollbarEndGap: vScrollbarSize,\n        useIsScrolling: useIsScrolling,\n        width: width,\n        getRowHeight: getRowHeight,\n        onRowsRendered: onRowsRendered,\n        onScroll: onScroll\n      };\n      var leftColumnsWidth = unref(leftTableWidth);\n\n      var _fixedTableHeight = unref(fixedTableHeight);\n\n      var leftTableProps = {\n        cache: cache,\n        \"class\": ns.e(\"left\"),\n        columns: unref(fixedColumnsOnLeft),\n        data: _data,\n        estimatedRowHeight: estimatedRowHeight,\n        leftTableRef: leftTableRef,\n        rowHeight: rowHeight,\n        bodyWidth: leftColumnsWidth,\n        headerWidth: leftColumnsWidth,\n        headerHeight: headerHeight,\n        height: _fixedTableHeight,\n        rowKey: rowKey,\n        scrollbarAlwaysOn: scrollbarAlwaysOn,\n        scrollbarStartGap: 2,\n        scrollbarEndGap: vScrollbarSize,\n        useIsScrolling: useIsScrolling,\n        width: leftColumnsWidth,\n        getRowHeight: getRowHeight,\n        onScroll: onVerticalScroll\n      };\n      var rightColumnsWidth = unref(rightTableWidth);\n      var rightColumnsWidthWithScrollbar = rightColumnsWidth + vScrollbarSize;\n      var rightTableProps = {\n        cache: cache,\n        \"class\": ns.e(\"right\"),\n        columns: unref(fixedColumnsOnRight),\n        data: _data,\n        estimatedRowHeight: estimatedRowHeight,\n        rightTableRef: rightTableRef,\n        rowHeight: rowHeight,\n        bodyWidth: rightColumnsWidthWithScrollbar,\n        headerWidth: rightColumnsWidthWithScrollbar,\n        headerHeight: headerHeight,\n        height: _fixedTableHeight,\n        rowKey: rowKey,\n        scrollbarAlwaysOn: scrollbarAlwaysOn,\n        scrollbarStartGap: 2,\n        scrollbarEndGap: vScrollbarSize,\n        width: rightColumnsWidthWithScrollbar,\n        style: \"--\".concat(unref(ns.namespace), \"-table-scrollbar-size: \").concat(vScrollbarSize, \"px\"),\n        useIsScrolling: useIsScrolling,\n        getRowHeight: getRowHeight,\n        onScroll: onVerticalScroll\n      };\n\n      var _columnsStyles = unref(columnsStyles);\n\n      var tableRowProps = {\n        ns: ns,\n        depthMap: unref(depthMap),\n        columnsStyles: _columnsStyles,\n        expandColumnKey: expandColumnKey,\n        expandedRowKeys: unref(expandedRowKeys),\n        estimatedRowHeight: estimatedRowHeight,\n        hasFixedColumns: unref(hasFixedColumns),\n        hoveringRowKey: unref(hoveringRowKey),\n        rowProps: rowProps,\n        rowClass: rowClass,\n        rowKey: rowKey,\n        rowEventHandlers: rowEventHandlers,\n        onRowHovered: onRowHovered,\n        onRowExpanded: onRowExpanded,\n        onRowHeightChange: onRowHeightChange\n      };\n      var tableCellProps = {\n        cellProps: cellProps,\n        expandColumnKey: expandColumnKey,\n        indentSize: indentSize,\n        iconSize: iconSize,\n        rowKey: rowKey,\n        expandedRowKeys: unref(expandedRowKeys),\n        ns: ns\n      };\n      var tableHeaderProps = {\n        ns: ns,\n        headerClass: headerClass,\n        headerProps: headerProps,\n        columnsStyles: _columnsStyles\n      };\n      var tableHeaderCellProps = {\n        ns: ns,\n        sortBy: sortBy,\n        sortState: sortState,\n        headerCellProps: headerCellProps,\n        onColumnSorted: onColumnSorted\n      };\n      var tableSlots = {\n        row: function row(props2) {\n          return createVNode(RowRenderer, mergeProps(props2, tableRowProps), {\n            row: slots.row,\n            cell: function cell(props3) {\n              return slots.cell ? createVNode(CellRenderer, mergeProps(props3, tableCellProps, {\n                \"style\": _columnsStyles[props3.column.key]\n              }), {\n                \"default\": function _default() {\n                  return [slots.cell];\n                }\n              }) : createVNode(CellRenderer, mergeProps(props3, tableCellProps, {\n                \"style\": _columnsStyles[props3.column.key]\n              }), null);\n            }\n          });\n        },\n        header: function header(props2) {\n          return createVNode(HeaderRenderer, mergeProps(props2, tableHeaderProps), {\n            header: slots.header,\n            cell: function cell(props3) {\n              return slots[\"header-cell\"] ? createVNode(HeaderCellRenderer, mergeProps(props3, tableHeaderCellProps, {\n                \"style\": _columnsStyles[props3.column.key]\n              }), {\n                \"default\": function _default() {\n                  return [slots[\"header-cell\"]];\n                }\n              }) : createVNode(HeaderCellRenderer, mergeProps(props3, tableHeaderCellProps, {\n                \"style\": _columnsStyles[props3.column.key]\n              }), null);\n            }\n          });\n        }\n      };\n      var rootKls = [props[\"class\"], ns.b(), ns.e(\"root\"), _defineProperty({}, ns.is(\"dynamic\"), unref(isDynamic))];\n      var footerProps = {\n        \"class\": ns.e(\"footer\"),\n        style: unref(footerHeight)\n      };\n      return createVNode(\"div\", {\n        \"class\": rootKls,\n        \"style\": unref(rootStyle)\n      }, [createVNode(MainTable, mainTableProps, _isSlot(tableSlots) ? tableSlots : {\n        \"default\": function _default() {\n          return [tableSlots];\n        }\n      }), createVNode(LeftTable, leftTableProps, _isSlot(tableSlots) ? tableSlots : {\n        \"default\": function _default() {\n          return [tableSlots];\n        }\n      }), createVNode(LeftTable$1, rightTableProps, _isSlot(tableSlots) ? tableSlots : {\n        \"default\": function _default() {\n          return [tableSlots];\n        }\n      }), slots.footer && createVNode(Footer, footerProps, {\n        \"default\": slots.footer\n      }), unref(showEmpty) && createVNode(Footer$1, {\n        \"class\": ns.e(\"empty\"),\n        \"style\": unref(emptyStyle)\n      }, {\n        \"default\": slots.empty\n      }), slots.overlay && createVNode(Overlay, {\n        \"class\": ns.e(\"overlay\")\n      }, {\n        \"default\": slots.overlay\n      })]);\n    };\n  }\n});\nexport { TableV2 as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;AAeA,SAAOA,OAAP,CAAOA,CAAP;EACOC,oBAAP,UAAOA,IAAPC,sEAAOD;;;;;;;EAUDE,mCAIJC;IAAAA,IAFIC,KAEJD,QAFIC,KAEJD;IAAAA,IADAE,MACAF,QADAE,MACAF;;;IACK,gBAGGG,eAHH;IAAA,IAAQC,aAAR,aAAQA,aAAR;IAAA,IAAiBC,kBAAjB,aAAiBA,kBAAjB;IAAA,IAA2BC,mBAA3B,aAA2BA,mBAA3B;IAAA,IACHC,WADG,aACHA,WADG;IAAA,IAGGC,eAHH,aAGGA,eAHH;IAAA,IAIDJ,gBAJC,aAIDA,gBAJC;IAAA,IAKDK,cALC,aAKDA,cALC;IAAA,IAMDH,eANC,aAMDA,eANC;IAAA,IAODC,IAPC,aAODA,IAPC;IAAA,IAQDC,QARC,aAQDA,QARC;IAAA,IASDE,eATC,aASDA,eATC;IAAA,IAUDC,eAVC,aAUDA,eAVC;IAAA,IAWDC,cAXC,aAWDA,cAXC;IAAA,IAYDC,YAZC,aAYDA,YAZC;IAAA,IAaDC,YAbC,aAaDA,YAbC;IAAA,IAcDC,aAdC,aAcDA,aAdC;IAAA,IAeDC,SAfC,aAeDA,SAfC;IAAA,IAgBDC,WAhBC,aAgBDA,WAhBC;IAAA,IAiBDC,WAjBC,aAiBDA,WAjBC;IAAA,IAkBDC,SAlBC,aAkBDA,SAlBC;IAAA,IAmBDC,UAnBC,aAmBDA,UAnBC;IAAA,IAoBDC,SApBC,aAoBDA,SApBC;IAAA,IAqBDC,WArBC,aAqBDA,WArBC;IAAA,IAsBDC,YAtBC,aAsBDA,YAtBC;IAAA,IAwBDC,SAxBC,aAwBDA,SAxBC;IAAA,IAyBDC,QAzBC,aAyBDA,QAzBC;IAAA,IA0BDC,YA1BC,aA0BDA,YA1BC;IAAA,IA2BDC,WA3BC,aA2BDA,WA3BC;IAAA,IA4BDC,WA5BC,aA4BDA,WA5BC;IAAA,IA8BDC,YA9BC,aA8BDA,YA9BC;IAAA,IAgCDC,cAhCC,aAgCDA,cAhCC;IAAA,IAiCDC,iBAjCC,aAiCDA,iBAjCC;IAAA,IAkCDC,YAlCC,aAkCDA,YAlCC;IAAA,IAmCDC,aAnCC,aAmCDA,aAnCC;IAAA,IAoCDC,cApCC,aAoCDA,cApCC;IAAA,IAsCDC,QAtCC,aAsCDA,QAtCC;IAAA,IAuCDL,gBAvCC,aAuCDA,gBAvCC;;UAGG;MAuCJM,QAvCI,EAuCJA,QAvCI;MAwCJC,YAxCI,EAwCJA,YAxCI;MAyCJC,WAzCI,EAyCJA,WAzCI;MA0CJC;IA1CI;IA6CNlC,OAAO;MACLmC,MADK;MAEXlB,wBAFW;MAGXL,8BAHW;MAIXM;IAJW,EAAPlB;;MAME,IACNoC,KADM,GAsBAlB,KAtBA,CACNkB,KADM;MAAA,IAENC,SAFM,GAsBAnB,KAtBA,CAENmB,SAFM;MAAA,IAGNC,kBAHM,GAsBApB,KAtBA,CAGNoB,kBAHM;MAAA,IANKC,eAML,GAsBArB,KAtBA,CANKqB,eAML;MAAA,gBAsBArB,KAtBA;MAAA,IAKAsB,YALA,GAsBAtB,KAtBA,CAKAsB,YALA;MAAA,IAMNC,WANM,GAsBAvB,KAtBA,CAMNuB,WANM;MAAA,IAONC,WAPM,GAsBAxB,KAtBA,CAONwB,WAPM;MAAA,IAQNC,eARM,GAsBAzB,KAtBA,CAQNyB,eARM;MAAA,IANKC,MAML,GAsBA1B,KAtBA,CANK0B,MAML;MAAA,gBAsBA1B,KAtBA;MAAA,IAUA2B,SAVA,GAsBA3B,KAtBA,CAUA2B,SAVA;MAAA,IAWNC,QAXM,GAsBA5B,KAtBA,CAWN4B,QAXM;MAAA,IAYNC,gBAZM,GAsBA7B,KAtBA,CAYN6B,gBAZM;MAAA,IAaNC,MAbM,GAsBA9B,KAtBA,CAaN8B,MAbM;MAAA,IAcNC,QAdM,GAsBA/B,KAtBA,CAcN+B,QAdM;MAAA,IAeApB,iBAfA,GAsBAX,KAtBA,CAeAW,iBAfA;MAAA,IANFqB,UAME,GAsBAhC,KAtBA,CANFgC,UAME;MAAA,IAkBKC,QAlBL,GAsBAjC,KAtBA,CAkBKiC,QAlBL;MAAA,IAkB2BC,cAlB3B,GAsBAlC,KAtBA,CAkB2BkC,cAlB3B;MAAA,IAkB2BC,cAlB3B,GAsBAnC,KAtBA,CAkB2BmC,cAlB3B;MAAA,IAkB2BC,KAlB3B,GAsBApC,KAtBA,CAkB2BoC,KAlB3B;;MAkBF;;MAOA,IAAaC;QACLnB,YADK;QAETA,SADID,YADK;QAGTE,OAFI,oBADK;QAITC,IAHI,OADK;QAKTC,SAJI,EAIJA,SALS;QAMTiB,kBALI,EAKJA,kBANS;QAOThB,SANI,kBADK;QAQTC,YAPI,EAOJA,YARS;QASTC,WARI,oBADK;QAUTC,MATI,wBADK;QAWTC,YAVI,EAUJA,YAXS;QAYTa,MAXI,EAWJA,MAZS;QAaTZ,SAZI,EAYJA,SAbS;QAcTC,iBAbI,EAaJA,iBAdS;QAeTC,iBAdI,GADK;QAgBTC,eAfI,gBADK;QAiBTC,cAhBI,EAgBJA,cAjBS;QAkBTS,KAjBI,EAiBJA,KAlBS;QAmBTR,YAlBI,EAkBJA,YAnBS;QAoBTC,cAnBI,EAmBJA,cApBS;QAqBTC,QApBI,EAoBJA;MArBS,CAAb;MAuBIE;;MAtBI,IAANK,2CAAM;;;QAyBNvB,KAAW,EAAXA;;QAEAwB;QACExB,IADqB;QAErByB,kBAAO,EAAPA;QACAD,YAASE,EAATF;QACApD,SAJqB,EAIrBA;QACAgD,SALqB;QAMrBlB,WANqB;QAOrBnB,YAAW2C,EAAX3C;QACAqB,MARqB;QASrBlB;QACAyC,iBAAc5D,EAAd4D;QACAlD,iBAXqB;QAYrBmC,eAZqB;QAarBH,cAbqB,EAarBA;QACAa,KAdqB;QAerBM;QACAC;;UAhBqBC;UAAAC;UAAAC;QAqBrBnC,YArBqB;QAAvB,sBAAuB;QAwBvB2B,OAAsB,4BAxBC;mBAAA;QAyBvBtB,kBAAuB,EAAvBA,kBAzBuB;oCAAA;QA2BvBO,oBA3BuB;QA4BrBT,SADqB,gCA3BA;QA6BrByB,WAAO,gCA7Bc;QA8BrBD,YAASE,EAATF,YA9BqB;QA+BrBpD,MAAM6D,EAJeV,iBA3BA;QAgCrBrB,MALqB,EAKrBA,MAhCqB;QAiCrBxB,iBANqB,EAMrBA,iBAjCqB;QAkCrB+B,iBAPqB,GA3BA;QAmCrB1B,eARqB,gBA3BA;QAoCrBG,qCApCqB;QAqCrBkB,KAVqB,0FA3BA;QAsCrBuB,cAXqB,EAWrBA,cAtCqB;QAuCrBf,YAZqB,EAYrBA,YAvCqB;QAwCrBU,QAbqB;MA3BA;;MA0CrBO,kBAfqB,uBAerBA;;UAfqBK;QAiBrBhB,MAjBqB;QAkBrBxB,QAlBqB;QAmBrBG,aAAUC,gBAnBW;QAAvBK,gCAAuB;QAsBvB7B,eAAuB,wBAtBA;QAuBvB4B,kBAAoC,EAApCA,kBAvBuB;QAyBvB3B,sBAAwB,iBAzBD;QA0BrByB,cADsB,uBAzBD;QA2BrByB,QAAS,EAATA,QA3BqB;QA4BrBD,QAASE,EAATF,QA5BqB;QA6BrBpD,MAAM6D,EAAN7D,MA7BqB;QA8BrB8B,gBALsB,EAKtBA,gBA9BqB;QA+BrBvB,YANsB,EAMtBA,YA/BqB;QAgCrB8B,aAPsB,EAOtBA,aAhCqB;QAiCrB1B,iBARsB,EAQtBA;MAjCqB;UAyBCoD;QAWtBR,SAXsB,EAWtBA,SAXsB;QAYtBf,eAZsB,EAYtBA,eAZsB;QAatBU,UAbsB,EAatBA,UAbsB;QActBM,kBAdsB;QAetBC,cAfsB;QAgBtBX,eAhBsB;QAiBtBkB,EAAK,EAALA;MAjBsB;UAAAC;QAsBtBxC,MAtBsB;QAAxBQ,wBAAwB;gCAAA;QAwBxB1C,aAAoB;MAxBI;MA0BxB,IAAMuE,oBAAgB;QACpBnC,EADoB,EACpBA,EADoB;QAEpB1B,cAFoB;QAGpBV,oBAHoB;QAIpBwC,eAJoB,EAIpBA,eAJoB;QAKpB7B;MALoB,CAAtB;MAOEC,iBAAiBmD;QACjBlD;UAAAA,OAAgBkD,WAAMlD,wBARF,uBAQEA,EARF;YAAA8D;YAAAC;cAAA;gBAAA;cAAA;gBAAA;kBAAA;gBAAA;cAAA;gBAepBC;cAfoB,IAAtB,IAAsB;YAAA;UAAA,CAQEhE,CAAtBA;QAAAA,CADiBkD;QAYjBzB,MADqB;UAAA;YAAAwC;YAAAF;cAAA;gBAAA;cAAA;gBAMrBjE;kBAAAA,OAAiBoD,MAAMpD,eAANoD,CAAjBpD;gBAAAA;cANqB,KAOrByB;gBAPF;cAOEA,IAGIsC,IAHJtC,CAPqB;YAAA;UAAA;QAAA;MAXJ2B,CAAjBnD;UAqBuBmE,qEAIvB/E,gBAJuB,EAIRgF,gBAJQ;MAOzB,IAAMC;QACJ7C,SAD2BA,cAAvB6C;QAGJpC,KAH2B;MAAvBoC,CAAN;aAA6BC;QAM3BxD,gBAN2B;QAA7B;MAA6B,GAS7B,YAAgB,CAAGyD,SAAH,EAAG3B,cAAH,EAAG4B;QACjBT,WAAM/E;UAAAA,OACKA,YADLA;QAAAA;MADW,CAAH,CAAhB,EAIQ+E,WAHD;mBAIK;UAAA,OACFU,YADE;QAAA;MAJL,EADP,EAMUH,yBAIyBb,eAJzBa,EAIyBE;QAJzB;UAAA;QAAA;MAIyB,CAJzBF,CANV,OAYeG,sBANL;mBAUQzF;MAVR,EANV,EAMUmE,+BAYgCuB,WAAP;QAZzB,sBAYyB;QAjB5B,SADYvB;MAkBgB,CAAOuB,EAMxCR;mBAGYO,KAAO;MAHnBP,CANwCQ,CAlB1C,EA4BQV,KAAI,CAAGhF,OAAPgF,IACOM,qBAAL;QAAA,cAIWF,SAJX;MAAA,CAAKE,EAAL;mBAMKG;MANL,CAAKH,CA7Bf,CAT6B;IAsCnB;EAAA","names":["Empty","Overlay","Object","COMPONENT_NAME","props","TableV2","name","useTable","columnsStyles","expose","fixedColumnsOnRight","mainColumns","mainTableHeight","fixedColumnsOnLeft","fixedTableHeight","leftTableWidth","rightTableWidth","data","depthMap","expandedRowKeys","hasFixedColumns","hoveringRowKey","mainTableRef","leftTableRef","rightTableRef","isDynamic","isResetting","isScrolling","bodyWidth","emptyStyle","rootStyle","headerWidth","footerHeight","showEmpty","onColumnSorted","scrollTo","scrollToLeft","scrollToTop","scrollToRow","getRowHeight","onRowExpanded","onRowsRendered","onScroll","onVerticalScroll","ns","cache","cellProps","estimatedRowHeight","expandColumnKey","headerHeight","headerClass","headerProps","headerCellProps","sortBy","rowHeight","rowClass","rowEventHandlers","rowKey","rowProps","indentSize","iconSize","useIsScrolling","vScrollbarSize","width","mainTableProps","fixedData","sortState","scrollbarAlwaysOn","_fixedTableHeight","columns","class","unref","height","scrollbarStartGap","scrollbarEndGap","rightColumnsWidth","rightColumnsWidthWithScrollbar","rightTableProps","_data","tableRowProps","tableCellProps","style","tableHeaderProps","row","cell","onRowHeightChange","header","rootKls","_columnsStyles","tableHeaderCellProps","_createVNode","MainTable","_isSlot","slots","column"],"sources":["../../../../../../packages/components/table-v2/src/table-v2.tsx"],"sourcesContent":["// @ts-nocheck\nimport { defineComponent, provide, unref } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { useTable } from './use-table'\nimport { TableV2InjectionKey } from './tokens'\nimport { tableV2Props } from './table'\n// renderers\nimport MainTable from './renderers/main-table'\nimport LeftTable from './renderers/left-table'\nimport RightTable from './renderers/right-table'\nimport Row from './renderers/row'\nimport Cell from './renderers/cell'\nimport Header from './renderers/header'\nimport HeaderCell from './renderers/header-cell'\nimport Footer from './renderers/footer'\nimport Empty from './renderers/empty'\nimport Overlay from './renderers/overlay'\n\nimport type { TableGridRowSlotParams } from './table-grid'\nimport type { ScrollStrategy } from './composables/use-scrollbar'\nimport type {\n  TableV2HeaderRendererParams,\n  TableV2HeaderRowCellRendererParams,\n  TableV2RowCellRenderParam,\n} from './components'\n\nconst COMPONENT_NAME = 'ElTableV2'\n\nconst TableV2 = defineComponent({\n  name: COMPONENT_NAME,\n  props: tableV2Props,\n  setup(props, { slots, expose }) {\n    const ns = useNamespace('table-v2')\n\n    const {\n      columnsStyles,\n      fixedColumnsOnLeft,\n      fixedColumnsOnRight,\n      mainColumns,\n      mainTableHeight,\n      fixedTableHeight,\n      leftTableWidth,\n      rightTableWidth,\n      data,\n      depthMap,\n      expandedRowKeys,\n      hasFixedColumns,\n      hoveringRowKey,\n      mainTableRef,\n      leftTableRef,\n      rightTableRef,\n      isDynamic,\n      isResetting,\n      isScrolling,\n\n      bodyWidth,\n      emptyStyle,\n      rootStyle,\n      headerWidth,\n      footerHeight,\n\n      showEmpty,\n\n      // exposes\n      scrollTo,\n      scrollToLeft,\n      scrollToTop,\n      scrollToRow,\n\n      getRowHeight,\n      onColumnSorted,\n      onRowHeightChange,\n      onRowHovered,\n      onRowExpanded,\n      onRowsRendered,\n      onScroll,\n      onVerticalScroll,\n    } = useTable(props)\n\n    expose({\n      /**\n       * @description scroll to a given position\n       * @params params {{ scrollLeft?: number, scrollTop?: number }} where to scroll to.\n       */\n      scrollTo,\n      /**\n       * @description scroll to a given position horizontally\n       * @params scrollLeft {Number} where to scroll to.\n       */\n      scrollToLeft,\n      /**\n       * @description scroll to a given position vertically\n       * @params scrollTop { Number } where to scroll to.\n       */\n      scrollToTop,\n      /**\n       * @description scroll to a given row\n       * @params row {Number} which row to scroll to\n       * @params @optional strategy {ScrollStrategy} use what strategy to scroll to\n       */\n      scrollToRow,\n    })\n\n    provide(TableV2InjectionKey, {\n      ns,\n      isResetting,\n      hoveringRowKey,\n      isScrolling,\n    })\n\n    return () => {\n      const {\n        cache,\n        cellProps,\n        estimatedRowHeight,\n        expandColumnKey,\n        fixedData,\n        headerHeight,\n        headerClass,\n        headerProps,\n        headerCellProps,\n        sortBy,\n        sortState,\n        rowHeight,\n        rowClass,\n        rowEventHandlers,\n        rowKey,\n        rowProps,\n        scrollbarAlwaysOn,\n        indentSize,\n        iconSize,\n        useIsScrolling,\n        vScrollbarSize,\n        width,\n      } = props\n\n      const _data = unref(data)\n\n      const mainTableProps = {\n        cache,\n        class: ns.e('main'),\n        columns: unref(mainColumns),\n        data: _data,\n        fixedData,\n        estimatedRowHeight,\n        bodyWidth: unref(bodyWidth),\n        headerHeight,\n        headerWidth: unref(headerWidth),\n        height: unref(mainTableHeight),\n        mainTableRef,\n        rowKey,\n        rowHeight,\n        scrollbarAlwaysOn,\n        scrollbarStartGap: 2,\n        scrollbarEndGap: vScrollbarSize,\n        useIsScrolling,\n        width,\n        getRowHeight,\n        onRowsRendered,\n        onScroll,\n      }\n\n      const leftColumnsWidth = unref(leftTableWidth)\n      const _fixedTableHeight = unref(fixedTableHeight)\n\n      const leftTableProps = {\n        cache,\n        class: ns.e('left'),\n        columns: unref(fixedColumnsOnLeft),\n        data: _data,\n        estimatedRowHeight,\n        leftTableRef,\n        rowHeight,\n        bodyWidth: leftColumnsWidth,\n        headerWidth: leftColumnsWidth,\n        headerHeight,\n        height: _fixedTableHeight,\n        rowKey,\n        scrollbarAlwaysOn,\n        scrollbarStartGap: 2,\n        scrollbarEndGap: vScrollbarSize,\n        useIsScrolling,\n        width: leftColumnsWidth,\n        getRowHeight,\n        onScroll: onVerticalScroll,\n      }\n\n      const rightColumnsWidth = unref(rightTableWidth)\n      const rightColumnsWidthWithScrollbar = rightColumnsWidth + vScrollbarSize\n\n      const rightTableProps = {\n        cache,\n        class: ns.e('right'),\n        columns: unref(fixedColumnsOnRight),\n        data: _data,\n        estimatedRowHeight,\n        rightTableRef,\n        rowHeight,\n        bodyWidth: rightColumnsWidthWithScrollbar,\n        headerWidth: rightColumnsWidthWithScrollbar,\n        headerHeight,\n        height: _fixedTableHeight,\n        rowKey,\n        scrollbarAlwaysOn,\n        scrollbarStartGap: 2,\n        scrollbarEndGap: vScrollbarSize,\n        width: rightColumnsWidthWithScrollbar,\n        style: `--${unref(\n          ns.namespace\n        )}-table-scrollbar-size: ${vScrollbarSize}px`,\n        useIsScrolling,\n        getRowHeight,\n        onScroll: onVerticalScroll,\n      }\n      const _columnsStyles = unref(columnsStyles)\n\n      const tableRowProps = {\n        ns,\n        depthMap: unref(depthMap),\n        columnsStyles: _columnsStyles,\n        expandColumnKey,\n        expandedRowKeys: unref(expandedRowKeys),\n        estimatedRowHeight,\n        hasFixedColumns: unref(hasFixedColumns),\n        hoveringRowKey: unref(hoveringRowKey),\n        rowProps,\n        rowClass,\n        rowKey,\n        rowEventHandlers,\n        onRowHovered,\n        onRowExpanded,\n        onRowHeightChange,\n      }\n\n      const tableCellProps = {\n        cellProps,\n        expandColumnKey,\n        indentSize,\n        iconSize,\n        rowKey,\n        expandedRowKeys: unref(expandedRowKeys),\n        ns,\n      }\n\n      const tableHeaderProps = {\n        ns,\n        headerClass,\n        headerProps,\n        columnsStyles: _columnsStyles,\n      }\n\n      const tableHeaderCellProps = {\n        ns,\n\n        sortBy,\n        sortState,\n        headerCellProps,\n        onColumnSorted,\n      }\n\n      const tableSlots = {\n        row: (props: TableGridRowSlotParams) => (\n          <Row {...props} {...tableRowProps}>\n            {{\n              row: slots.row,\n              cell: (props: TableV2RowCellRenderParam) =>\n                slots.cell ? (\n                  <Cell\n                    {...props}\n                    {...tableCellProps}\n                    style={_columnsStyles[props.column.key]}\n                  >\n                    {slots.cell}\n                  </Cell>\n                ) : (\n                  <Cell\n                    {...props}\n                    {...tableCellProps}\n                    style={_columnsStyles[props.column.key]}\n                  />\n                ),\n            }}\n          </Row>\n        ),\n        header: (props: TableV2HeaderRendererParams) => (\n          <Header {...props} {...tableHeaderProps}>\n            {{\n              header: slots.header,\n              cell: (props: TableV2HeaderRowCellRendererParams) =>\n                slots['header-cell'] ? (\n                  <HeaderCell\n                    {...props}\n                    {...tableHeaderCellProps}\n                    style={_columnsStyles[props.column.key]}\n                  >\n                    {slots['header-cell']}\n                  </HeaderCell>\n                ) : (\n                  <HeaderCell\n                    {...props}\n                    {...tableHeaderCellProps}\n                    style={_columnsStyles[props.column.key]}\n                  />\n                ),\n            }}\n          </Header>\n        ),\n      }\n\n      const rootKls = [\n        props.class,\n        ns.b(),\n        ns.e('root'),\n        {\n          [ns.is('dynamic')]: unref(isDynamic),\n        },\n      ]\n\n      const footerProps = {\n        class: ns.e('footer'),\n        style: unref(footerHeight),\n      }\n\n      return (\n        <div class={rootKls} style={unref(rootStyle)}>\n          <MainTable {...mainTableProps}>{tableSlots}</MainTable>\n          <LeftTable {...leftTableProps}>{tableSlots}</LeftTable>\n          <RightTable {...rightTableProps}>{tableSlots}</RightTable>\n          {slots.footer && (\n            <Footer {...footerProps}>{{ default: slots.footer }}</Footer>\n          )}\n          {unref(showEmpty) && (\n            <Empty class={ns.e('empty')} style={unref(emptyStyle)}>\n              {{ default: slots.empty }}\n            </Empty>\n          )}\n          {slots.overlay && (\n            <Overlay class={ns.e('overlay')}>\n              {{ default: slots.overlay }}\n            </Overlay>\n          )}\n        </div>\n      )\n    }\n  },\n})\n\nexport default TableV2\n\nexport type TableV2Instance = InstanceType<typeof TableV2> & {\n  /**\n   * @description scroll to a given position\n   * @params params {{ scrollLeft?: number, scrollTop?: number }} where to scroll to.\n   */\n  scrollTo: (param: { scrollLeft?: number; scrollTop?: number }) => void\n  /**\n   * @description scroll to a given position horizontally\n   * @params scrollLeft {Number} where to scroll to.\n   */\n  scrollToLeft: (scrollLeft: number) => void\n  /**\n   * @description scroll to a given position vertically\n   * @params scrollTop { Number } where to scroll to.\n   */\n  scrollToTop: (scrollTop: number) => void\n  /**\n   * @description scroll to a given row\n   * @params row {Number} which row to scroll to\n   * @params strategy {ScrollStrategy} use what strategy to scroll to\n   */\n  scrollToRow(row: number, strategy?: ScrollStrategy): void\n}\n"]},"metadata":{},"sourceType":"module"}