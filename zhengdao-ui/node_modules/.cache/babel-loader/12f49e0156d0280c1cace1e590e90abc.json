{"ast":null,"code":"import _toArray from \"/home/little/Documents/music_web/backandfrontsep/zhengdao-ui/node_modules/@babel/runtime/helpers/esm/toArray.js\";\nimport _objectSpread from \"/home/little/Documents/music_web/backandfrontsep/zhengdao-ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport { defineComponent, inject, ref, computed, nextTick, watch, onMounted, resolveComponent, resolveDirective, openBlock, createBlock, withCtx, withDirectives, createElementBlock, normalizeClass, normalizeStyle, createVNode, withModifiers, Fragment, renderList, toDisplayString, createElementVNode, withKeys, vModelText, createCommentVNode, vShow, renderSlot } from 'vue';\nimport { isPromise } from '@vue/shared';\nimport { debounce } from 'lodash-unified';\nimport { isClient, useResizeObserver } from '@vueuse/core';\nimport _CascaderPanel from '../../cascader-panel/index.mjs';\nimport { ElInput } from '../../input/index.mjs';\nimport { ElTooltip } from '../../tooltip/index.mjs';\nimport { ElScrollbar } from '../../scrollbar/index.mjs';\nimport { ElTag } from '../../tag/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport '../../../tokens/index.mjs';\nimport '../../../directives/index.mjs';\nimport '../../../hooks/index.mjs';\nimport '../../../utils/index.mjs';\nimport '../../../constants/index.mjs';\nimport { CircleClose, Check, ArrowDown } from '@element-plus/icons-vue';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport ClickOutside from '../../../directives/click-outside/index.mjs';\nimport { CommonProps } from '../../cascader-panel/src/config.mjs';\nimport { isValidComponentSize } from '../../../utils/vue/validator.mjs';\nimport { useTooltipContentProps } from '../../tooltip/src/tooltip.mjs';\nimport { tagProps } from '../../tag/src/tag.mjs';\nimport { UPDATE_MODEL_EVENT, CHANGE_EVENT } from '../../../constants/event.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { formContextKey, formItemContextKey } from '../../../tokens/form.mjs';\nimport { useSize } from '../../../hooks/use-common-props/index.mjs';\nimport { debugWarn } from '../../../utils/error.mjs';\nimport { isKorean } from '../../../utils/i18n.mjs';\nimport { EVENT_CODE } from '../../../constants/aria.mjs';\nimport { focusNode, getSibling } from '../../../utils/dom/aria.mjs';\nvar DEFAULT_INPUT_HEIGHT = 40;\nvar INPUT_HEIGHT_MAP = {\n  large: 36,\n  \"default\": 32,\n  small: 28\n};\nvar popperOptions = {\n  modifiers: [{\n    name: \"arrowPosition\",\n    enabled: true,\n    phase: \"main\",\n    fn: function fn(_ref) {\n      var state = _ref.state;\n      var modifiersData = state.modifiersData,\n          placement = state.placement;\n      if ([\"right\", \"left\", \"bottom\", \"top\"].includes(placement)) return;\n      modifiersData.arrow.x = 35;\n    },\n    requires: [\"arrow\"]\n  }]\n};\nvar COMPONENT_NAME = \"ElCascader\";\n\nvar _sfc_main = defineComponent({\n  name: COMPONENT_NAME,\n  components: {\n    ElCascaderPanel: _CascaderPanel,\n    ElInput: ElInput,\n    ElTooltip: ElTooltip,\n    ElScrollbar: ElScrollbar,\n    ElTag: ElTag,\n    ElIcon: ElIcon,\n    CircleClose: CircleClose,\n    Check: Check,\n    ArrowDown: ArrowDown\n  },\n  directives: {\n    Clickoutside: ClickOutside\n  },\n  props: _objectSpread(_objectSpread({}, CommonProps), {}, {\n    size: {\n      type: String,\n      validator: isValidComponentSize\n    },\n    placeholder: {\n      type: String\n    },\n    disabled: Boolean,\n    clearable: Boolean,\n    filterable: Boolean,\n    filterMethod: {\n      type: Function,\n      \"default\": function _default(node, keyword) {\n        return node.text.includes(keyword);\n      }\n    },\n    separator: {\n      type: String,\n      \"default\": \" / \"\n    },\n    showAllLevels: {\n      type: Boolean,\n      \"default\": true\n    },\n    collapseTags: Boolean,\n    collapseTagsTooltip: {\n      type: Boolean,\n      \"default\": false\n    },\n    debounce: {\n      type: Number,\n      \"default\": 300\n    },\n    beforeFilter: {\n      type: Function,\n      \"default\": function _default() {\n        return true;\n      }\n    },\n    popperClass: {\n      type: String,\n      \"default\": \"\"\n    },\n    teleported: useTooltipContentProps.teleported,\n    tagType: _objectSpread(_objectSpread({}, tagProps.type), {}, {\n      \"default\": \"info\"\n    }),\n    validateEvent: {\n      type: Boolean,\n      \"default\": true\n    }\n  }),\n  emits: [UPDATE_MODEL_EVENT, CHANGE_EVENT, \"focus\", \"blur\", \"visible-change\", \"expand-change\", \"remove-tag\"],\n  setup: function setup(props, _ref2) {\n    var emit = _ref2.emit;\n    var inputInitialHeight = 0;\n    var pressDeleteCount = 0;\n    var nsCascader = useNamespace(\"cascader\");\n    var nsInput = useNamespace(\"input\");\n\n    var _useLocale = useLocale(),\n        t = _useLocale.t;\n\n    var elForm = inject(formContextKey, {});\n    var elFormItem = inject(formItemContextKey, {});\n    var tooltipRef = ref(null);\n    var input = ref(null);\n    var tagWrapper = ref(null);\n    var panel = ref(null);\n    var suggestionPanel = ref(null);\n    var popperVisible = ref(false);\n    var inputHover = ref(false);\n    var filtering = ref(false);\n    var inputValue = ref(\"\");\n    var searchInputValue = ref(\"\");\n    var presentTags = ref([]);\n    var allPresentTags = ref([]);\n    var suggestions = ref([]);\n    var isOnComposition = ref(false);\n    var isDisabled = computed(function () {\n      return props.disabled || elForm.disabled;\n    });\n    var inputPlaceholder = computed(function () {\n      return props.placeholder || t(\"el.cascader.placeholder\");\n    });\n    var realSize = useSize();\n    var tagSize = computed(function () {\n      return [\"small\"].includes(realSize.value) ? \"small\" : \"default\";\n    });\n    var multiple = computed(function () {\n      return !!props.props.multiple;\n    });\n    var readonly = computed(function () {\n      return !props.filterable || multiple.value;\n    });\n    var searchKeyword = computed(function () {\n      return multiple.value ? searchInputValue.value : inputValue.value;\n    });\n    var checkedNodes = computed(function () {\n      var _a;\n\n      return ((_a = panel.value) == null ? void 0 : _a.checkedNodes) || [];\n    });\n    var clearBtnVisible = computed(function () {\n      if (!props.clearable || isDisabled.value || filtering.value || !inputHover.value) return false;\n      return !!checkedNodes.value.length;\n    });\n    var presentText = computed(function () {\n      var showAllLevels = props.showAllLevels,\n          separator = props.separator;\n      var nodes = checkedNodes.value;\n      return nodes.length ? multiple.value ? \" \" : nodes[0].calcText(showAllLevels, separator) : \"\";\n    });\n    var checkedValue = computed({\n      get: function get() {\n        return props.modelValue;\n      },\n      set: function set(val) {\n        var _a;\n\n        emit(UPDATE_MODEL_EVENT, val);\n        emit(CHANGE_EVENT, val);\n\n        if (props.validateEvent) {\n          (_a = elFormItem.validate) == null ? void 0 : _a.call(elFormItem, \"change\")[\"catch\"](function (err) {\n            return debugWarn(err);\n          });\n        }\n      }\n    });\n    var popperPaneRef = computed(function () {\n      var _a, _b;\n\n      return (_b = (_a = tooltipRef.value) == null ? void 0 : _a.popperRef) == null ? void 0 : _b.contentRef;\n    });\n\n    var togglePopperVisible = function togglePopperVisible(visible) {\n      var _a, _b, _c;\n\n      if (isDisabled.value) return;\n      visible = visible != null ? visible : !popperVisible.value;\n\n      if (visible !== popperVisible.value) {\n        popperVisible.value = visible;\n        (_b = (_a = input.value) == null ? void 0 : _a.input) == null ? void 0 : _b.setAttribute(\"aria-expanded\", \"\".concat(visible));\n\n        if (visible) {\n          updatePopperPosition();\n          nextTick((_c = panel.value) == null ? void 0 : _c.scrollToExpandingNode);\n        } else if (props.filterable) {\n          var value = presentText.value;\n          inputValue.value = value;\n          searchInputValue.value = value;\n        }\n\n        emit(\"visible-change\", visible);\n      }\n    };\n\n    var updatePopperPosition = function updatePopperPosition() {\n      nextTick(function () {\n        var _a;\n\n        (_a = tooltipRef.value) == null ? void 0 : _a.updatePopper();\n      });\n    };\n\n    var hideSuggestionPanel = function hideSuggestionPanel() {\n      filtering.value = false;\n    };\n\n    var genTag = function genTag(node) {\n      var showAllLevels = props.showAllLevels,\n          separator = props.separator;\n      return {\n        node: node,\n        key: node.uid,\n        text: node.calcText(showAllLevels, separator),\n        hitState: false,\n        closable: !isDisabled.value && !node.isDisabled,\n        isCollapseTag: false\n      };\n    };\n\n    var deleteTag = function deleteTag(tag) {\n      var _a;\n\n      var node = tag.node;\n      node.doCheck(false);\n      (_a = panel.value) == null ? void 0 : _a.calculateCheckedValue();\n      emit(\"remove-tag\", node.valueByOption);\n    };\n\n    var calculatePresentTags = function calculatePresentTags() {\n      if (!multiple.value) return;\n      var nodes = checkedNodes.value;\n      var tags = [];\n      var allTags = [];\n      nodes.forEach(function (node) {\n        return allTags.push(genTag(node));\n      });\n      allPresentTags.value = allTags;\n\n      if (nodes.length) {\n        var _nodes = _toArray(nodes),\n            first = _nodes[0],\n            rest = _nodes.slice(1);\n\n        var restCount = rest.length;\n        tags.push(genTag(first));\n\n        if (restCount) {\n          if (props.collapseTags) {\n            tags.push({\n              key: -1,\n              text: \"+ \".concat(restCount),\n              closable: false,\n              isCollapseTag: true\n            });\n          } else {\n            rest.forEach(function (node) {\n              return tags.push(genTag(node));\n            });\n          }\n        }\n      }\n\n      presentTags.value = tags;\n    };\n\n    var calculateSuggestions = function calculateSuggestions() {\n      var _a, _b;\n\n      var filterMethod = props.filterMethod,\n          showAllLevels = props.showAllLevels,\n          separator = props.separator;\n      var res = (_b = (_a = panel.value) == null ? void 0 : _a.getFlattedNodes(!props.props.checkStrictly)) == null ? void 0 : _b.filter(function (node) {\n        if (node.isDisabled) return false;\n        node.calcText(showAllLevels, separator);\n        return filterMethod(node, searchKeyword.value);\n      });\n\n      if (multiple.value) {\n        presentTags.value.forEach(function (tag) {\n          tag.hitState = false;\n        });\n        allPresentTags.value.forEach(function (tag) {\n          tag.hitState = false;\n        });\n      }\n\n      filtering.value = true;\n      suggestions.value = res;\n      updatePopperPosition();\n    };\n\n    var focusFirstNode = function focusFirstNode() {\n      var _a;\n\n      var firstNode;\n\n      if (filtering.value && suggestionPanel.value) {\n        firstNode = suggestionPanel.value.$el.querySelector(\".\".concat(nsCascader.e(\"suggestion-item\")));\n      } else {\n        firstNode = (_a = panel.value) == null ? void 0 : _a.$el.querySelector(\".\".concat(nsCascader.b(\"node\"), \"[tabindex=\\\"-1\\\"]\"));\n      }\n\n      if (firstNode) {\n        firstNode.focus();\n        !filtering.value && firstNode.click();\n      }\n    };\n\n    var updateStyle = function updateStyle() {\n      var _a, _b;\n\n      var inputInner = (_a = input.value) == null ? void 0 : _a.input;\n      var tagWrapperEl = tagWrapper.value;\n      var suggestionPanelEl = (_b = suggestionPanel.value) == null ? void 0 : _b.$el;\n      if (!isClient || !inputInner) return;\n\n      if (suggestionPanelEl) {\n        var suggestionList = suggestionPanelEl.querySelector(\".\".concat(nsCascader.e(\"suggestion-list\")));\n        suggestionList.style.minWidth = \"\".concat(inputInner.offsetWidth, \"px\");\n      }\n\n      if (tagWrapperEl) {\n        var offsetHeight = tagWrapperEl.offsetHeight;\n        var height = presentTags.value.length > 0 ? \"\".concat(Math.max(offsetHeight + 6, inputInitialHeight), \"px\") : \"\".concat(inputInitialHeight, \"px\");\n        inputInner.style.height = height;\n        updatePopperPosition();\n      }\n    };\n\n    var getCheckedNodes = function getCheckedNodes(leafOnly) {\n      var _a;\n\n      return (_a = panel.value) == null ? void 0 : _a.getCheckedNodes(leafOnly);\n    };\n\n    var handleExpandChange = function handleExpandChange(value) {\n      updatePopperPosition();\n      emit(\"expand-change\", value);\n    };\n\n    var handleComposition = function handleComposition(event) {\n      var _a;\n\n      var text = (_a = event.target) == null ? void 0 : _a.value;\n\n      if (event.type === \"compositionend\") {\n        isOnComposition.value = false;\n        nextTick(function () {\n          return handleInput(text);\n        });\n      } else {\n        var lastCharacter = text[text.length - 1] || \"\";\n        isOnComposition.value = !isKorean(lastCharacter);\n      }\n    };\n\n    var handleKeyDown = function handleKeyDown(e) {\n      if (isOnComposition.value) return;\n\n      switch (e.code) {\n        case EVENT_CODE.enter:\n          togglePopperVisible();\n          break;\n\n        case EVENT_CODE.down:\n          togglePopperVisible(true);\n          nextTick(focusFirstNode);\n          e.preventDefault();\n          break;\n\n        case EVENT_CODE.esc:\n          if (popperVisible.value === true) {\n            e.preventDefault();\n            e.stopPropagation();\n            togglePopperVisible(false);\n          }\n\n          break;\n\n        case EVENT_CODE.tab:\n          togglePopperVisible(false);\n          break;\n      }\n    };\n\n    var handleClear = function handleClear() {\n      var _a;\n\n      (_a = panel.value) == null ? void 0 : _a.clearCheckedNodes();\n      togglePopperVisible(false);\n    };\n\n    var handleSuggestionClick = function handleSuggestionClick(node) {\n      var _a, _b;\n\n      var checked = node.checked;\n\n      if (multiple.value) {\n        (_a = panel.value) == null ? void 0 : _a.handleCheckChange(node, !checked, false);\n      } else {\n        !checked && ((_b = panel.value) == null ? void 0 : _b.handleCheckChange(node, true, false));\n        togglePopperVisible(false);\n      }\n    };\n\n    var handleSuggestionKeyDown = function handleSuggestionKeyDown(e) {\n      var target = e.target;\n      var code = e.code;\n\n      switch (code) {\n        case EVENT_CODE.up:\n        case EVENT_CODE.down:\n          {\n            var distance = code === EVENT_CODE.up ? -1 : 1;\n            focusNode(getSibling(target, distance, \".\".concat(nsCascader.e(\"suggestion-item\"), \"[tabindex=\\\"-1\\\"]\")));\n            break;\n          }\n\n        case EVENT_CODE.enter:\n          target.click();\n          break;\n      }\n    };\n\n    var handleDelete = function handleDelete() {\n      var tags = presentTags.value;\n      var lastTag = tags[tags.length - 1];\n      pressDeleteCount = searchInputValue.value ? 0 : pressDeleteCount + 1;\n      if (!lastTag || !pressDeleteCount) return;\n\n      if (lastTag.hitState) {\n        deleteTag(lastTag);\n      } else {\n        lastTag.hitState = true;\n      }\n    };\n\n    var handleFilter = debounce(function () {\n      var value = searchKeyword.value;\n      if (!value) return;\n      var passed = props.beforeFilter(value);\n\n      if (isPromise(passed)) {\n        passed.then(calculateSuggestions)[\"catch\"](function () {});\n      } else if (passed !== false) {\n        calculateSuggestions();\n      } else {\n        hideSuggestionPanel();\n      }\n    }, props.debounce);\n\n    var handleInput = function handleInput(val, e) {\n      !popperVisible.value && togglePopperVisible(true);\n      if (e == null ? void 0 : e.isComposing) return;\n      val ? handleFilter() : hideSuggestionPanel();\n    };\n\n    watch(filtering, updatePopperPosition);\n    watch([checkedNodes, isDisabled], calculatePresentTags);\n    watch(presentTags, function () {\n      nextTick(function () {\n        return updateStyle();\n      });\n    });\n    watch(presentText, function (val) {\n      return inputValue.value = val;\n    }, {\n      immediate: true\n    });\n    onMounted(function () {\n      var _a;\n\n      var inputEl = (_a = input.value) == null ? void 0 : _a.$el;\n      inputInitialHeight = (inputEl == null ? void 0 : inputEl.offsetHeight) || INPUT_HEIGHT_MAP[realSize.value] || DEFAULT_INPUT_HEIGHT;\n      useResizeObserver(inputEl, updateStyle);\n    });\n    return {\n      popperOptions: popperOptions,\n      tooltipRef: tooltipRef,\n      popperPaneRef: popperPaneRef,\n      input: input,\n      tagWrapper: tagWrapper,\n      panel: panel,\n      suggestionPanel: suggestionPanel,\n      popperVisible: popperVisible,\n      inputHover: inputHover,\n      inputPlaceholder: inputPlaceholder,\n      filtering: filtering,\n      presentText: presentText,\n      checkedValue: checkedValue,\n      inputValue: inputValue,\n      searchInputValue: searchInputValue,\n      presentTags: presentTags,\n      allPresentTags: allPresentTags,\n      suggestions: suggestions,\n      isDisabled: isDisabled,\n      isOnComposition: isOnComposition,\n      realSize: realSize,\n      tagSize: tagSize,\n      multiple: multiple,\n      readonly: readonly,\n      clearBtnVisible: clearBtnVisible,\n      nsCascader: nsCascader,\n      nsInput: nsInput,\n      t: t,\n      togglePopperVisible: togglePopperVisible,\n      hideSuggestionPanel: hideSuggestionPanel,\n      deleteTag: deleteTag,\n      focusFirstNode: focusFirstNode,\n      getCheckedNodes: getCheckedNodes,\n      handleExpandChange: handleExpandChange,\n      handleKeyDown: handleKeyDown,\n      handleComposition: handleComposition,\n      handleClear: handleClear,\n      handleSuggestionClick: handleSuggestionClick,\n      handleSuggestionKeyDown: handleSuggestionKeyDown,\n      handleDelete: handleDelete,\n      handleInput: handleInput\n    };\n  }\n});\n\nvar _hoisted_1 = {\n  key: 0\n};\nvar _hoisted_2 = [\"placeholder\"];\nvar _hoisted_3 = [\"onClick\"];\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_circle_close = resolveComponent(\"circle-close\");\n\n  var _component_el_icon = resolveComponent(\"el-icon\");\n\n  var _component_arrow_down = resolveComponent(\"arrow-down\");\n\n  var _component_el_input = resolveComponent(\"el-input\");\n\n  var _component_el_tag = resolveComponent(\"el-tag\");\n\n  var _component_el_tooltip = resolveComponent(\"el-tooltip\");\n\n  var _component_el_cascader_panel = resolveComponent(\"el-cascader-panel\");\n\n  var _component_check = resolveComponent(\"check\");\n\n  var _component_el_scrollbar = resolveComponent(\"el-scrollbar\");\n\n  var _directive_clickoutside = resolveDirective(\"clickoutside\");\n\n  return openBlock(), createBlock(_component_el_tooltip, {\n    ref: \"tooltipRef\",\n    visible: _ctx.popperVisible,\n    teleported: _ctx.teleported,\n    \"popper-class\": [_ctx.nsCascader.e(\"dropdown\"), _ctx.popperClass],\n    \"popper-options\": _ctx.popperOptions,\n    \"fallback-placements\": [\"bottom-start\", \"bottom\", \"top-start\", \"top\", \"right\", \"left\"],\n    \"stop-popper-mouse-event\": false,\n    \"gpu-acceleration\": false,\n    placement: \"bottom-start\",\n    transition: \"\".concat(_ctx.nsCascader.namespace.value, \"-zoom-in-top\"),\n    effect: \"light\",\n    pure: \"\",\n    persistent: \"\",\n    onHide: _ctx.hideSuggestionPanel\n  }, {\n    \"default\": withCtx(function () {\n      return [withDirectives((openBlock(), createElementBlock(\"div\", {\n        \"class\": normalizeClass([_ctx.nsCascader.b(), _ctx.nsCascader.m(_ctx.realSize), _ctx.nsCascader.is(\"disabled\", _ctx.isDisabled), _ctx.$attrs[\"class\"]]),\n        style: normalizeStyle(_ctx.$attrs.style),\n        onClick: _cache[11] || (_cache[11] = function () {\n          return _ctx.togglePopperVisible(_ctx.readonly ? void 0 : true);\n        }),\n        onKeydown: _cache[12] || (_cache[12] = function () {\n          return _ctx.handleKeyDown && _ctx.handleKeyDown.apply(_ctx, arguments);\n        }),\n        onMouseenter: _cache[13] || (_cache[13] = function ($event) {\n          return _ctx.inputHover = true;\n        }),\n        onMouseleave: _cache[14] || (_cache[14] = function ($event) {\n          return _ctx.inputHover = false;\n        })\n      }, [createVNode(_component_el_input, {\n        ref: \"input\",\n        modelValue: _ctx.inputValue,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n          return _ctx.inputValue = $event;\n        }),\n        placeholder: _ctx.searchInputValue ? \"\" : _ctx.inputPlaceholder,\n        readonly: _ctx.readonly,\n        disabled: _ctx.isDisabled,\n        \"validate-event\": false,\n        size: _ctx.realSize,\n        \"class\": normalizeClass(_ctx.nsCascader.is(\"focus\", _ctx.popperVisible)),\n        onCompositionstart: _ctx.handleComposition,\n        onCompositionupdate: _ctx.handleComposition,\n        onCompositionend: _ctx.handleComposition,\n        onFocus: _cache[2] || (_cache[2] = function (e) {\n          return _ctx.$emit(\"focus\", e);\n        }),\n        onBlur: _cache[3] || (_cache[3] = function (e) {\n          return _ctx.$emit(\"blur\", e);\n        }),\n        onInput: _ctx.handleInput\n      }, {\n        suffix: withCtx(function () {\n          return [_ctx.clearBtnVisible ? (openBlock(), createBlock(_component_el_icon, {\n            key: \"clear\",\n            \"class\": normalizeClass([_ctx.nsInput.e(\"icon\"), \"icon-circle-close\"]),\n            onClick: withModifiers(_ctx.handleClear, [\"stop\"])\n          }, {\n            \"default\": withCtx(function () {\n              return [createVNode(_component_circle_close)];\n            }),\n            _: 1\n          }, 8, [\"class\", \"onClick\"])) : (openBlock(), createBlock(_component_el_icon, {\n            key: \"arrow-down\",\n            \"class\": normalizeClass([_ctx.nsInput.e(\"icon\"), \"icon-arrow-down\", _ctx.nsCascader.is(\"reverse\", _ctx.popperVisible)]),\n            onClick: _cache[0] || (_cache[0] = withModifiers(function ($event) {\n              return _ctx.togglePopperVisible();\n            }, [\"stop\"]))\n          }, {\n            \"default\": withCtx(function () {\n              return [createVNode(_component_arrow_down)];\n            }),\n            _: 1\n          }, 8, [\"class\"]))];\n        }),\n        _: 1\n      }, 8, [\"modelValue\", \"placeholder\", \"readonly\", \"disabled\", \"size\", \"class\", \"onCompositionstart\", \"onCompositionupdate\", \"onCompositionend\", \"onInput\"]), _ctx.multiple ? (openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        ref: \"tagWrapper\",\n        \"class\": normalizeClass(_ctx.nsCascader.e(\"tags\"))\n      }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.presentTags, function (tag) {\n        return openBlock(), createBlock(_component_el_tag, {\n          key: tag.key,\n          type: _ctx.tagType,\n          size: _ctx.tagSize,\n          hit: tag.hitState,\n          closable: tag.closable,\n          \"disable-transitions\": \"\",\n          onClose: function onClose($event) {\n            return _ctx.deleteTag(tag);\n          }\n        }, {\n          \"default\": withCtx(function () {\n            return [tag.isCollapseTag === false ? (openBlock(), createElementBlock(\"span\", _hoisted_1, toDisplayString(tag.text), 1)) : (openBlock(), createBlock(_component_el_tooltip, {\n              key: 1,\n              teleported: false,\n              disabled: _ctx.popperVisible || !_ctx.collapseTagsTooltip,\n              \"fallback-placements\": [\"bottom\", \"top\", \"right\", \"left\"],\n              placement: \"bottom\",\n              effect: \"light\"\n            }, {\n              \"default\": withCtx(function () {\n                return [createElementVNode(\"span\", null, toDisplayString(tag.text), 1)];\n              }),\n              content: withCtx(function () {\n                return [createElementVNode(\"div\", {\n                  \"class\": normalizeClass(_ctx.nsCascader.e(\"collapse-tags\"))\n                }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.allPresentTags, function (tag2, idx) {\n                  return openBlock(), createElementBlock(\"div\", {\n                    key: idx,\n                    \"class\": normalizeClass(_ctx.nsCascader.e(\"collapse-tag\"))\n                  }, [(openBlock(), createBlock(_component_el_tag, {\n                    key: tag2.key,\n                    \"class\": \"in-tooltip\",\n                    type: _ctx.tagType,\n                    size: _ctx.tagSize,\n                    hit: tag2.hitState,\n                    closable: tag2.closable,\n                    \"disable-transitions\": \"\",\n                    onClose: function onClose($event) {\n                      return _ctx.deleteTag(tag2);\n                    }\n                  }, {\n                    \"default\": withCtx(function () {\n                      return [createElementVNode(\"span\", null, toDisplayString(tag2.text), 1)];\n                    }),\n                    _: 2\n                  }, 1032, [\"type\", \"size\", \"hit\", \"closable\", \"onClose\"]))], 2);\n                }), 128))], 2)];\n              }),\n              _: 2\n            }, 1032, [\"disabled\"]))];\n          }),\n          _: 2\n        }, 1032, [\"type\", \"size\", \"hit\", \"closable\", \"onClose\"]);\n      }), 128)), _ctx.filterable && !_ctx.isDisabled ? withDirectives((openBlock(), createElementBlock(\"input\", {\n        key: 0,\n        \"onUpdate:modelValue\": _cache[4] || (_cache[4] = function ($event) {\n          return _ctx.searchInputValue = $event;\n        }),\n        type: \"text\",\n        \"class\": normalizeClass(_ctx.nsCascader.e(\"search-input\")),\n        placeholder: _ctx.presentText ? \"\" : _ctx.inputPlaceholder,\n        onInput: _cache[5] || (_cache[5] = function (e) {\n          return _ctx.handleInput(_ctx.searchInputValue, e);\n        }),\n        onClick: _cache[6] || (_cache[6] = withModifiers(function ($event) {\n          return _ctx.togglePopperVisible(true);\n        }, [\"stop\"])),\n        onKeydown: _cache[7] || (_cache[7] = withKeys(function () {\n          return _ctx.handleDelete && _ctx.handleDelete.apply(_ctx, arguments);\n        }, [\"delete\"])),\n        onCompositionstart: _cache[8] || (_cache[8] = function () {\n          return _ctx.handleComposition && _ctx.handleComposition.apply(_ctx, arguments);\n        }),\n        onCompositionupdate: _cache[9] || (_cache[9] = function () {\n          return _ctx.handleComposition && _ctx.handleComposition.apply(_ctx, arguments);\n        }),\n        onCompositionend: _cache[10] || (_cache[10] = function () {\n          return _ctx.handleComposition && _ctx.handleComposition.apply(_ctx, arguments);\n        })\n      }, null, 42, _hoisted_2)), [[vModelText, _ctx.searchInputValue]]) : createCommentVNode(\"v-if\", true)], 2)) : createCommentVNode(\"v-if\", true)], 38)), [[_directive_clickoutside, function () {\n        return _ctx.togglePopperVisible(false);\n      }, _ctx.popperPaneRef]])];\n    }),\n    content: withCtx(function () {\n      return [withDirectives(createVNode(_component_el_cascader_panel, {\n        ref: \"panel\",\n        modelValue: _ctx.checkedValue,\n        \"onUpdate:modelValue\": _cache[15] || (_cache[15] = function ($event) {\n          return _ctx.checkedValue = $event;\n        }),\n        options: _ctx.options,\n        props: _ctx.props,\n        border: false,\n        \"render-label\": _ctx.$slots[\"default\"],\n        onExpandChange: _ctx.handleExpandChange,\n        onClose: _cache[16] || (_cache[16] = function ($event) {\n          return _ctx.$nextTick(function () {\n            return _ctx.togglePopperVisible(false);\n          });\n        })\n      }, null, 8, [\"modelValue\", \"options\", \"props\", \"render-label\", \"onExpandChange\"]), [[vShow, !_ctx.filtering]]), _ctx.filterable ? withDirectives((openBlock(), createBlock(_component_el_scrollbar, {\n        key: 0,\n        ref: \"suggestionPanel\",\n        tag: \"ul\",\n        \"class\": normalizeClass(_ctx.nsCascader.e(\"suggestion-panel\")),\n        \"view-class\": _ctx.nsCascader.e(\"suggestion-list\"),\n        onKeydown: _ctx.handleSuggestionKeyDown\n      }, {\n        \"default\": withCtx(function () {\n          return [_ctx.suggestions.length ? (openBlock(true), createElementBlock(Fragment, {\n            key: 0\n          }, renderList(_ctx.suggestions, function (item) {\n            return openBlock(), createElementBlock(\"li\", {\n              key: item.uid,\n              \"class\": normalizeClass([_ctx.nsCascader.e(\"suggestion-item\"), _ctx.nsCascader.is(\"checked\", item.checked)]),\n              tabindex: -1,\n              onClick: function onClick($event) {\n                return _ctx.handleSuggestionClick(item);\n              }\n            }, [createElementVNode(\"span\", null, toDisplayString(item.text), 1), item.checked ? (openBlock(), createBlock(_component_el_icon, {\n              key: 0\n            }, {\n              \"default\": withCtx(function () {\n                return [createVNode(_component_check)];\n              }),\n              _: 1\n            })) : createCommentVNode(\"v-if\", true)], 10, _hoisted_3);\n          }), 128)) : renderSlot(_ctx.$slots, \"empty\", {\n            key: 1\n          }, function () {\n            return [createElementVNode(\"li\", {\n              \"class\": normalizeClass(_ctx.nsCascader.e(\"empty-text\"))\n            }, toDisplayString(_ctx.t(\"el.cascader.noMatch\")), 3)];\n          })];\n        }),\n        _: 3\n      }, 8, [\"class\", \"view-class\", \"onKeydown\"])), [[vShow, _ctx.filtering]]) : createCommentVNode(\"v-if\", true)];\n    }),\n    _: 3\n  }, 8, [\"visible\", \"teleported\", \"popper-class\", \"popper-options\", \"transition\", \"onHide\"]);\n}\n\nvar Cascader = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/cascader/src/index.vue\"]]);\n\nexport { Cascader as default };","map":{"version":3,"mappings":"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","names":["DEFAULT_INPUT_HEIGHT","INPUT_HEIGHT_MAP","large","small","popperOptions","modifiers","name","enabled","phase","fn","state","modifiersData","placement","includes","arrow","x","requires","COMPONENT_NAME","_sfc_main","defineComponent","components","ElCascaderPanel","ElInput","ElTooltip","ElScrollbar","ElTag","ElIcon","CircleClose","Check","ArrowDown","directives","Clickoutside","props","CommonProps","size","type","validator","placeholder","disabled","clearable","filterable","filterMethod","node","keyword","separator","showAllLevels","collapseTags","collapseTagsTooltip","debounce","beforeFilter","popperClass","teleported","useTooltipContentProps","tagType","tagProps","validateEvent","emits","UPDATE_MODEL_EVENT","CHANGE_EVENT","setup","emit","inputInitialHeight","pressDeleteCount","useNamespace","useLocale","t","elForm","formContextKey","elFormItem","formItemContextKey","ref","isDisabled","computed","inputPlaceholder","realSize","useSize","multiple","readonly","value","searchInputValue","inputValue","checkedNodes","panel","_a","length","nodes","get","set","val","popperPaneRef","_b","togglePopperVisible","_c","visible","popperVisible","updatePopperPosition","nextTick","tooltipRef","hideSuggestionPanel","filtering","genTag","key","text","calcText","hitState","closable","isCollapseTag","deleteTag","calculatePresentTags","tags","allPresentTags","allTags","first","rest","restCount","push","presentTags","calculateSuggestions","res","tag","suggestions","focusFirstNode","suggestionPanel","firstNode","$el","querySelector","nsCascader","updateStyle","input","tagWrapper","suggestionList","tagWrapperEl","inputInner","height","getCheckedNodes","isOnComposition","e","handleSuggestionClick","handleSuggestionKeyDown","target","focusNode","lastTag","searchKeyword","isPromise","passed","handleInput","watch","immediate","onMounted","useResizeObserver","inputHover","presentText","checkedValue","tagSize","clearBtnVisible","nsInput","_hoisted_1","_hoisted_2","_hoisted_3","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","_component_circle_close","_component_el_scrollbar","_directive_clickoutside","_openBlock","transition","namespace","effect","pure","persistent","_withDirectives","b","_normalizeClass","m","is","style","onClick","onKeydown","onMouseenter","onMouseleave","_createVNode","modelValue","onCompositionend","onFocus","onBlur","onInput","suffix","_withCtx","_","_createElementBlock","hit","onClose","content","_createElementVNode","onCompositionstart","onCompositionupdate","_createCommentVNode","options","border","onExpandChange","item"],"sources":["../../../../../../packages/components/cascader/src/index.vue"],"sourcesContent":["<template>\n  <el-tooltip\n    ref=\"tooltipRef\"\n    :visible=\"popperVisible\"\n    :teleported=\"teleported\"\n    :popper-class=\"[nsCascader.e('dropdown'), popperClass]\"\n    :popper-options=\"popperOptions\"\n    :fallback-placements=\"[\n      'bottom-start',\n      'bottom',\n      'top-start',\n      'top',\n      'right',\n      'left',\n    ]\"\n    :stop-popper-mouse-event=\"false\"\n    :gpu-acceleration=\"false\"\n    placement=\"bottom-start\"\n    :transition=\"`${nsCascader.namespace.value}-zoom-in-top`\"\n    effect=\"light\"\n    pure\n    persistent\n    @hide=\"hideSuggestionPanel\"\n  >\n    <template #default>\n      <div\n        v-clickoutside:[popperPaneRef]=\"() => togglePopperVisible(false)\"\n        :class=\"[\n          nsCascader.b(),\n          nsCascader.m(realSize),\n          nsCascader.is('disabled', isDisabled),\n          $attrs.class,\n        ]\"\n        :style=\"$attrs.style\"\n        @click=\"() => togglePopperVisible(readonly ? undefined : true)\"\n        @keydown=\"handleKeyDown\"\n        @mouseenter=\"inputHover = true\"\n        @mouseleave=\"inputHover = false\"\n      >\n        <el-input\n          ref=\"input\"\n          v-model=\"inputValue\"\n          :placeholder=\"searchInputValue ? '' : inputPlaceholder\"\n          :readonly=\"readonly\"\n          :disabled=\"isDisabled\"\n          :validate-event=\"false\"\n          :size=\"realSize\"\n          :class=\"nsCascader.is('focus', popperVisible)\"\n          @compositionstart=\"handleComposition\"\n          @compositionupdate=\"handleComposition\"\n          @compositionend=\"handleComposition\"\n          @focus=\"(e) => $emit('focus', e)\"\n          @blur=\"(e) => $emit('blur', e)\"\n          @input=\"handleInput\"\n        >\n          <template #suffix>\n            <el-icon\n              v-if=\"clearBtnVisible\"\n              key=\"clear\"\n              :class=\"[nsInput.e('icon'), 'icon-circle-close']\"\n              @click.stop=\"handleClear\"\n            >\n              <circle-close />\n            </el-icon>\n            <el-icon\n              v-else\n              key=\"arrow-down\"\n              :class=\"[\n                nsInput.e('icon'),\n                'icon-arrow-down',\n                nsCascader.is('reverse', popperVisible),\n              ]\"\n              @click.stop=\"togglePopperVisible()\"\n            >\n              <arrow-down />\n            </el-icon>\n          </template>\n        </el-input>\n\n        <div v-if=\"multiple\" ref=\"tagWrapper\" :class=\"nsCascader.e('tags')\">\n          <el-tag\n            v-for=\"tag in presentTags\"\n            :key=\"tag.key\"\n            :type=\"tagType\"\n            :size=\"tagSize\"\n            :hit=\"tag.hitState\"\n            :closable=\"tag.closable\"\n            disable-transitions\n            @close=\"deleteTag(tag)\"\n          >\n            <template v-if=\"tag.isCollapseTag === false\">\n              <span>{{ tag.text }}</span>\n            </template>\n            <template v-else>\n              <el-tooltip\n                :teleported=\"false\"\n                :disabled=\"popperVisible || !collapseTagsTooltip\"\n                :fallback-placements=\"['bottom', 'top', 'right', 'left']\"\n                placement=\"bottom\"\n                effect=\"light\"\n              >\n                <template #default>\n                  <span>{{ tag.text }}</span>\n                </template>\n                <template #content>\n                  <div :class=\"nsCascader.e('collapse-tags')\">\n                    <div\n                      v-for=\"(tag2, idx) in allPresentTags\"\n                      :key=\"idx\"\n                      :class=\"nsCascader.e('collapse-tag')\"\n                    >\n                      <el-tag\n                        :key=\"tag2.key\"\n                        class=\"in-tooltip\"\n                        :type=\"tagType\"\n                        :size=\"tagSize\"\n                        :hit=\"tag2.hitState\"\n                        :closable=\"tag2.closable\"\n                        disable-transitions\n                        @close=\"deleteTag(tag2)\"\n                      >\n                        <span>{{ tag2.text }}</span>\n                      </el-tag>\n                    </div>\n                  </div>\n                </template>\n              </el-tooltip>\n            </template>\n          </el-tag>\n          <input\n            v-if=\"filterable && !isDisabled\"\n            v-model=\"searchInputValue\"\n            type=\"text\"\n            :class=\"nsCascader.e('search-input')\"\n            :placeholder=\"presentText ? '' : inputPlaceholder\"\n            @input=\"(e) => handleInput(searchInputValue, e)\"\n            @click.stop=\"togglePopperVisible(true)\"\n            @keydown.delete=\"handleDelete\"\n            @compositionstart=\"handleComposition\"\n            @compositionupdate=\"handleComposition\"\n            @compositionend=\"handleComposition\"\n          />\n        </div>\n      </div>\n    </template>\n\n    <template #content>\n      <el-cascader-panel\n        v-show=\"!filtering\"\n        ref=\"panel\"\n        v-model=\"checkedValue\"\n        :options=\"options\"\n        :props=\"props\"\n        :border=\"false\"\n        :render-label=\"$slots.default\"\n        @expand-change=\"handleExpandChange\"\n        @close=\"$nextTick(() => togglePopperVisible(false))\"\n      />\n      <el-scrollbar\n        v-if=\"filterable\"\n        v-show=\"filtering\"\n        ref=\"suggestionPanel\"\n        tag=\"ul\"\n        :class=\"nsCascader.e('suggestion-panel')\"\n        :view-class=\"nsCascader.e('suggestion-list')\"\n        @keydown=\"handleSuggestionKeyDown\"\n      >\n        <template v-if=\"suggestions.length\">\n          <li\n            v-for=\"item in suggestions\"\n            :key=\"item.uid\"\n            :class=\"[\n              nsCascader.e('suggestion-item'),\n              nsCascader.is('checked', item.checked),\n            ]\"\n            :tabindex=\"-1\"\n            @click=\"handleSuggestionClick(item)\"\n          >\n            <span>{{ item.text }}</span>\n            <el-icon v-if=\"item.checked\">\n              <check />\n            </el-icon>\n          </li>\n        </template>\n        <slot v-else name=\"empty\">\n          <li :class=\"nsCascader.e('empty-text')\">\n            {{ t('el.cascader.noMatch') }}\n          </li>\n        </slot>\n      </el-scrollbar>\n    </template>\n  </el-tooltip>\n</template>\n\n<script lang=\"ts\">\n// @ts-nocheck\nimport {\n  computed,\n  defineComponent,\n  inject,\n  nextTick,\n  onMounted,\n  ref,\n  watch,\n} from 'vue'\nimport { isPromise } from '@vue/shared'\nimport { debounce } from 'lodash-unified'\n\nimport { isClient, useResizeObserver } from '@vueuse/core'\nimport ElCascaderPanel, {\n  CommonProps,\n} from '@element-plus/components/cascader-panel'\nimport ElInput from '@element-plus/components/input'\nimport ElTooltip, {\n  useTooltipContentProps,\n} from '@element-plus/components/tooltip'\nimport ElScrollbar from '@element-plus/components/scrollbar'\nimport ElTag, { tagProps } from '@element-plus/components/tag'\nimport ElIcon from '@element-plus/components/icon'\n\nimport { formContextKey, formItemContextKey } from '@element-plus/tokens'\nimport { ClickOutside as Clickoutside } from '@element-plus/directives'\nimport { useLocale, useNamespace, useSize } from '@element-plus/hooks'\n\nimport {\n  debugWarn,\n  focusNode,\n  getSibling,\n  isKorean,\n  isValidComponentSize,\n} from '@element-plus/utils'\nimport {\n  CHANGE_EVENT,\n  EVENT_CODE,\n  UPDATE_MODEL_EVENT,\n} from '@element-plus/constants'\nimport { ArrowDown, Check, CircleClose } from '@element-plus/icons-vue'\n\nimport type { Options } from '@element-plus/components/popper'\nimport type { ComputedRef, PropType, Ref } from 'vue'\nimport type { FormContext, FormItemContext } from '@element-plus/tokens'\nimport type {\n  CascaderNode,\n  CascaderValue,\n  Tag,\n} from '@element-plus/components/cascader-panel'\nimport type { ComponentSize } from '@element-plus/constants'\n\ntype cascaderPanelType = InstanceType<typeof ElCascaderPanel>\ntype tooltipType = InstanceType<typeof ElTooltip>\ntype inputType = InstanceType<typeof ElInput>\ntype suggestionPanelType = InstanceType<typeof ElScrollbar>\n\nconst DEFAULT_INPUT_HEIGHT = 40\n\nconst INPUT_HEIGHT_MAP = {\n  large: 36,\n  default: 32,\n  small: 28,\n}\n\nconst popperOptions: Partial<Options> = {\n  modifiers: [\n    {\n      name: 'arrowPosition',\n      enabled: true,\n      phase: 'main',\n      fn: ({ state }) => {\n        const { modifiersData, placement } = state as any\n        if (['right', 'left', 'bottom', 'top'].includes(placement)) return\n        modifiersData.arrow.x = 35\n      },\n      requires: ['arrow'],\n    },\n  ],\n}\nconst COMPONENT_NAME = 'ElCascader'\nexport default defineComponent({\n  name: COMPONENT_NAME,\n\n  components: {\n    ElCascaderPanel,\n    ElInput,\n    ElTooltip,\n    ElScrollbar,\n    ElTag,\n    ElIcon,\n    CircleClose,\n    Check,\n    ArrowDown,\n  },\n\n  directives: {\n    Clickoutside,\n  },\n\n  props: {\n    ...CommonProps,\n    size: {\n      type: String as PropType<ComponentSize>,\n      validator: isValidComponentSize,\n    },\n    placeholder: {\n      type: String,\n    },\n    disabled: Boolean,\n    clearable: Boolean,\n    filterable: Boolean,\n    filterMethod: {\n      type: Function as PropType<\n        (node: CascaderNode, keyword: string) => boolean\n      >,\n      default: (node: CascaderNode, keyword: string) =>\n        node.text.includes(keyword),\n    },\n    separator: {\n      type: String,\n      default: ' / ',\n    },\n    showAllLevels: {\n      type: Boolean,\n      default: true,\n    },\n    collapseTags: Boolean,\n    collapseTagsTooltip: {\n      type: Boolean,\n      default: false,\n    },\n    debounce: {\n      type: Number,\n      default: 300,\n    },\n    beforeFilter: {\n      type: Function as PropType<(value: string) => boolean | Promise<any>>,\n      default: () => true,\n    },\n    popperClass: {\n      type: String,\n      default: '',\n    },\n    teleported: useTooltipContentProps.teleported,\n    // eslint-disable-next-line vue/require-prop-types\n    tagType: { ...tagProps.type, default: 'info' },\n    validateEvent: {\n      type: Boolean,\n      default: true,\n    },\n  },\n\n  emits: [\n    UPDATE_MODEL_EVENT,\n    CHANGE_EVENT,\n    'focus',\n    'blur',\n    'visible-change',\n    'expand-change',\n    'remove-tag',\n  ],\n\n  setup(props, { emit }) {\n    let inputInitialHeight = 0\n    let pressDeleteCount = 0\n\n    const nsCascader = useNamespace('cascader')\n    const nsInput = useNamespace('input')\n\n    const { t } = useLocale()\n    const elForm = inject(formContextKey, {} as FormContext)\n    const elFormItem = inject(formItemContextKey, {} as FormItemContext)\n\n    const tooltipRef: Ref<tooltipType | null> = ref(null)\n    const input: Ref<inputType | null> = ref(null)\n    const tagWrapper = ref(null)\n    const panel: Ref<cascaderPanelType | null> = ref(null)\n    const suggestionPanel: Ref<suggestionPanelType | null> = ref(null)\n    const popperVisible = ref(false)\n    const inputHover = ref(false)\n    const filtering = ref(false)\n    const inputValue = ref('')\n    const searchInputValue = ref('')\n    const presentTags: Ref<Tag[]> = ref([])\n    const allPresentTags: Ref<Tag[]> = ref([])\n    const suggestions: Ref<CascaderNode[]> = ref([])\n    const isOnComposition = ref(false)\n\n    const isDisabled = computed(() => props.disabled || elForm.disabled)\n    const inputPlaceholder = computed(\n      () => props.placeholder || t('el.cascader.placeholder')\n    )\n    const realSize = useSize()\n    const tagSize = computed(() =>\n      ['small'].includes(realSize.value) ? 'small' : 'default'\n    )\n    const multiple = computed(() => !!props.props.multiple)\n    const readonly = computed(() => !props.filterable || multiple.value)\n    const searchKeyword = computed(() =>\n      multiple.value ? searchInputValue.value : inputValue.value\n    )\n    const checkedNodes: ComputedRef<CascaderNode[]> = computed(\n      () => panel.value?.checkedNodes || []\n    )\n    const clearBtnVisible = computed(() => {\n      if (\n        !props.clearable ||\n        isDisabled.value ||\n        filtering.value ||\n        !inputHover.value\n      )\n        return false\n\n      return !!checkedNodes.value.length\n    })\n    const presentText = computed(() => {\n      const { showAllLevels, separator } = props\n      const nodes = checkedNodes.value\n      return nodes.length\n        ? multiple.value\n          ? ' '\n          : nodes[0].calcText(showAllLevels, separator)\n        : ''\n    })\n\n    const checkedValue = computed<CascaderValue>({\n      get() {\n        return props.modelValue as CascaderValue\n      },\n      set(val) {\n        emit(UPDATE_MODEL_EVENT, val)\n        emit(CHANGE_EVENT, val)\n        if (props.validateEvent) {\n          elFormItem.validate?.('change').catch((err) => debugWarn(err))\n        }\n      },\n    })\n\n    const popperPaneRef = computed(() => {\n      return tooltipRef.value?.popperRef?.contentRef\n    })\n\n    const togglePopperVisible = (visible?: boolean) => {\n      if (isDisabled.value) return\n\n      visible = visible ?? !popperVisible.value\n\n      if (visible !== popperVisible.value) {\n        popperVisible.value = visible\n        input.value?.input?.setAttribute('aria-expanded', `${visible}`)\n\n        if (visible) {\n          updatePopperPosition()\n          nextTick(panel.value?.scrollToExpandingNode)\n        } else if (props.filterable) {\n          const { value } = presentText\n          inputValue.value = value\n          searchInputValue.value = value\n        }\n\n        emit('visible-change', visible)\n      }\n    }\n\n    const updatePopperPosition = () => {\n      nextTick(() => {\n        tooltipRef.value?.updatePopper()\n      })\n    }\n\n    const hideSuggestionPanel = () => {\n      filtering.value = false\n    }\n\n    const genTag = (node: CascaderNode): Tag => {\n      const { showAllLevels, separator } = props\n      return {\n        node,\n        key: node.uid,\n        text: node.calcText(showAllLevels, separator),\n        hitState: false,\n        closable: !isDisabled.value && !node.isDisabled,\n        isCollapseTag: false,\n      }\n    }\n\n    const deleteTag = (tag: Tag) => {\n      const node = tag.node as CascaderNode\n      node.doCheck(false)\n      panel.value?.calculateCheckedValue()\n      emit('remove-tag', node.valueByOption)\n    }\n\n    const calculatePresentTags = () => {\n      if (!multiple.value) return\n\n      const nodes = checkedNodes.value\n      const tags: Tag[] = []\n\n      const allTags: Tag[] = []\n      nodes.forEach((node) => allTags.push(genTag(node)))\n      allPresentTags.value = allTags\n\n      if (nodes.length) {\n        const [first, ...rest] = nodes\n        const restCount = rest.length\n\n        tags.push(genTag(first))\n\n        if (restCount) {\n          if (props.collapseTags) {\n            tags.push({\n              key: -1,\n              text: `+ ${restCount}`,\n              closable: false,\n              isCollapseTag: true,\n            })\n          } else {\n            rest.forEach((node) => tags.push(genTag(node)))\n          }\n        }\n      }\n\n      presentTags.value = tags\n    }\n\n    const calculateSuggestions = () => {\n      const { filterMethod, showAllLevels, separator } = props\n      const res = panel.value\n        ?.getFlattedNodes(!props.props.checkStrictly)\n        ?.filter((node) => {\n          if (node.isDisabled) return false\n          node.calcText(showAllLevels, separator)\n          return filterMethod(node, searchKeyword.value)\n        })\n\n      if (multiple.value) {\n        presentTags.value.forEach((tag) => {\n          tag.hitState = false\n        })\n        allPresentTags.value.forEach((tag) => {\n          tag.hitState = false\n        })\n      }\n\n      filtering.value = true\n      suggestions.value = res!\n      updatePopperPosition()\n    }\n\n    const focusFirstNode = () => {\n      let firstNode!: HTMLElement\n\n      if (filtering.value && suggestionPanel.value) {\n        firstNode = suggestionPanel.value.$el.querySelector(\n          `.${nsCascader.e('suggestion-item')}`\n        )\n      } else {\n        firstNode = panel.value?.$el.querySelector(\n          `.${nsCascader.b('node')}[tabindex=\"-1\"]`\n        )\n      }\n\n      if (firstNode) {\n        firstNode.focus()\n        !filtering.value && firstNode.click()\n      }\n    }\n\n    const updateStyle = () => {\n      const inputInner = input.value?.input\n      const tagWrapperEl = tagWrapper.value\n      const suggestionPanelEl = suggestionPanel.value?.$el\n\n      if (!isClient || !inputInner) return\n\n      if (suggestionPanelEl) {\n        const suggestionList = suggestionPanelEl.querySelector(\n          `.${nsCascader.e('suggestion-list')}`\n        )\n        suggestionList.style.minWidth = `${inputInner.offsetWidth}px`\n      }\n\n      if (tagWrapperEl) {\n        const { offsetHeight } = tagWrapperEl\n        const height =\n          presentTags.value.length > 0\n            ? `${Math.max(offsetHeight + 6, inputInitialHeight)}px`\n            : `${inputInitialHeight}px`\n        inputInner.style.height = height\n        updatePopperPosition()\n      }\n    }\n\n    const getCheckedNodes = (leafOnly: boolean) => {\n      return panel.value?.getCheckedNodes(leafOnly)\n    }\n\n    const handleExpandChange = (value: CascaderValue) => {\n      updatePopperPosition()\n      emit('expand-change', value)\n    }\n\n    const handleComposition = (event: CompositionEvent) => {\n      const text = (event.target as HTMLInputElement)?.value\n      if (event.type === 'compositionend') {\n        isOnComposition.value = false\n        nextTick(() => handleInput(text))\n      } else {\n        const lastCharacter = text[text.length - 1] || ''\n        isOnComposition.value = !isKorean(lastCharacter)\n      }\n    }\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (isOnComposition.value) return\n\n      switch (e.code) {\n        case EVENT_CODE.enter:\n          togglePopperVisible()\n          break\n        case EVENT_CODE.down:\n          togglePopperVisible(true)\n          nextTick(focusFirstNode)\n          e.preventDefault()\n          break\n        case EVENT_CODE.esc:\n          if (popperVisible.value === true) {\n            e.preventDefault()\n            e.stopPropagation()\n            togglePopperVisible(false)\n          }\n          break\n        case EVENT_CODE.tab:\n          togglePopperVisible(false)\n          break\n      }\n    }\n\n    const handleClear = () => {\n      panel.value?.clearCheckedNodes()\n      togglePopperVisible(false)\n    }\n\n    const handleSuggestionClick = (node: CascaderNode) => {\n      const { checked } = node\n\n      if (multiple.value) {\n        panel.value?.handleCheckChange(node, !checked, false)\n      } else {\n        !checked && panel.value?.handleCheckChange(node, true, false)\n        togglePopperVisible(false)\n      }\n    }\n\n    const handleSuggestionKeyDown = (e: KeyboardEvent) => {\n      const target = e.target as HTMLElement\n      const { code } = e\n\n      switch (code) {\n        case EVENT_CODE.up:\n        case EVENT_CODE.down: {\n          const distance = code === EVENT_CODE.up ? -1 : 1\n          focusNode(\n            getSibling(\n              target,\n              distance,\n              `.${nsCascader.e('suggestion-item')}[tabindex=\"-1\"]`\n            )\n          )\n          break\n        }\n        case EVENT_CODE.enter:\n          target.click()\n          break\n      }\n    }\n\n    const handleDelete = () => {\n      const tags = presentTags.value\n      const lastTag = tags[tags.length - 1]\n      pressDeleteCount = searchInputValue.value ? 0 : pressDeleteCount + 1\n\n      if (!lastTag || !pressDeleteCount) return\n\n      if (lastTag.hitState) {\n        deleteTag(lastTag)\n      } else {\n        lastTag.hitState = true\n      }\n    }\n\n    const handleFilter = debounce(() => {\n      const { value } = searchKeyword\n\n      if (!value) return\n\n      const passed = props.beforeFilter(value)\n\n      if (isPromise(passed)) {\n        passed.then(calculateSuggestions).catch(() => {\n          /* prevent log error */\n        })\n      } else if (passed !== false) {\n        calculateSuggestions()\n      } else {\n        hideSuggestionPanel()\n      }\n    }, props.debounce)\n\n    const handleInput = (val: string, e?: KeyboardEvent) => {\n      !popperVisible.value && togglePopperVisible(true)\n\n      if (e?.isComposing) return\n\n      val ? handleFilter() : hideSuggestionPanel()\n    }\n\n    watch(filtering, updatePopperPosition)\n\n    watch([checkedNodes, isDisabled], calculatePresentTags)\n\n    watch(presentTags, () => {\n      nextTick(() => updateStyle())\n    })\n\n    watch(presentText, (val) => (inputValue.value = val), { immediate: true })\n\n    onMounted(() => {\n      const inputEl = input.value?.$el\n      inputInitialHeight =\n        inputEl?.offsetHeight ||\n        INPUT_HEIGHT_MAP[realSize.value] ||\n        DEFAULT_INPUT_HEIGHT\n      useResizeObserver(inputEl, updateStyle)\n    })\n\n    return {\n      popperOptions,\n      tooltipRef,\n      popperPaneRef,\n      input,\n      tagWrapper,\n      panel,\n      suggestionPanel,\n      popperVisible,\n      inputHover,\n      inputPlaceholder,\n      filtering,\n      presentText,\n      checkedValue,\n      inputValue,\n      searchInputValue,\n      presentTags,\n      allPresentTags,\n      suggestions,\n      isDisabled,\n      isOnComposition,\n      realSize,\n      tagSize,\n      multiple,\n      readonly,\n      clearBtnVisible,\n\n      nsCascader,\n      nsInput,\n      t,\n      togglePopperVisible,\n      hideSuggestionPanel,\n      deleteTag,\n      focusFirstNode,\n      getCheckedNodes,\n      handleExpandChange,\n      handleKeyDown,\n      handleComposition,\n      handleClear,\n      handleSuggestionClick,\n      handleSuggestionKeyDown,\n      handleDelete,\n      handleInput,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}