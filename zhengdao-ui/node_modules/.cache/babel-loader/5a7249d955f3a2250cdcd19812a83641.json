{"ast":null,"code":"require(\"core-js/modules/web.dom-exception.stack.js\");\n\nrequire(\"core-js/modules/es.typed-array.at.js\");\n\nrequire(\"core-js/modules/es.typed-array.set.js\");\n\nrequire(\"core-js/modules/esnext.typed-array.find-last.js\");\n\nrequire(\"core-js/modules/esnext.typed-array.find-last-index.js\");\n\n(function () {\n  function base64ToBlob(base64, mime) {\n    mime = mime || '';\n    var sliceSize = 1024;\n    var byteChars = window.atob(base64);\n    var byteArrays = [];\n\n    for (var offset = 0, len = byteChars.length; offset < len; offset += sliceSize) {\n      var slice = byteChars.slice(offset, offset + sliceSize);\n      var byteNumbers = new Array(slice.length);\n\n      for (var i = 0; i < slice.length; i++) {\n        byteNumbers[i] = slice.charCodeAt(i);\n      }\n\n      var byteArray = new Uint8Array(byteNumbers);\n      byteArrays.push(byteArray);\n    }\n\n    return new Blob(byteArrays, {\n      type: mime\n    });\n  }\n\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = base64ToBlob;\n    }\n\n    exports.base64ToBlob = base64ToBlob;\n  } else if (typeof define === 'function' && define.amd) {\n    define([], function () {\n      return base64ToBlob;\n    });\n  } else {\n    this.base64ToBlob = base64ToBlob;\n  }\n}).call(this);","map":{"version":3,"names":["base64ToBlob","base64","mime","sliceSize","byteChars","window","atob","byteArrays","offset","len","length","slice","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","push","Blob","type","exports","module","define","amd","call"],"sources":["/home/little/Documents/music_web/startproj/zhengdao-ui/node_modules/base64toblob/base64toblob.js"],"sourcesContent":["(function() {\n\n  function base64ToBlob(base64, mime) {\n    mime = mime || '';\n    var sliceSize = 1024;\n    var byteChars = window.atob(base64);\n    var byteArrays = [];\n\n    for (var offset = 0, len = byteChars.length; offset < len; offset += sliceSize) {\n      var slice = byteChars.slice(offset, offset + sliceSize);\n\n      var byteNumbers = new Array(slice.length);\n      for (var i = 0; i < slice.length; i++) {\n        byteNumbers[i] = slice.charCodeAt(i);\n      }\n\n      var byteArray = new Uint8Array(byteNumbers);\n\n      byteArrays.push(byteArray);\n    }\n\n    return new Blob(byteArrays, {type: mime});\n  }\n\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = base64ToBlob;\n    }\n    exports.base64ToBlob = base64ToBlob;\n  } else if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return base64ToBlob;\n    });\n  } else {\n    this.base64ToBlob = base64ToBlob;\n  }\n\n}).call(this);\n"],"mappings":";;;;;;;;;;AAAA,CAAC,YAAW;EAEV,SAASA,YAAT,CAAsBC,MAAtB,EAA8BC,IAA9B,EAAoC;IAClCA,IAAI,GAAGA,IAAI,IAAI,EAAf;IACA,IAAIC,SAAS,GAAG,IAAhB;IACA,IAAIC,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYL,MAAZ,CAAhB;IACA,IAAIM,UAAU,GAAG,EAAjB;;IAEA,KAAK,IAAIC,MAAM,GAAG,CAAb,EAAgBC,GAAG,GAAGL,SAAS,CAACM,MAArC,EAA6CF,MAAM,GAAGC,GAAtD,EAA2DD,MAAM,IAAIL,SAArE,EAAgF;MAC9E,IAAIQ,KAAK,GAAGP,SAAS,CAACO,KAAV,CAAgBH,MAAhB,EAAwBA,MAAM,GAAGL,SAAjC,CAAZ;MAEA,IAAIS,WAAW,GAAG,IAAIC,KAAJ,CAAUF,KAAK,CAACD,MAAhB,CAAlB;;MACA,KAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACD,MAA1B,EAAkCI,CAAC,EAAnC,EAAuC;QACrCF,WAAW,CAACE,CAAD,CAAX,GAAiBH,KAAK,CAACI,UAAN,CAAiBD,CAAjB,CAAjB;MACD;;MAED,IAAIE,SAAS,GAAG,IAAIC,UAAJ,CAAeL,WAAf,CAAhB;MAEAL,UAAU,CAACW,IAAX,CAAgBF,SAAhB;IACD;;IAED,OAAO,IAAIG,IAAJ,CAASZ,UAAT,EAAqB;MAACa,IAAI,EAAElB;IAAP,CAArB,CAAP;EACD;;EAED,IAAI,OAAOmB,OAAP,KAAmB,WAAvB,EAAoC;IAClC,IAAI,OAAOC,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACD,OAA5C,EAAqD;MACnDA,OAAO,GAAGC,MAAM,CAACD,OAAP,GAAiBrB,YAA3B;IACD;;IACDqB,OAAO,CAACrB,YAAR,GAAuBA,YAAvB;EACD,CALD,MAKO,IAAI,OAAOuB,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAA3C,EAAgD;IACrDD,MAAM,CAAC,EAAD,EAAK,YAAW;MACpB,OAAOvB,YAAP;IACD,CAFK,CAAN;EAGD,CAJM,MAIA;IACL,KAAKA,YAAL,GAAoBA,YAApB;EACD;AAEF,CArCD,EAqCGyB,IArCH,CAqCQ,IArCR"},"metadata":{},"sourceType":"script"}