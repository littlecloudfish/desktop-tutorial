{"ast":null,"code":"import _slicedToArray from \"/home/little/Documents/music_web/backandfrontsep/zhengdao-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport \"core-js/modules/es.number.parse-int.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport { ref, onMounted, onBeforeUnmount, watch } from 'vue';\nimport { useResizeObserver } from '@vueuse/core';\n\nvar useAutoResize = function useAutoResize(props) {\n  var sizer = ref();\n  var width$ = ref(0);\n  var height$ = ref(0);\n  var resizerStopper;\n  onMounted(function () {\n    resizerStopper = useResizeObserver(sizer, function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 1),\n          entry = _ref2[0];\n\n      var _entry$contentRect = entry.contentRect,\n          width = _entry$contentRect.width,\n          height = _entry$contentRect.height;\n\n      var _getComputedStyle = getComputedStyle(entry.target),\n          paddingLeft = _getComputedStyle.paddingLeft,\n          paddingRight = _getComputedStyle.paddingRight,\n          paddingTop = _getComputedStyle.paddingTop,\n          paddingBottom = _getComputedStyle.paddingBottom;\n\n      var left = Number.parseInt(paddingLeft) || 0;\n      var right = Number.parseInt(paddingRight) || 0;\n      var top = Number.parseInt(paddingTop) || 0;\n      var bottom = Number.parseInt(paddingBottom) || 0;\n      width$.value = width - left - right;\n      height$.value = height - top - bottom;\n    }).stop;\n  });\n  onBeforeUnmount(function () {\n    resizerStopper == null ? void 0 : resizerStopper();\n  });\n  watch([width$, height$], function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n        width = _ref4[0],\n        height = _ref4[1];\n\n    var _a;\n\n    (_a = props.onResize) == null ? void 0 : _a.call(props, {\n      width: width,\n      height: height\n    });\n  });\n  return {\n    sizer: sizer,\n    width: width$,\n    height: height$\n  };\n};\n\nexport { useAutoResize };","map":{"version":3,"mappings":";;;;;;AAEK,IAACA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;EAC/B,IAAMC,KAAK,GAAGC,GAAG,EAAjB;EACA,IAAMC,MAAM,GAAGD,GAAG,CAAC,CAAD,CAAlB;EACA,IAAME,OAAO,GAAGF,GAAG,CAAC,CAAD,CAAnB;EACA,IAAIG,cAAJ;EACAC,SAAS,CAAC,YAAM;IACdD,cAAc,GAAGE,iBAAiB,CAACN,KAAD,EAAQ,gBAAa;MAAA;MAAA,IAAXO,KAAW;;MACrD,yBAA0BA,KAAK,CAACC,WAAhC;MAAA,IAAQC,KAAR,sBAAQA,KAAR;MAAA,IAAeC,MAAf,sBAAeA,MAAf;;MACA,wBAAiEC,gBAAgB,CAACJ,KAAK,CAACK,MAAP,CAAjF;MAAA,IAAQC,WAAR,qBAAQA,WAAR;MAAA,IAAqBC,YAArB,qBAAqBA,YAArB;MAAA,IAAmCC,UAAnC,qBAAmCA,UAAnC;MAAA,IAA+CC,aAA/C,qBAA+CA,aAA/C;;MACA,IAAMC,IAAI,GAAGC,MAAM,CAACC,QAAP,CAAgBN,WAAhB,KAAgC,CAA7C;MACA,IAAMO,KAAK,GAAGF,MAAM,CAACC,QAAP,CAAgBL,YAAhB,KAAiC,CAA/C;MACA,IAAMO,GAAG,GAAGH,MAAM,CAACC,QAAP,CAAgBJ,UAAhB,KAA+B,CAA3C;MACA,IAAMO,MAAM,GAAGJ,MAAM,CAACC,QAAP,CAAgBH,aAAhB,KAAkC,CAAjD;MACAd,MAAM,CAACqB,KAAP,GAAed,KAAK,GAAGQ,IAAR,GAAeG,KAA9B;MACAjB,OAAO,CAACoB,KAAR,GAAgBb,MAAM,GAAGW,GAAT,GAAeC,MAA/B;IACD,CATiC,CAAjB,CASdE,IATH;EAUD,CAXQ,CAAT;EAYAC,eAAe,CAAC,YAAM;IACpBrB,cAAc,IAAI,IAAlB,GAAyB,KAAK,CAA9B,GAAkCA,cAAc,EAAhD;EACD,CAFc,CAAf;EAGAsB,KAAK,CAAC,CAACxB,MAAD,EAASC,OAAT,CAAD,EAAoB,iBAAqB;IAAA;IAAA,IAAnBM,KAAmB;IAAA,IAAZC,MAAY;;IAC5C,IAAIiB,EAAJ;;IACA,CAACA,EAAE,GAAG5B,KAAK,CAAC6B,QAAZ,KAAyB,IAAzB,GAAgC,KAAK,CAArC,GAAyCD,EAAE,CAACE,IAAH,CAAQ9B,KAAR,EAAe;MACtDU,KAAK,EAALA,KADsD;MAEtDC,MAAM,EAANA;IAFsD,CAAf,CAAzC;EAID,CANI,CAAL;EAOA,OAAO;IACLV,KAAK,EAALA,KADK;IAELS,KAAK,EAAEP,MAFF;IAGLQ,MAAM,EAAEP;EAHH,CAAP;AAKF,CAhCK","names":["useAutoResize","props","sizer","ref","width$","height$","resizerStopper","onMounted","useResizeObserver","entry","contentRect","width","height","getComputedStyle","target","paddingLeft","paddingRight","paddingTop","paddingBottom","left","Number","parseInt","right","top","bottom","value","stop","onBeforeUnmount","watch","_a","onResize","call"],"sources":["../../../../../../../packages/components/table-v2/src/composables/use-auto-resize.ts"],"sourcesContent":["import { onBeforeUnmount, onMounted, ref, watch } from 'vue'\nimport { useResizeObserver } from '@vueuse/core'\n\nimport type { AutoResizerProps } from '../auto-resizer'\n\nconst useAutoResize = (props: AutoResizerProps) => {\n  const sizer = ref<HTMLElement>()\n  const width$ = ref(0)\n  const height$ = ref(0)\n\n  let resizerStopper: ReturnType<typeof useResizeObserver>['stop']\n  onMounted(() => {\n    resizerStopper = useResizeObserver(sizer, ([entry]) => {\n      const { width, height } = entry.contentRect\n      const { paddingLeft, paddingRight, paddingTop, paddingBottom } =\n        getComputedStyle(entry.target)\n\n      const left = Number.parseInt(paddingLeft) || 0\n      const right = Number.parseInt(paddingRight) || 0\n      const top = Number.parseInt(paddingTop) || 0\n      const bottom = Number.parseInt(paddingBottom) || 0\n\n      width$.value = width - left - right\n      height$.value = height - top - bottom\n    }).stop\n  })\n\n  onBeforeUnmount(() => {\n    resizerStopper?.()\n  })\n\n  watch([width$, height$], ([width, height]) => {\n    props.onResize?.({\n      width,\n      height,\n    })\n  })\n\n  return {\n    sizer,\n    width: width$,\n    height: height$,\n  }\n}\n\nexport { useAutoResize }\n"]},"metadata":{},"sourceType":"module"}