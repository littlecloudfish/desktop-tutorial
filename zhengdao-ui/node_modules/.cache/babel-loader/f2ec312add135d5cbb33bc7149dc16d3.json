{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"post\"\n};\nvar _hoisted_2 = {\n  key: 0,\n  \"class\": \"loading\"\n};\nvar _hoisted_3 = {\n  key: 1,\n  \"class\": \"error\"\n};\nvar _hoisted_4 = {\n  key: 2,\n  \"class\": \"content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_ctx.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \"Loading...\")) : _createCommentVNode(\"v-if\", true), _ctx.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString(_ctx.error), 1\n  /* TEXT */\n  )) : _createCommentVNode(\"v-if\", true), _ctx.post ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"h2\", null, _toDisplayString(_ctx.post.title), 1\n  /* TEXT */\n  ), _createElementVNode(\"p\", null, _toDisplayString(_ctx.post.body), 1\n  /* TEXT */\n  )])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;EACO,SAAM;;;;EACW,SAAM;;;;EAER,SAAM;;;;EAEP,SAAM;;;uBALzBA,oBASM,KATN,cASM,CAROC,8BAAXD,oBAAoD,KAApD,cAAoC,YAApC,sCAQI,EANOC,4BAAXD,oBAAiD,KAAjD,cAAiDE,iBAAdD,UAAc,CAAjD,EAAwC;EAAA;EAAxC,sCAMI,EAJOA,2BAAXD,oBAGM,KAHN,cAGM,CAFJG,oBAAyB,IAAzB,EAAyB,IAAzB,EAAyBD,iBAAlBD,UAAKG,KAAa,CAAzB,EAAiB;EAAA;EAAjB,CAEI,EADJD,oBAAsB,GAAtB,EAAsB,IAAtB,EAAsBD,iBAAhBD,UAAKI,IAAW,CAAtB,EAAe;EAAA;EAAf,CACI,CAHN,sCAII,CATN","names":["_createElementBlock","_ctx","_toDisplayString","_createElementVNode","title","body"],"sourceRoot":"","sources":["/home/little/Documents/music_web/startproj/zhengdao-ui/src/views/AboutView.vue"],"sourcesContent":["<template>\n  <div class=\"post\">\n    <div v-if=\"loading\" class=\"loading\">Loading...</div>\n\n    <div v-if=\"error\" class=\"error\">{{ error }}</div>\n\n    <div v-if=\"post\" class=\"content\">\n      <h2>{{ post.title }}</h2>\n      <p>{{ post.body }}</p>\n    </div>\n  </div>\n</template>\n<script>\nexport default {\n  // inject:['musicid'],\n  data() {\n    return {\n      currentAudioName: '',\n      musicid: 5,\n      // audioList: [\n      //   {\n      //     name: 'audio1',\n      //     url: \"http://127.0.0.1:1943/enjoymusic/5\"\n      //   },\n      //   {\n      //     name: 'audio2',\n      //     url: 'http://127.0.0.1:1943/enjoymusic/6'\n      //   }\n      // ]\n      audioList:null,\n    }\n  },\n\n  methods: {\n    // Something to do before playing\n    handleBeforePlay(next) {\n      // There are a few things you can do here...\n      this.currentAudioName = this.audioList[this.$refs.audioPlayer.currentPlayIndex].name\n\n      next() // Start playing\n    }\n  },\n  created(){\n        this.$store.dispatch('music/musicinfo',this.musicid);\n        // console.log(this.musicid)\n        // console.log(...mapGetters(['MusicUserid',]))\n    },\n}\n</script>"]},"metadata":{},"sourceType":"module"}