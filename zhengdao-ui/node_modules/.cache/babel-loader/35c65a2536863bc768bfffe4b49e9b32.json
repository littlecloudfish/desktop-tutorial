{"ast":null,"code":"import _regeneratorRuntime from \"/home/little/Documents/music_web/backandfrontsep/zhengdao-ui/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/little/Documents/music_web/backandfrontsep/zhengdao-ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"/home/little/Documents/music_web/backandfrontsep/zhengdao-ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/web.timers.js\";\nimport { defineComponent, useAttrs, ref, computed, nextTick, watch, onMounted, openBlock, createElementBlock, normalizeClass, unref, normalizeStyle, mergeProps, createCommentVNode, renderSlot, createElementVNode, toDisplayString, Fragment, createBlock, withCtx } from 'vue';\nimport { isClient, useThrottleFn, useEventListener } from '@vueuse/core';\nimport '../../../hooks/index.mjs';\nimport { ElImageViewer } from '../../image-viewer/index.mjs';\nimport '../../../utils/index.mjs';\nimport { imageProps, imageEmits } from './image.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useAttrs as useAttrs$1 } from '../../../hooks/use-attrs/index.mjs';\nimport { isInContainer } from '../../../utils/dom/position.mjs';\nimport { isElement } from '../../../utils/types.mjs';\nimport { isString } from '@vue/shared';\nimport { getScrollContainer } from '../../../utils/dom/scroll.mjs';\nvar _hoisted_1 = [\"src\", \"loading\"];\nvar _hoisted_2 = {\n  key: 0\n};\nvar __default__ = {\n  name: \"ElImage\",\n  inheritAttrs: false\n};\n\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: imageProps,\n  emits: imageEmits,\n  setup: function setup(__props, _ref) {\n    var emit = _ref.emit;\n    var props = __props;\n    var prevOverflow = \"\";\n\n    var _useLocale = useLocale(),\n        t = _useLocale.t;\n\n    var ns = useNamespace(\"image\");\n    var rawAttrs = useAttrs();\n    var attrs = useAttrs$1();\n    var imageSrc = ref();\n    var hasLoadError = ref(false);\n    var isLoading = ref(true);\n    var showViewer = ref(false);\n    var container = ref();\n\n    var _scrollContainer = ref();\n\n    var supportLoading = isClient && \"loading\" in HTMLImageElement.prototype;\n    var stopScrollListener;\n    var stopWheelListener;\n    var containerStyle = computed(function () {\n      return rawAttrs.style;\n    });\n    var imageStyle = computed(function () {\n      var fit = props.fit;\n\n      if (isClient && fit) {\n        return {\n          objectFit: fit\n        };\n      }\n\n      return {};\n    });\n    var preview = computed(function () {\n      var previewSrcList = props.previewSrcList;\n      return Array.isArray(previewSrcList) && previewSrcList.length > 0;\n    });\n    var imageIndex = computed(function () {\n      var previewSrcList = props.previewSrcList,\n          initialIndex = props.initialIndex;\n      var previewIndex = initialIndex;\n\n      if (initialIndex > previewSrcList.length - 1) {\n        previewIndex = 0;\n      }\n\n      return previewIndex;\n    });\n    var isManual = computed(function () {\n      if (props.loading === \"eager\") return false;\n      return !supportLoading && props.loading === \"lazy\" || props.lazy;\n    });\n\n    var loadImage = function loadImage() {\n      if (!isClient) return;\n      isLoading.value = true;\n      hasLoadError.value = false;\n      imageSrc.value = props.src;\n    };\n\n    function handleLoad(event) {\n      isLoading.value = false;\n      hasLoadError.value = false;\n      emit(\"load\", event);\n    }\n\n    function handleError(event) {\n      isLoading.value = false;\n      hasLoadError.value = true;\n      emit(\"error\", event);\n    }\n\n    function handleLazyLoad() {\n      if (isInContainer(container.value, _scrollContainer.value)) {\n        loadImage();\n        removeLazyLoadListener();\n      }\n    }\n\n    var lazyLoadHandler = useThrottleFn(handleLazyLoad, 200);\n\n    function addLazyLoadListener() {\n      return _addLazyLoadListener.apply(this, arguments);\n    }\n\n    function _addLazyLoadListener() {\n      _addLazyLoadListener = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _a, scrollContainer;\n\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (isClient) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 2:\n                _context.next = 4;\n                return nextTick();\n\n              case 4:\n                scrollContainer = props.scrollContainer;\n\n                if (isElement(scrollContainer)) {\n                  _scrollContainer.value = scrollContainer;\n                } else if (isString(scrollContainer) && scrollContainer !== \"\") {\n                  _scrollContainer.value = (_a = document.querySelector(scrollContainer)) != null ? _a : void 0;\n                } else if (container.value) {\n                  _scrollContainer.value = getScrollContainer(container.value);\n                }\n\n                if (_scrollContainer.value) {\n                  stopScrollListener = useEventListener(_scrollContainer, \"scroll\", lazyLoadHandler);\n                  setTimeout(function () {\n                    return handleLazyLoad();\n                  }, 100);\n                }\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _addLazyLoadListener.apply(this, arguments);\n    }\n\n    function removeLazyLoadListener() {\n      if (!isClient || !_scrollContainer.value || !lazyLoadHandler) return;\n      stopScrollListener == null ? void 0 : stopScrollListener();\n      _scrollContainer.value = void 0;\n    }\n\n    function wheelHandler(e) {\n      if (!e.ctrlKey) return;\n\n      if (e.deltaY < 0) {\n        e.preventDefault();\n        return false;\n      } else if (e.deltaY > 0) {\n        e.preventDefault();\n        return false;\n      }\n    }\n\n    function clickHandler() {\n      if (!preview.value) return;\n      stopWheelListener = useEventListener(\"wheel\", wheelHandler, {\n        passive: false\n      });\n      prevOverflow = document.body.style.overflow;\n      document.body.style.overflow = \"hidden\";\n      showViewer.value = true;\n      emit(\"show\");\n    }\n\n    function closeViewer() {\n      stopWheelListener == null ? void 0 : stopWheelListener();\n      document.body.style.overflow = prevOverflow;\n      showViewer.value = false;\n      emit(\"close\");\n    }\n\n    function switchViewer(val) {\n      emit(\"switch\", val);\n    }\n\n    watch(function () {\n      return props.src;\n    }, function () {\n      if (isManual.value) {\n        isLoading.value = true;\n        hasLoadError.value = false;\n        removeLazyLoadListener();\n        addLazyLoadListener();\n      } else {\n        loadImage();\n      }\n    });\n    onMounted(function () {\n      if (isManual.value) {\n        addLazyLoadListener();\n      } else {\n        loadImage();\n      }\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createElementBlock(\"div\", {\n        ref_key: \"container\",\n        ref: container,\n        \"class\": normalizeClass([unref(ns).b(), _ctx.$attrs[\"class\"]]),\n        style: normalizeStyle(unref(containerStyle))\n      }, [imageSrc.value !== void 0 && !hasLoadError.value ? (openBlock(), createElementBlock(\"img\", mergeProps({\n        key: 0\n      }, unref(attrs), {\n        src: imageSrc.value,\n        loading: _ctx.loading,\n        style: unref(imageStyle),\n        \"class\": [unref(ns).e(\"inner\"), unref(preview) && unref(ns).e(\"preview\"), isLoading.value && unref(ns).is(\"loading\")],\n        onClick: clickHandler,\n        onLoad: handleLoad,\n        onError: handleError\n      }), null, 16, _hoisted_1)) : createCommentVNode(\"v-if\", true), isLoading.value || hasLoadError.value ? (openBlock(), createElementBlock(\"div\", {\n        key: 1,\n        \"class\": normalizeClass(unref(ns).e(\"wrapper\"))\n      }, [isLoading.value ? renderSlot(_ctx.$slots, \"placeholder\", {\n        key: 0\n      }, function () {\n        return [createElementVNode(\"div\", {\n          \"class\": normalizeClass(unref(ns).e(\"placeholder\"))\n        }, null, 2)];\n      }) : hasLoadError.value ? renderSlot(_ctx.$slots, \"error\", {\n        key: 1\n      }, function () {\n        return [createElementVNode(\"div\", {\n          \"class\": normalizeClass(unref(ns).e(\"error\"))\n        }, toDisplayString(unref(t)(\"el.image.error\")), 3)];\n      }) : createCommentVNode(\"v-if\", true)], 2)) : createCommentVNode(\"v-if\", true), unref(preview) ? (openBlock(), createElementBlock(Fragment, {\n        key: 2\n      }, [showViewer.value ? (openBlock(), createBlock(unref(ElImageViewer), {\n        key: 0,\n        \"z-index\": _ctx.zIndex,\n        \"initial-index\": unref(imageIndex),\n        infinite: _ctx.infinite,\n        \"url-list\": _ctx.previewSrcList,\n        \"hide-on-click-modal\": _ctx.hideOnClickModal,\n        teleported: _ctx.previewTeleported,\n        \"close-on-press-escape\": _ctx.closeOnPressEscape,\n        onClose: closeViewer,\n        onSwitch: switchViewer\n      }, {\n        \"default\": withCtx(function () {\n          return [_ctx.$slots.viewer ? (openBlock(), createElementBlock(\"div\", _hoisted_2, [renderSlot(_ctx.$slots, \"viewer\")])) : createCommentVNode(\"v-if\", true)];\n        }),\n        _: 3\n      }, 8, [\"z-index\", \"initial-index\", \"infinite\", \"url-list\", \"hide-on-click-modal\", \"teleported\", \"close-on-press-escape\"])) : createCommentVNode(\"v-if\", true)], 64)) : createCommentVNode(\"v-if\", true)], 6);\n    };\n  }\n}));\n\nvar Image = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/image/src/image.vue\"]]);\n\nexport { Image as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA4EA;;IAEA;IAAA;;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;;IACA;;IAEA;IACA;IACA;IAEA;MAAA;IAAA;IAEA;MACA;;MACA;QACA;UAAAA;QAAA;MACA;;MACA;IACA,CANA;IAQA;MACA;MACA;IACA,CAHA;IAKA;MACA;MAAA;MACA;;MACA;QACAC;MACA;;MACA;IACA,CAPA;IASA;MACA;MACA;IACA,CAHA;;IAKA;MACA;MAGAC;MACAC;MACAC;IACA,CAPA;;IASA;MACAF;MACAC;MACAE;IACA;;IAEA;MACAH;MACAC;MACAE;IACA;;IAEA;MACA;QACAC;QACAC;MACA;IACA;;IAEA;;aAEAC;;;;;wFAAA;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAAA,IACAC,QADA;kBAAA;kBAAA;gBAAA;;gBAAA;;cAAA;gBAAA;gBAAA,OAKAC,UALA;;cAAA;gBAMAC,eANA,GAMAC,KANA,CAMAD,eANA;;gBAOA;kBACAE;gBACA,CAFA,MAEA,aACAF,eADA,KACAA,sBADA,EACA;kBACAE;gBACA,CAHA,MAGA;kBACAA;gBAEA;;gBACA;kBAKAC;kBACAC;oBAAA;kBAAA;gBACA;;cAvBA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;;;;IA0BA;MAAA,8DAEA;MACAD;MACAD;IAEA;;IACA;MAAA,gBAEA;;MACA;QACAG;QACA;MACA,CAHA,MAGA;QACAA;QACA;MACA;IAEA;;IAEA;MAAA,oBAEA;MAAAC,iBACA;QACAC;MADA,EADA;MAMAC;MACAC;MACAC;MACAhB;IAEA;;IACA;MACAY;MACAG;MACAC;MACAhB;IAEA;;IACA;MACAA;IAGA;;IAEAiB;MAAA;IAAA;MAEA;QACApB;QACAC;QACAI;QACAC;MACA,CALA,MAKA;QACAF;MAEA;IAEA,CAZA;IAaAiB;MACA;QACAf;MACA,CAFA,MAEA;QACAF;MACA;KALA","names":["objectFit","previewIndex","isLoading","hasLoadError","imageSrc","emit","loadImage","removeLazyLoadListener","addLazyLoadListener","isClient","nextTick","scrollContainer","props","_scrollContainer","stopScrollListener","setTimeout","e","stopWheelListener","passive","prevOverflow","document","showViewer","watch","onMounted"],"sources":["../../../../../../packages/components/image/src/image.vue"],"sourcesContent":["<template>\n  <div ref=\"container\" :class=\"[ns.b(), $attrs.class]\" :style=\"containerStyle\">\n    <img\n      v-if=\"imageSrc !== undefined && !hasLoadError\"\n      v-bind=\"attrs\"\n      :src=\"imageSrc\"\n      :loading=\"loading\"\n      :style=\"imageStyle\"\n      :class=\"[\n        ns.e('inner'),\n        preview && ns.e('preview'),\n        isLoading && ns.is('loading'),\n      ]\"\n      @click=\"clickHandler\"\n      @load=\"handleLoad\"\n      @error=\"handleError\"\n    />\n    <div v-if=\"isLoading || hasLoadError\" :class=\"ns.e('wrapper')\">\n      <slot v-if=\"isLoading\" name=\"placeholder\">\n        <div :class=\"ns.e('placeholder')\" />\n      </slot>\n      <slot v-else-if=\"hasLoadError\" name=\"error\">\n        <div :class=\"ns.e('error')\">{{ t('el.image.error') }}</div>\n      </slot>\n    </div>\n    <template v-if=\"preview\">\n      <image-viewer\n        v-if=\"showViewer\"\n        :z-index=\"zIndex\"\n        :initial-index=\"imageIndex\"\n        :infinite=\"infinite\"\n        :url-list=\"previewSrcList\"\n        :hide-on-click-modal=\"hideOnClickModal\"\n        :teleported=\"previewTeleported\"\n        :close-on-press-escape=\"closeOnPressEscape\"\n        @close=\"closeViewer\"\n        @switch=\"switchViewer\"\n      >\n        <div v-if=\"$slots.viewer\">\n          <slot name=\"viewer\" />\n        </div>\n      </image-viewer>\n    </template>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport {\n  computed,\n  nextTick,\n  onMounted,\n  ref,\n  useAttrs as useRawAttrs,\n  watch,\n} from 'vue'\nimport { isClient, useEventListener, useThrottleFn } from '@vueuse/core'\nimport { useAttrs, useLocale, useNamespace } from '@element-plus/hooks'\nimport ImageViewer from '@element-plus/components/image-viewer'\nimport {\n  getScrollContainer,\n  isElement,\n  isInContainer,\n  isString,\n} from '@element-plus/utils'\nimport { imageEmits, imageProps } from './image'\n\nimport type { CSSProperties, StyleValue } from 'vue'\n\ndefineOptions({\n  name: 'ElImage',\n  inheritAttrs: false,\n})\n\nconst props = defineProps(imageProps)\nconst emit = defineEmits(imageEmits)\n\nlet prevOverflow = ''\n\nconst { t } = useLocale()\nconst ns = useNamespace('image')\nconst rawAttrs = useRawAttrs()\nconst attrs = useAttrs()\n\nconst imageSrc = ref<string | undefined>()\nconst hasLoadError = ref(false)\nconst isLoading = ref(true)\nconst showViewer = ref(false)\nconst container = ref<HTMLElement>()\nconst _scrollContainer = ref<HTMLElement | Window>()\n\nconst supportLoading = isClient && 'loading' in HTMLImageElement.prototype\nlet stopScrollListener: (() => void) | undefined\nlet stopWheelListener: (() => void) | undefined\n\nconst containerStyle = computed(() => rawAttrs.style as StyleValue)\n\nconst imageStyle = computed<CSSProperties>(() => {\n  const { fit } = props\n  if (isClient && fit) {\n    return { objectFit: fit }\n  }\n  return {}\n})\n\nconst preview = computed(() => {\n  const { previewSrcList } = props\n  return Array.isArray(previewSrcList) && previewSrcList.length > 0\n})\n\nconst imageIndex = computed(() => {\n  const { previewSrcList, initialIndex } = props\n  let previewIndex = initialIndex\n  if (initialIndex > previewSrcList.length - 1) {\n    previewIndex = 0\n  }\n  return previewIndex\n})\n\nconst isManual = computed(() => {\n  if (props.loading === 'eager') return false\n  return (!supportLoading && props.loading === 'lazy') || props.lazy\n})\n\nconst loadImage = () => {\n  if (!isClient) return\n\n  // reset status\n  isLoading.value = true\n  hasLoadError.value = false\n  imageSrc.value = props.src\n}\n\nfunction handleLoad(event: Event) {\n  isLoading.value = false\n  hasLoadError.value = false\n  emit('load', event)\n}\n\nfunction handleError(event: Event) {\n  isLoading.value = false\n  hasLoadError.value = true\n  emit('error', event)\n}\n\nfunction handleLazyLoad() {\n  if (isInContainer(container.value, _scrollContainer.value)) {\n    loadImage()\n    removeLazyLoadListener()\n  }\n}\n\nconst lazyLoadHandler = useThrottleFn(handleLazyLoad, 200)\n\nasync function addLazyLoadListener() {\n  if (!isClient) return\n\n  await nextTick()\n\n  const { scrollContainer } = props\n  if (isElement(scrollContainer)) {\n    _scrollContainer.value = scrollContainer\n  } else if (isString(scrollContainer) && scrollContainer !== '') {\n    _scrollContainer.value =\n      document.querySelector<HTMLElement>(scrollContainer) ?? undefined\n  } else if (container.value) {\n    _scrollContainer.value = getScrollContainer(container.value)\n  }\n\n  if (_scrollContainer.value) {\n    stopScrollListener = useEventListener(\n      _scrollContainer,\n      'scroll',\n      lazyLoadHandler\n    )\n    setTimeout(() => handleLazyLoad(), 100)\n  }\n}\n\nfunction removeLazyLoadListener() {\n  if (!isClient || !_scrollContainer.value || !lazyLoadHandler) return\n\n  stopScrollListener?.()\n  _scrollContainer.value = undefined\n}\n\nfunction wheelHandler(e: WheelEvent) {\n  if (!e.ctrlKey) return\n\n  if (e.deltaY < 0) {\n    e.preventDefault()\n    return false\n  } else if (e.deltaY > 0) {\n    e.preventDefault()\n    return false\n  }\n}\n\nfunction clickHandler() {\n  // don't show viewer when preview is false\n  if (!preview.value) return\n\n  stopWheelListener = useEventListener('wheel', wheelHandler, {\n    passive: false,\n  })\n\n  // prevent body scroll\n  prevOverflow = document.body.style.overflow\n  document.body.style.overflow = 'hidden'\n  showViewer.value = true\n  emit('show')\n}\n\nfunction closeViewer() {\n  stopWheelListener?.()\n  document.body.style.overflow = prevOverflow\n  showViewer.value = false\n  emit('close')\n}\n\nfunction switchViewer(val: number) {\n  emit('switch', val)\n}\n\nwatch(\n  () => props.src,\n  () => {\n    if (isManual.value) {\n      // reset status\n      isLoading.value = true\n      hasLoadError.value = false\n      removeLazyLoadListener()\n      addLazyLoadListener()\n    } else {\n      loadImage()\n    }\n  }\n)\n\nonMounted(() => {\n  if (isManual.value) {\n    addLazyLoadListener()\n  } else {\n    loadImage()\n  }\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}