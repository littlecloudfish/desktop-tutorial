{"ast":null,"code":"import _createForOfIteratorHelper from \"/home/little/Documents/music_web/startproj/zhengdao-ui/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _regeneratorRuntime from \"/home/little/Documents/music_web/startproj/zhengdao-ui/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/little/Documents/music_web/startproj/zhengdao-ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _defineProperty from \"/home/little/Documents/music_web/startproj/zhengdao-ui/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/home/little/Documents/music_web/startproj/zhengdao-ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport { defineComponent, computed, watch, provide, reactive, toRefs, openBlock, createElementBlock, normalizeClass, unref, renderSlot } from 'vue';\nimport '../../../utils/index.mjs';\nimport '../../../tokens/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { formProps, formEmits } from './form.mjs';\nimport { filterFields, useFormLabelWidth } from './utils.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useSize } from '../../../hooks/use-common-props/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { debugWarn } from '../../../utils/error.mjs';\nimport { isFunction } from '@vue/shared';\nimport { formContextKey } from '../../../tokens/form.mjs';\nvar __default__ = {\n  name: \"ElForm\"\n};\n\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: formProps,\n  emits: formEmits,\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose,\n        emit = _ref.emit;\n    var props = __props;\n    var COMPONENT_NAME = \"ElForm\";\n    var fields = [];\n    var formSize = useSize();\n    var ns = useNamespace(\"form\");\n    var formClasses = computed(function () {\n      var _ref2;\n\n      var labelPosition = props.labelPosition,\n          inline = props.inline;\n      return [ns.b(), ns.m(formSize.value || \"default\"), (_ref2 = {}, _defineProperty(_ref2, ns.m(\"label-\".concat(labelPosition)), labelPosition), _defineProperty(_ref2, ns.m(\"inline\"), inline), _ref2)];\n    });\n\n    var addField = function addField(field) {\n      fields.push(field);\n    };\n\n    var removeField = function removeField(field) {\n      if (field.prop) {\n        fields.splice(fields.indexOf(field), 1);\n      }\n    };\n\n    var resetFields = function resetFields() {\n      var properties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      if (!props.model) {\n        debugWarn(COMPONENT_NAME, \"model is required for resetFields to work.\");\n        return;\n      }\n\n      filterFields(fields, properties).forEach(function (field) {\n        return field.resetField();\n      });\n    };\n\n    var clearValidate = function clearValidate() {\n      var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      filterFields(fields, props2).forEach(function (field) {\n        return field.clearValidate();\n      });\n    };\n\n    var isValidatable = computed(function () {\n      var hasModel = !!props.model;\n\n      if (!hasModel) {\n        debugWarn(COMPONENT_NAME, \"model is required for validate to work.\");\n      }\n\n      return hasModel;\n    });\n\n    var obtainValidateFields = function obtainValidateFields(props2) {\n      if (fields.length === 0) return [];\n      var filteredFields = filterFields(fields, props2);\n\n      if (!filteredFields.length) {\n        debugWarn(COMPONENT_NAME, \"please pass correct props!\");\n        return [];\n      }\n\n      return filteredFields;\n    };\n\n    var validate = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(callback) {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", validateField(void 0, callback));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function validate(_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    var doValidateField = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var props2,\n            fields2,\n            validationErrors,\n            _iterator,\n            _step,\n            field,\n            _args2 = arguments;\n\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                props2 = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : [];\n\n                if (isValidatable.value) {\n                  _context2.next = 3;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", false);\n\n              case 3:\n                fields2 = obtainValidateFields(props2);\n\n                if (!(fields2.length === 0)) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", true);\n\n              case 6:\n                validationErrors = {};\n                _iterator = _createForOfIteratorHelper(fields2);\n                _context2.prev = 8;\n\n                _iterator.s();\n\n              case 10:\n                if ((_step = _iterator.n()).done) {\n                  _context2.next = 22;\n                  break;\n                }\n\n                field = _step.value;\n                _context2.prev = 12;\n                _context2.next = 15;\n                return field.validate(\"\");\n\n              case 15:\n                _context2.next = 20;\n                break;\n\n              case 17:\n                _context2.prev = 17;\n                _context2.t0 = _context2[\"catch\"](12);\n                validationErrors = _objectSpread(_objectSpread({}, validationErrors), _context2.t0);\n\n              case 20:\n                _context2.next = 10;\n                break;\n\n              case 22:\n                _context2.next = 27;\n                break;\n\n              case 24:\n                _context2.prev = 24;\n                _context2.t1 = _context2[\"catch\"](8);\n\n                _iterator.e(_context2.t1);\n\n              case 27:\n                _context2.prev = 27;\n\n                _iterator.f();\n\n                return _context2.finish(27);\n\n              case 30:\n                if (!(Object.keys(validationErrors).length === 0)) {\n                  _context2.next = 32;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", true);\n\n              case 32:\n                return _context2.abrupt(\"return\", Promise.reject(validationErrors));\n\n              case 33:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[8, 24, 27, 30], [12, 17]]);\n      }));\n\n      return function doValidateField() {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    var validateField = /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var modelProps,\n            callback,\n            shouldThrow,\n            result,\n            invalidFields,\n            _args3 = arguments;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                modelProps = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : [];\n                callback = _args3.length > 1 ? _args3[1] : undefined;\n                shouldThrow = !isFunction(callback);\n                _context3.prev = 3;\n                _context3.next = 6;\n                return doValidateField(modelProps);\n\n              case 6:\n                result = _context3.sent;\n\n                if (result === true) {\n                  callback == null ? void 0 : callback(result);\n                }\n\n                return _context3.abrupt(\"return\", result);\n\n              case 11:\n                _context3.prev = 11;\n                _context3.t0 = _context3[\"catch\"](3);\n                invalidFields = _context3.t0;\n\n                if (props.scrollToError) {\n                  scrollToField(Object.keys(invalidFields)[0]);\n                }\n\n                callback == null ? void 0 : callback(false, invalidFields);\n                return _context3.abrupt(\"return\", shouldThrow && Promise.reject(invalidFields));\n\n              case 17:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[3, 11]]);\n      }));\n\n      return function validateField() {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n\n    var scrollToField = function scrollToField(prop) {\n      var _a;\n\n      var field = filterFields(fields, prop)[0];\n\n      if (field) {\n        (_a = field.$el) == null ? void 0 : _a.scrollIntoView();\n      }\n    };\n\n    watch(function () {\n      return props.rules;\n    }, function () {\n      if (props.validateOnRuleChange) {\n        validate()[\"catch\"](function (err) {\n          return debugWarn(err);\n        });\n      }\n    }, {\n      deep: true\n    });\n    provide(formContextKey, reactive(_objectSpread(_objectSpread({}, toRefs(props)), {}, {\n      emit: emit,\n      resetFields: resetFields,\n      clearValidate: clearValidate,\n      validateField: validateField,\n      addField: addField,\n      removeField: removeField\n    }, useFormLabelWidth())));\n    expose({\n      validate: validate,\n      validateField: validateField,\n      resetFields: resetFields,\n      clearValidate: clearValidate,\n      scrollToField: scrollToField\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createElementBlock(\"form\", {\n        \"class\": normalizeClass(unref(formClasses))\n      }, [renderSlot(_ctx.$slots, \"default\")], 2);\n    };\n  }\n}));\n\nvar Form = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/form/src/form.vue\"]]);\n\nexport { Form as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAwBA;IAOA;IAEA;IACA;IACA;MAAA;;MACA;MAAA;MACA,QACAA,MADA,EAIAA,iCAJA,sCAMAA,oCANA,EAMAC,aANA,0BAOAD,cAPA,EAOAE,MAPA;IAUA,CAZA;;IAcA;MACAC;IACA,CAFA;;IAIA;MACA;QACAA;MACA;IACA,CAJA;;IAMA;MAAA;;MACA;QACAC;QACA;MACA;;MACAC;QAAA;MAAA;IACA,CANA;;IAQA;MAAA;MACAA;QAAA;MAAA;IACA,CAFA;;IAIA;MACA;;MACA;QACAD;MACA;;MACA;IACA,CANA;;IAQA;MACA;MAEA;;MACA;QACAA;QACA;MACA;;MACA;IACA,CATA;;IAWA;MAAA,wFACAE,QADA;QAAA;UAAA;YAAA;cAAA;gBAAA,iCAEAC,+BAFA;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;;MAAA;QAAA;MAAA;IAAA;;IAIA;MAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;;QAAA;UAAA;YAAA;cAAA;gBACAC,MADA,8DACA,EADA;;gBAAA,IAGAC,mBAHA;kBAAA;kBAAA;gBAAA;;gBAAA,kCAGA,KAHA;;cAAA;gBAKAC,OALA,GAKAC,4BALA;;gBAAA,MAMAD,oBANA;kBAAA;kBAAA;gBAAA;;gBAAA,kCAMA,IANA;;cAAA;gBAQAE,gBARA,GAQA,EARA;gBAAA,uCASAF,OATA;gBAAA;;gBAAA;;cAAA;gBAAA;kBAAA;kBAAA;gBAAA;;gBASAG,KATA;gBAAA;gBAAA;gBAAA,OAWAA,kBAXA;;cAAA;gBAAA;gBAAA;;cAAA;gBAAA;gBAAA;gBAaAD,mDACAA,gBADA;;cAbA;gBAAA;gBAAA;;cAAA;gBAAA;gBAAA;;cAAA;gBAAA;gBAAA;;gBAAA;;cAAA;gBAAA;;gBAAA;;gBAAA;;cAAA;gBAAA,MAoBAE,0CApBA;kBAAA;kBAAA;gBAAA;;gBAAA,kCAoBA,IApBA;;cAAA;gBAAA,kCAqBAC,gCArBA;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;;MAAA;QAAA;MAAA;IAAA;;IAwBA;MAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBACAC,UADA,8DACA,EADA;gBAEAV,QAFA;gBAIAW,WAJA,GAIA,qBAJA;gBAAA;gBAAA;gBAAA,OAMAC,2BANA;;cAAA;gBAMAC,MANA;;gBAQA;kBACAb;gBACA;;gBAVA,kCAWAa,MAXA;;cAAA;gBAAA;gBAAA;gBAaAC,aAbA;;gBAeA;kBACAC;gBACA;;gBACAf;gBAlBA,kCAmBAW,4CAnBA;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;;MAAA;QAAA;MAAA;IAAA;;IAuBA;MACA;;MACA;;MACA;QACA;MACA;IAGA,CARA;;IAUAK;MAAA;IAAA;MACA;QACAC;UAAA;QAAA;MAEA;IAGA,CAPA,EAOA;MAAAC;IAAA,CAPA;IAUAC,iEACAC,aADA;MAGAC,UAHA;MAIAC,wBAJA;MAKAC,4BALA;MAMAtB,4BANA;MAOAuB,kBAPA;MASAC;IATA,GAWAC,mBAXA;IAeAC;MAEAV,kBAFA;MAIAhB,4BAJA;MAMAqB,wBANA;MAQAC,4BARA;MASAR;IATA","names":["ns","labelPosition","inline","fields","debugWarn","filterFields","callback","validateField","props2","isValidatable","fields2","obtainValidateFields","validationErrors","field","Object","Promise","modelProps","shouldThrow","doValidateField","result","invalidFields","scrollToField","watch","validate","deep","provide","toRefs","emit","resetFields","clearValidate","addField","removeField","useFormLabelWidth","expose"],"sources":["../../../../../../packages/components/form/src/form.vue"],"sourcesContent":["<template>\n  <form :class=\"formClasses\">\n    <slot />\n  </form>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, provide, reactive, toRefs, watch } from 'vue'\nimport { debugWarn, isFunction } from '@element-plus/utils'\nimport { formContextKey } from '@element-plus/tokens'\nimport { useNamespace, useSize } from '@element-plus/hooks'\nimport { formEmits, formProps } from './form'\nimport { filterFields, useFormLabelWidth } from './utils'\n\nimport type { ValidateFieldsError } from 'async-validator'\nimport type { Arrayable } from '@element-plus/utils'\nimport type {\n  FormContext,\n  FormItemContext,\n  FormValidateCallback,\n  FormValidationResult,\n} from '@element-plus/tokens'\nimport type { FormItemProp } from './form-item'\n\nconst COMPONENT_NAME = 'ElForm'\ndefineOptions({\n  name: 'ElForm',\n})\nconst props = defineProps(formProps)\nconst emit = defineEmits(formEmits)\n\nconst fields: FormItemContext[] = []\n\nconst formSize = useSize()\nconst ns = useNamespace('form')\nconst formClasses = computed(() => {\n  const { labelPosition, inline } = props\n  return [\n    ns.b(),\n    // todo: in v2.2.0, we can remove default\n    // in fact, remove it doesn't affect the final style\n    ns.m(formSize.value || 'default'),\n    {\n      [ns.m(`label-${labelPosition}`)]: labelPosition,\n      [ns.m('inline')]: inline,\n    },\n  ]\n})\n\nconst addField: FormContext['addField'] = (field) => {\n  fields.push(field)\n}\n\nconst removeField: FormContext['removeField'] = (field) => {\n  if (field.prop) {\n    fields.splice(fields.indexOf(field), 1)\n  }\n}\n\nconst resetFields: FormContext['resetFields'] = (properties = []) => {\n  if (!props.model) {\n    debugWarn(COMPONENT_NAME, 'model is required for resetFields to work.')\n    return\n  }\n  filterFields(fields, properties).forEach((field) => field.resetField())\n}\n\nconst clearValidate: FormContext['clearValidate'] = (props = []) => {\n  filterFields(fields, props).forEach((field) => field.clearValidate())\n}\n\nconst isValidatable = computed(() => {\n  const hasModel = !!props.model\n  if (!hasModel) {\n    debugWarn(COMPONENT_NAME, 'model is required for validate to work.')\n  }\n  return hasModel\n})\n\nconst obtainValidateFields = (props: Arrayable<FormItemProp>) => {\n  if (fields.length === 0) return []\n\n  const filteredFields = filterFields(fields, props)\n  if (!filteredFields.length) {\n    debugWarn(COMPONENT_NAME, 'please pass correct props!')\n    return []\n  }\n  return filteredFields\n}\n\nconst validate = async (\n  callback?: FormValidateCallback\n): FormValidationResult => validateField(undefined, callback)\n\nconst doValidateField = async (\n  props: Arrayable<FormItemProp> = []\n): Promise<boolean> => {\n  if (!isValidatable.value) return false\n\n  const fields = obtainValidateFields(props)\n  if (fields.length === 0) return true\n\n  let validationErrors: ValidateFieldsError = {}\n  for (const field of fields) {\n    try {\n      await field.validate('')\n    } catch (fields) {\n      validationErrors = {\n        ...validationErrors,\n        ...(fields as ValidateFieldsError),\n      }\n    }\n  }\n\n  if (Object.keys(validationErrors).length === 0) return true\n  return Promise.reject(validationErrors)\n}\n\nconst validateField: FormContext['validateField'] = async (\n  modelProps = [],\n  callback\n) => {\n  const shouldThrow = !isFunction(callback)\n  try {\n    const result = await doValidateField(modelProps)\n    // When result is false meaning that the fields are not validatable\n    if (result === true) {\n      callback?.(result)\n    }\n    return result\n  } catch (e) {\n    const invalidFields = e as ValidateFieldsError\n\n    if (props.scrollToError) {\n      scrollToField(Object.keys(invalidFields)[0])\n    }\n    callback?.(false, invalidFields)\n    return shouldThrow && Promise.reject(invalidFields)\n  }\n}\n\nconst scrollToField = (prop: FormItemProp) => {\n  const field = filterFields(fields, prop)[0]\n  if (field) {\n    field.$el?.scrollIntoView()\n  }\n}\n\nwatch(\n  () => props.rules,\n  () => {\n    if (props.validateOnRuleChange) {\n      validate().catch((err) => debugWarn(err))\n    }\n  },\n  { deep: true }\n)\n\nprovide(\n  formContextKey,\n  reactive({\n    ...toRefs(props),\n    emit,\n\n    resetFields,\n    clearValidate,\n    validateField,\n    addField,\n    removeField,\n\n    ...useFormLabelWidth(),\n  })\n)\n\ndefineExpose({\n  /** @description validate form */\n  validate,\n  /** @description validate form field */\n  validateField,\n  /** @description reset fields */\n  resetFields,\n  /** @description clear validation status */\n  clearValidate,\n  /** @description scroll to field */\n  scrollToField,\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}