{"ast":null,"code":"import \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport { onMounted, onBeforeUnmount } from 'vue';\nimport { isClient } from '@vueuse/core';\nimport '../../constants/index.mjs';\nimport { EVENT_CODE } from '../../constants/aria.mjs';\nvar registeredEscapeHandlers = [];\n\nvar cachedHandler = function cachedHandler(e) {\n  var event = e;\n\n  if (event.key === EVENT_CODE.esc) {\n    registeredEscapeHandlers.forEach(function (registeredHandler) {\n      return registeredHandler(event);\n    });\n  }\n};\n\nvar useEscapeKeydown = function useEscapeKeydown(handler) {\n  onMounted(function () {\n    if (registeredEscapeHandlers.length === 0) {\n      document.addEventListener(\"keydown\", cachedHandler);\n    }\n\n    if (isClient) registeredEscapeHandlers.push(handler);\n  });\n  onBeforeUnmount(function () {\n    registeredEscapeHandlers = registeredEscapeHandlers.filter(function (registeredHandler) {\n      return registeredHandler !== handler;\n    });\n\n    if (registeredEscapeHandlers.length === 0) {\n      if (isClient) document.removeEventListener(\"keydown\", cachedHandler);\n    }\n  });\n};\n\nexport { useEscapeKeydown };","map":{"version":3,"mappings":";;;;;;;;AAGA,IAAIA,wBAAwB,GAAG,EAA/B;;AACA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,CAAD,EAAO;EAC3B,IAAMC,KAAK,GAAGD,CAAd;;EACA,IAAIC,KAAK,CAACC,GAAN,KAAcC,UAAU,CAACC,GAA7B,EAAkC;IAChCN,wBAAwB,CAACO,OAAzB,CAAiC,UAACC,iBAAD;MAAA,OAAuBA,iBAAiB,CAACL,KAAD,CAAxC;IAAA,CAAjC;EACD;AACF,CALD;;AAMY,IAACM,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,OAAD,EAAa;EAC3CC,SAAS,CAAC,YAAM;IACd,IAAIX,wBAAwB,CAACY,MAAzB,KAAoC,CAAxC,EAA2C;MACzCC,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCb,aAArC;IACD;;IACD,IAAIc,QAAJ,EACEf,wBAAwB,CAACgB,IAAzB,CAA8BN,OAA9B;EACH,CANQ,CAAT;EAOAO,eAAe,CAAC,YAAM;IACpBjB,wBAAwB,GAAGA,wBAAwB,CAACkB,MAAzB,CAAgC,UAACV,iBAAD;MAAA,OAAuBA,iBAAiB,KAAKE,OAA7C;IAAA,CAAhC,CAA3B;;IACA,IAAIV,wBAAwB,CAACY,MAAzB,KAAoC,CAAxC,EAA2C;MACzC,IAAIG,QAAJ,EACEF,QAAQ,CAACM,mBAAT,CAA6B,SAA7B,EAAwClB,aAAxC;IACH;EACF,CANc,CAAf;AAOF,CAfY","names":["registeredEscapeHandlers","cachedHandler","e","event","key","EVENT_CODE","esc","forEach","registeredHandler","useEscapeKeydown","handler","onMounted","length","document","addEventListener","isClient","push","onBeforeUnmount","filter","removeEventListener"],"sources":["../../../../../packages/hooks/use-escape-keydown/index.ts"],"sourcesContent":["import { onBeforeUnmount, onMounted } from 'vue'\nimport { isClient } from '@vueuse/core'\nimport { EVENT_CODE } from '@element-plus/constants'\n\nlet registeredEscapeHandlers: ((e: KeyboardEvent) => void)[] = []\n\nconst cachedHandler = (e: Event) => {\n  const event = e as KeyboardEvent\n  if (event.key === EVENT_CODE.esc) {\n    registeredEscapeHandlers.forEach((registeredHandler) =>\n      registeredHandler(event)\n    )\n  }\n}\n\nexport const useEscapeKeydown = (handler: (e: KeyboardEvent) => void) => {\n  onMounted(() => {\n    if (registeredEscapeHandlers.length === 0) {\n      document.addEventListener('keydown', cachedHandler)\n    }\n    if (isClient) registeredEscapeHandlers.push(handler)\n  })\n\n  onBeforeUnmount(() => {\n    registeredEscapeHandlers = registeredEscapeHandlers.filter(\n      (registeredHandler) => registeredHandler !== handler\n    )\n    if (registeredEscapeHandlers.length === 0) {\n      if (isClient) document.removeEventListener('keydown', cachedHandler)\n    }\n  })\n}\n"]},"metadata":{},"sourceType":"module"}