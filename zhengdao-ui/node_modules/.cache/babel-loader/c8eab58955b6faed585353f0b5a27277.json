{"ast":null,"code":"import _defineProperty from \"/home/little/Documents/music_web/startproj/zhengdao-ui/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { defineComponent, provide, getCurrentInstance, resolveComponent, openBlock, createElementBlock, normalizeClass, createBlock, withCtx, normalizeStyle, createElementVNode, toDisplayString } from 'vue';\nimport '../../../hooks/index.mjs';\nimport '../../../tokens/index.mjs';\nimport '../../virtual-list/index.mjs';\nimport { useTree } from './composables/useTree.mjs';\nimport ElTreeNode from './tree-node.mjs';\nimport { treeProps, treeEmits, ROOT_TREE_INJECTION_KEY } from './virtual-tree.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport FixedSizeList from '../../virtual-list/src/components/fixed-size-list.mjs';\nimport { formItemContextKey } from '../../../tokens/form.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\n\nvar _sfc_main = defineComponent({\n  name: \"ElTreeV2\",\n  components: {\n    ElTreeNode: ElTreeNode,\n    FixedSizeList: FixedSizeList\n  },\n  props: treeProps,\n  emits: treeEmits,\n  setup: function setup(props, ctx) {\n    provide(ROOT_TREE_INJECTION_KEY, {\n      ctx: ctx,\n      props: props,\n      instance: getCurrentInstance()\n    });\n    provide(formItemContextKey, void 0);\n\n    var _useLocale = useLocale(),\n        t = _useLocale.t;\n\n    var ns = useNamespace(\"tree\");\n\n    var _useTree = useTree(props, ctx.emit),\n        flattenTree = _useTree.flattenTree,\n        isNotEmpty = _useTree.isNotEmpty,\n        toggleExpand = _useTree.toggleExpand,\n        isExpanded = _useTree.isExpanded,\n        isIndeterminate = _useTree.isIndeterminate,\n        isChecked = _useTree.isChecked,\n        isDisabled = _useTree.isDisabled,\n        isCurrent = _useTree.isCurrent,\n        isForceHiddenExpandIcon = _useTree.isForceHiddenExpandIcon,\n        toggleCheckbox = _useTree.toggleCheckbox,\n        handleNodeClick = _useTree.handleNodeClick,\n        handleNodeCheck = _useTree.handleNodeCheck,\n        getCurrentNode = _useTree.getCurrentNode,\n        getCurrentKey = _useTree.getCurrentKey,\n        setCurrentKey = _useTree.setCurrentKey,\n        getCheckedKeys = _useTree.getCheckedKeys,\n        getCheckedNodes = _useTree.getCheckedNodes,\n        getHalfCheckedKeys = _useTree.getHalfCheckedKeys,\n        getHalfCheckedNodes = _useTree.getHalfCheckedNodes,\n        setChecked = _useTree.setChecked,\n        setCheckedKeys = _useTree.setCheckedKeys,\n        filter = _useTree.filter,\n        setData = _useTree.setData;\n\n    ctx.expose({\n      getCurrentNode: getCurrentNode,\n      getCurrentKey: getCurrentKey,\n      setCurrentKey: setCurrentKey,\n      getCheckedKeys: getCheckedKeys,\n      getCheckedNodes: getCheckedNodes,\n      getHalfCheckedKeys: getHalfCheckedKeys,\n      getHalfCheckedNodes: getHalfCheckedNodes,\n      setChecked: setChecked,\n      setCheckedKeys: setCheckedKeys,\n      filter: filter,\n      setData: setData\n    });\n    return {\n      t: t,\n      ns: ns,\n      flattenTree: flattenTree,\n      itemSize: 26,\n      isNotEmpty: isNotEmpty,\n      toggleExpand: toggleExpand,\n      toggleCheckbox: toggleCheckbox,\n      isExpanded: isExpanded,\n      isIndeterminate: isIndeterminate,\n      isChecked: isChecked,\n      isDisabled: isDisabled,\n      isCurrent: isCurrent,\n      isForceHiddenExpandIcon: isForceHiddenExpandIcon,\n      handleNodeClick: handleNodeClick,\n      handleNodeCheck: handleNodeCheck\n    };\n  }\n});\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _a;\n\n  var _component_el_tree_node = resolveComponent(\"el-tree-node\");\n\n  var _component_fixed_size_list = resolveComponent(\"fixed-size-list\");\n\n  return openBlock(), createElementBlock(\"div\", {\n    \"class\": normalizeClass([_ctx.ns.b(), _defineProperty({}, _ctx.ns.m(\"highlight-current\"), _ctx.highlightCurrent)]),\n    role: \"tree\"\n  }, [_ctx.isNotEmpty ? (openBlock(), createBlock(_component_fixed_size_list, {\n    key: 0,\n    \"class-name\": _ctx.ns.b(\"virtual-list\"),\n    data: _ctx.flattenTree,\n    total: _ctx.flattenTree.length,\n    height: _ctx.height,\n    \"item-size\": _ctx.itemSize,\n    \"perf-mode\": _ctx.perfMode\n  }, {\n    \"default\": withCtx(function (_ref2) {\n      var data = _ref2.data,\n          index = _ref2.index,\n          style = _ref2.style;\n      return [(openBlock(), createBlock(_component_el_tree_node, {\n        key: data[index].key,\n        style: normalizeStyle(style),\n        node: data[index],\n        expanded: _ctx.isExpanded(data[index]),\n        \"show-checkbox\": _ctx.showCheckbox,\n        checked: _ctx.isChecked(data[index]),\n        indeterminate: _ctx.isIndeterminate(data[index]),\n        disabled: _ctx.isDisabled(data[index]),\n        current: _ctx.isCurrent(data[index]),\n        \"hidden-expand-icon\": _ctx.isForceHiddenExpandIcon(data[index]),\n        onClick: _ctx.handleNodeClick,\n        onToggle: _ctx.toggleExpand,\n        onCheck: _ctx.handleNodeCheck\n      }, null, 8, [\"style\", \"node\", \"expanded\", \"show-checkbox\", \"checked\", \"indeterminate\", \"disabled\", \"current\", \"hidden-expand-icon\", \"onClick\", \"onToggle\", \"onCheck\"]))];\n    }),\n    _: 1\n  }, 8, [\"class-name\", \"data\", \"total\", \"height\", \"item-size\", \"perf-mode\"])) : (openBlock(), createElementBlock(\"div\", {\n    key: 1,\n    \"class\": normalizeClass(_ctx.ns.e(\"empty-block\"))\n  }, [createElementVNode(\"span\", {\n    \"class\": normalizeClass(_ctx.ns.e(\"empty-text\"))\n  }, toDisplayString((_a = _ctx.emptyText) != null ? _a : _ctx.t(\"el.tree.emptyText\")), 3)], 2))], 2);\n}\n\nvar TreeV2 = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/tree-v2/src/tree.vue\"]]);\n\nexport { TreeV2 as default };","map":{"version":3,"mappings":"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","names":["_sfc_main","defineComponent","name","components","ElTreeNode","FixedSizeList","props","emits","setup","ctx","provide","ROOT_TREE_INJECTION_KEY","instance","getCurrentInstance","formItemContextKey","useLocale","t","useNamespace","useTree","emit","flattenTree","isNotEmpty","toggleExpand","isExpanded","isIndeterminate","isChecked","isDisabled","isCurrent","isForceHiddenExpandIcon","toggleCheckbox","handleNodeClick","handleNodeCheck","getCurrentNode","getCurrentKey","setCurrentKey","getCheckedKeys","getCheckedNodes","getHalfCheckedKeys","getHalfCheckedNodes","setChecked","setCheckedKeys","filter","setData","expose","ns","itemSize","_normalizeClass","role","_openBlock","_ctx","key","data","total","height","_createBlock","style","_normalizeStyle","node","index","expanded","checked","indeterminate","disabled","current","onClick","onToggle","onCheck","_createElementVNode","_toDisplayString"],"sources":["../../../../../../packages/components/tree-v2/src/tree.vue"],"sourcesContent":["<template>\n  <div\n    :class=\"[ns.b(), { [ns.m('highlight-current')]: highlightCurrent }]\"\n    role=\"tree\"\n  >\n    <fixed-size-list\n      v-if=\"isNotEmpty\"\n      :class-name=\"ns.b('virtual-list')\"\n      :data=\"flattenTree\"\n      :total=\"flattenTree.length\"\n      :height=\"height\"\n      :item-size=\"itemSize\"\n      :perf-mode=\"perfMode\"\n    >\n      <template #default=\"{ data, index, style }\">\n        <el-tree-node\n          :key=\"data[index].key\"\n          :style=\"style\"\n          :node=\"data[index]\"\n          :expanded=\"isExpanded(data[index])\"\n          :show-checkbox=\"showCheckbox\"\n          :checked=\"isChecked(data[index])\"\n          :indeterminate=\"isIndeterminate(data[index])\"\n          :disabled=\"isDisabled(data[index])\"\n          :current=\"isCurrent(data[index])\"\n          :hidden-expand-icon=\"isForceHiddenExpandIcon(data[index])\"\n          @click=\"handleNodeClick\"\n          @toggle=\"toggleExpand\"\n          @check=\"handleNodeCheck\"\n        />\n      </template>\n    </fixed-size-list>\n    <div v-else :class=\"ns.e('empty-block')\">\n      <span :class=\"ns.e('empty-text')\">{{\n        emptyText ?? t('el.tree.emptyText')\n      }}</span>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, getCurrentInstance, provide } from 'vue'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport { formItemContextKey } from '@element-plus/tokens'\nimport { FixedSizeList } from '@element-plus/components/virtual-list'\nimport { useTree } from './composables/useTree'\nimport ElTreeNode from './tree-node.vue'\nimport { ROOT_TREE_INJECTION_KEY, treeEmits, treeProps } from './virtual-tree'\nimport type { TreeProps } from './types'\n\nexport default defineComponent({\n  name: 'ElTreeV2',\n  components: {\n    ElTreeNode,\n    FixedSizeList,\n  },\n  props: treeProps,\n  emits: treeEmits,\n  setup(props: TreeProps, ctx) {\n    provide(ROOT_TREE_INJECTION_KEY, {\n      ctx,\n      props,\n      instance: getCurrentInstance(),\n    })\n    provide(formItemContextKey, undefined)\n    const { t } = useLocale()\n    const ns = useNamespace('tree')\n    const {\n      flattenTree,\n      isNotEmpty,\n      toggleExpand,\n      isExpanded,\n      isIndeterminate,\n      isChecked,\n      isDisabled,\n      isCurrent,\n      isForceHiddenExpandIcon,\n      toggleCheckbox,\n      handleNodeClick,\n      handleNodeCheck,\n      // expose\n      getCurrentNode,\n      getCurrentKey,\n      setCurrentKey,\n      getCheckedKeys,\n      getCheckedNodes,\n      getHalfCheckedKeys,\n      getHalfCheckedNodes,\n      setChecked,\n      setCheckedKeys,\n      filter,\n      setData,\n    } = useTree(props, ctx.emit)\n\n    ctx.expose({\n      getCurrentNode,\n      getCurrentKey,\n      setCurrentKey,\n      getCheckedKeys,\n      getCheckedNodes,\n      getHalfCheckedKeys,\n      getHalfCheckedNodes,\n      setChecked,\n      setCheckedKeys,\n      filter,\n      setData,\n    })\n\n    return {\n      t,\n      ns,\n      flattenTree,\n      itemSize: 26,\n      isNotEmpty,\n      toggleExpand,\n      toggleCheckbox,\n      isExpanded,\n      isIndeterminate,\n      isChecked,\n      isDisabled,\n      isCurrent,\n      isForceHiddenExpandIcon,\n      handleNodeClick,\n      handleNodeCheck,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}