{"ast":null,"code":"import { DraggableElement, DraggableArea, StencilPreview, ResizeEvent } from 'vue-advanced-cropper';\nexport default {\n  components: {\n    StencilPreview,\n    DraggableArea,\n    DraggableElement\n  },\n  props: {\n    image: {\n      type: Object\n    },\n    coordinates: {\n      type: Object\n    },\n    transitions: {\n      type: Object\n    },\n    stencilCoordinates: {\n      type: Object\n    }\n  },\n  computed: {\n    style() {\n      const {\n        height,\n        width,\n        left,\n        top\n      } = this.stencilCoordinates;\n      const style = {\n        width: `${width}px`,\n        height: `${height}px`,\n        transform: `translate(${left}px, ${top}px)`\n      };\n\n      if (this.transitions && this.transitions.enabled) {\n        style.transition = `${this.transitions.time}ms ${this.transitions.timingFunction}`;\n      }\n\n      return style;\n    }\n\n  },\n  methods: {\n    onMove(moveEvent) {\n      this.$emit('move', moveEvent);\n    },\n\n    onMoveEnd() {\n      this.$emit('move-end');\n    },\n\n    onResize(dragEvent) {\n      const shift = dragEvent.shift();\n      const widthResize = shift.left;\n      const heightResize = -shift.top;\n      this.$emit('resize', new ResizeEvent({\n        left: widthResize,\n        right: widthResize,\n        top: heightResize,\n        bottom: heightResize\n      }, {\n        compensate: true\n      }));\n    },\n\n    onResizeEnd() {\n      this.$emit('resize-end');\n    },\n\n    aspectRatios() {\n      return {\n        minimum: 1,\n        maximum: 1\n      };\n    }\n\n  }\n};","map":{"version":3,"mappings":"AACA,SACCA,gBADD,EAECC,aAFD,EAGCC,cAHD,EAICC,WAJD,QAKO,sBALP;AAOA,eAAe;EACdC,UAAU,EAAE;IACXF,cADW;IAEXD,aAFW;IAGXD;EAHW,CADE;EAMdK,KAAK,EAAE;IACNC,KAAK,EAAE;MACNC,IAAI,EAAEC;IADA,CADD;IAINC,WAAW,EAAE;MACZF,IAAI,EAAEC;IADM,CAJP;IAONE,WAAW,EAAE;MACZH,IAAI,EAAEC;IADM,CAPP;IAUNG,kBAAkB,EAAE;MACnBJ,IAAI,EAAEC;IADa;EAVd,CANO;EAoBdI,QAAQ,EAAE;IACTC,KAAK,GAAG;MACP,MAAM;QAAEC,MAAF;QAAUC,KAAV;QAAiBC,IAAjB;QAAuBC;MAAvB,IAA+B,KAAKN,kBAA1C;MACA,MAAME,KAAI,GAAI;QACbE,KAAK,EAAG,GAAEA,KAAM,IADH;QAEbD,MAAM,EAAG,GAAEA,MAAO,IAFL;QAGbI,SAAS,EAAG,aAAYF,IAAK,OAAMC,GAAI;MAH1B,CAAd;;MAKA,IAAI,KAAKP,WAAL,IAAoB,KAAKA,WAAL,CAAiBS,OAAzC,EAAkD;QACjDN,KAAK,CAACO,UAAN,GAAoB,GAAE,KAAKV,WAAL,CAAiBW,IAAK,MAAK,KAAKX,WAAL,CAAiBY,cAAe,EAAjF;MACD;;MACA,OAAOT,KAAP;IACD;;EAZS,CApBI;EAkCdU,OAAO,EAAE;IACRC,MAAM,CAACC,SAAD,EAAY;MACjB,KAAKC,KAAL,CAAW,MAAX,EAAmBD,SAAnB;IACA,CAHO;;IAIRE,SAAS,GAAG;MACL,KAAKD,KAAL,CAAW,UAAX;IACA,CANC;;IAORE,QAAQ,CAACC,SAAD,EAAY;MACnB,MAAMC,KAAI,GAAID,SAAS,CAACC,KAAV,EAAd;MAEA,MAAMC,WAAU,GAAID,KAAK,CAACd,IAA1B;MACA,MAAMgB,YAAW,GAAI,CAACF,KAAK,CAACb,GAA5B;MAEA,KAAKS,KAAL,CAAW,QAAX,EAAqB,IAAIvB,WAAJ,CACpB;QACCa,IAAI,EAAEe,WADP;QAECE,KAAK,EAAEF,WAFR;QAGCd,GAAG,EAAEe,YAHN;QAICE,MAAM,EAAEF;MAJT,CADoB,EAOpB;QACCG,UAAU,EAAE;MADb,CAPoB,CAArB;IAWA,CAxBO;;IAyBRC,WAAW,GAAG;MACP,KAAKV,KAAL,CAAW,YAAX;IACA,CA3BC;;IA4BRW,YAAY,GAAG;MACd,OAAO;QACNC,OAAO,EAAE,CADH;QAENC,OAAO,EAAE;MAFH,CAAP;IAID;;EAjCQ;AAlCK,CAAf","names":["DraggableElement","DraggableArea","StencilPreview","ResizeEvent","components","props","image","type","Object","coordinates","transitions","stencilCoordinates","computed","style","height","width","left","top","transform","enabled","transition","time","timingFunction","methods","onMove","moveEvent","$emit","onMoveEnd","onResize","dragEvent","shift","widthResize","heightResize","right","bottom","compensate","onResizeEnd","aspectRatios","minimum","maximum"],"sourceRoot":"","sources":["/home/little/Documents/music_web/startproj/zhengdao-ui/src/views/Music/MusicSearch.vue"],"sourcesContent":["<script>\nimport {\n\tDraggableElement,\n\tDraggableArea,\n\tStencilPreview,\n\tResizeEvent\n} from 'vue-advanced-cropper';\n\nexport default {\n\tcomponents: {\n\t\tStencilPreview,\n\t\tDraggableArea,\n\t\tDraggableElement\n\t},\n\tprops: {\n\t\timage: {\n\t\t\ttype: Object\n\t\t},\n\t\tcoordinates: {\n\t\t\ttype: Object,\n\t\t},\n\t\ttransitions: {\n\t\t\ttype: Object,\n\t\t},\n\t\tstencilCoordinates: {\n\t\t\ttype: Object,\n\t\t},\n\t},\n\tcomputed: {\n\t\tstyle() {\n\t\t\tconst { height, width, left, top } = this.stencilCoordinates;\n\t\t\tconst style = {\n\t\t\t\twidth: `${width}px`,\n\t\t\t\theight: `${height}px`,\n\t\t\t\ttransform: `translate(${left}px, ${top}px)`\n\t\t\t};\n\t\t\tif (this.transitions && this.transitions.enabled) {\n\t\t\t\tstyle.transition = `${this.transitions.time}ms ${this.transitions.timingFunction}`;\n\t\t\t}\n\t\t\treturn style;\n\t\t}\n\t},\n\tmethods: {\n\t\tonMove(moveEvent) {\n\t\t\tthis.$emit('move', moveEvent);\n\t\t},\n\t\tonMoveEnd() {\n        \tthis.$emit('move-end');\n        },\n\t\tonResize(dragEvent) {\n\t\t\tconst shift = dragEvent.shift();\n\n\t\t\tconst widthResize = shift.left;\n\t\t\tconst heightResize = -shift.top;\n\n\t\t\tthis.$emit('resize', new ResizeEvent(\n\t\t\t\t{\n\t\t\t\t\tleft: widthResize,\n\t\t\t\t\tright: widthResize,\n\t\t\t\t\ttop: heightResize,\n\t\t\t\t\tbottom: heightResize,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcompensate: true,\n\t\t\t\t},\n\t\t\t));\n\t\t},\n\t\tonResizeEnd() {\n        \tthis.$emit('resize-end');\n        },\n\t\taspectRatios() {\n\t\t\treturn {\n\t\t\t\tminimum: 1,\n\t\t\t\tmaximum: 1\n\t\t\t};\n\t\t}\n\t}\n};\n</script>\n\n<template>\n  <div\n    class=\"circle-stencil\"\n    :style=\"style\"\n  >\n    <draggable-element\n      class=\"circle-stencil__handler\"\n      @drag=\"onResize\"\n      @drag-end=\"onResizeEnd\"\n    >\n\t\t<img :src=\"require('./assets/handler.svg')\" @mousedown.prevent>\n    </draggable-element>\n    <draggable-area @move=\"onMove\" @move-end=\"onMoveEnd\">\n      <stencil-preview\n        class=\"circle-stencil__preview\"\n\t\t:image=\"image\"\n\t\t:coordinates=\"coordinates\"\n\t\t:width=\"stencilCoordinates.width\"\n\t\t:height=\"stencilCoordinates.height\"\n\t\t:transitions=\"transitions\"\n      />\n    </draggable-area>\n  </div>\n</template>\n\n<style lang=\"scss\">\n.circle-stencil {\n  border-radius: 50%;\n  cursor: move;\n  position: absolute;\n  border: dashed 2px white;\n  box-sizing: border-box;\n  &__handler {\n    position: absolute;\n    right: 15%;\n    top: 14%;\n    z-index: 1;\n    cursor: ne-resize;\n    width: 30px;\n    height: 30px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transform: translate(50%, -50%);\n  }\n  &__preview {\n    border-radius: 50%;\n    overflow: hidden;\n  }\n}\n</style>"]},"metadata":{},"sourceType":"module"}