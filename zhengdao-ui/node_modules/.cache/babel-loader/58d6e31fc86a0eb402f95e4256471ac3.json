{"ast":null,"code":"import { NOOP } from '@vue/shared';\n\nvar useSameTarget = function useSameTarget(handleClick) {\n  if (!handleClick) {\n    return {\n      onClick: NOOP,\n      onMousedown: NOOP,\n      onMouseup: NOOP\n    };\n  }\n\n  var mousedownTarget = false;\n  var mouseupTarget = false;\n\n  var onClick = function onClick(e) {\n    if (mousedownTarget && mouseupTarget) {\n      handleClick(e);\n    }\n\n    mousedownTarget = mouseupTarget = false;\n  };\n\n  var onMousedown = function onMousedown(e) {\n    mousedownTarget = e.target === e.currentTarget;\n  };\n\n  var onMouseup = function onMouseup(e) {\n    mouseupTarget = e.target === e.currentTarget;\n  };\n\n  return {\n    onClick: onClick,\n    onMousedown: onMousedown,\n    onMouseup: onMouseup\n  };\n};\n\nexport { useSameTarget };","map":{"version":3,"mappings":";;AACY,IAACA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,WAAD,EAAiB;EAC5C,IAAI,CAACA,WAAL,EAAkB;IAChB,OAAO;MAAEC,OAAO,EAAEC,IAAX;MAAiBC,WAAW,EAAED,IAA9B;MAAoCE,SAAS,EAAEF;IAA/C,CAAP;EACD;;EACD,IAAIG,eAAe,GAAG,KAAtB;EACA,IAAIC,aAAa,GAAG,KAApB;;EACA,IAAML,OAAO,GAAG,SAAVA,OAAU,CAACM,CAAD,EAAO;IACrB,IAAIF,eAAe,IAAIC,aAAvB,EAAsC;MACpCN,WAAW,CAACO,CAAD,CAAX;IACD;;IACDF,eAAe,GAAGC,aAAa,GAAG,KAAlC;EACD,CALD;;EAMA,IAAMH,WAAW,GAAG,SAAdA,WAAc,CAACI,CAAD,EAAO;IACzBF,eAAe,GAAGE,CAAC,CAACC,MAAF,KAAaD,CAAC,CAACE,aAAjC;EACD,CAFD;;EAGA,IAAML,SAAS,GAAG,SAAZA,SAAY,CAACG,CAAD,EAAO;IACvBD,aAAa,GAAGC,CAAC,CAACC,MAAF,KAAaD,CAAC,CAACE,aAA/B;EACD,CAFD;;EAGA,OAAO;IAAER,OAAO,EAAPA,OAAF;IAAWE,WAAW,EAAXA,WAAX;IAAwBC,SAAS,EAATA;EAAxB,CAAP;AACF,CAnBY","names":["useSameTarget","handleClick","onClick","NOOP","onMousedown","onMouseup","mousedownTarget","mouseupTarget","e","target","currentTarget"],"sources":["../../../../../packages/hooks/use-same-target/index.ts"],"sourcesContent":["import { NOOP } from '@vue/shared'\n\nexport const useSameTarget = (handleClick?: (e: MouseEvent) => void) => {\n  if (!handleClick) {\n    return { onClick: NOOP, onMousedown: NOOP, onMouseup: NOOP }\n  }\n\n  let mousedownTarget = false\n  let mouseupTarget = false\n  // refer to this https://javascript.info/mouse-events-basics\n  // events fired in the order: mousedown -> mouseup -> click\n  // we need to set the mousedown handle to false after click fired.\n  const onClick = (e: MouseEvent) => {\n    // if and only if\n    if (mousedownTarget && mouseupTarget) {\n      handleClick(e)\n    }\n    mousedownTarget = mouseupTarget = false\n  }\n\n  const onMousedown = (e: MouseEvent) => {\n    // marking current mousedown target.\n    mousedownTarget = e.target === e.currentTarget\n  }\n  const onMouseup = (e: MouseEvent) => {\n    // marking current mouseup target.\n    mouseupTarget = e.target === e.currentTarget\n  }\n\n  return { onClick, onMousedown, onMouseup }\n}\n"]},"metadata":{},"sourceType":"module"}