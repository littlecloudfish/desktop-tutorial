{"ast":null,"code":"import _toConsumableArray from \"/home/little/Documents/music_web/startproj/zhengdao-ui/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.number.is-nan.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.number.parse-float.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport { defineComponent, h } from 'vue';\nimport '../../../../hooks/index.mjs';\nimport { hColgroup } from '../h-helper.mjs';\nimport useStyle from './style-helper.mjs';\nimport { useNamespace } from '../../../../hooks/use-namespace/index.mjs';\nvar TableFooter = defineComponent({\n  name: \"ElTableFooter\",\n  props: {\n    fixed: {\n      type: String,\n      \"default\": \"\"\n    },\n    store: {\n      required: true,\n      type: Object\n    },\n    summaryMethod: Function,\n    sumText: String,\n    border: Boolean,\n    defaultSort: {\n      type: Object,\n      \"default\": function _default() {\n        return {\n          prop: \"\",\n          order: \"\"\n        };\n      }\n    }\n  },\n  setup: function setup(props) {\n    var _useStyle = useStyle(props),\n        getCellClasses = _useStyle.getCellClasses,\n        getCellStyles = _useStyle.getCellStyles,\n        columns = _useStyle.columns;\n\n    var ns = useNamespace(\"table\");\n    return {\n      ns: ns,\n      getCellClasses: getCellClasses,\n      getCellStyles: getCellStyles,\n      columns: columns\n    };\n  },\n  render: function render() {\n    var columns = this.columns,\n        getCellStyles = this.getCellStyles,\n        getCellClasses = this.getCellClasses,\n        summaryMethod = this.summaryMethod,\n        sumText = this.sumText,\n        ns = this.ns;\n    var data = this.store.states.data.value;\n    var sums = [];\n\n    if (summaryMethod) {\n      sums = summaryMethod({\n        columns: columns,\n        data: data\n      });\n    } else {\n      columns.forEach(function (column, index) {\n        if (index === 0) {\n          sums[index] = sumText;\n          return;\n        }\n\n        var values = data.map(function (item) {\n          return Number(item[column.property]);\n        });\n        var precisions = [];\n        var notNumber = true;\n        values.forEach(function (value) {\n          if (!Number.isNaN(+value)) {\n            notNumber = false;\n            var decimal = \"\".concat(value).split(\".\")[1];\n            precisions.push(decimal ? decimal.length : 0);\n          }\n        });\n        var precision = Math.max.apply(null, precisions);\n\n        if (!notNumber) {\n          sums[index] = values.reduce(function (prev, curr) {\n            var value = Number(curr);\n\n            if (!Number.isNaN(+value)) {\n              return Number.parseFloat((prev + curr).toFixed(Math.min(precision, 20)));\n            } else {\n              return prev;\n            }\n          }, 0);\n        } else {\n          sums[index] = \"\";\n        }\n      });\n    }\n\n    return h(\"table\", {\n      \"class\": ns.e(\"footer\"),\n      cellspacing: \"0\",\n      cellpadding: \"0\",\n      border: \"0\"\n    }, [hColgroup({\n      columns: columns\n    }), h(\"tbody\", [h(\"tr\", {}, _toConsumableArray(columns.map(function (column, cellIndex) {\n      return h(\"td\", {\n        key: cellIndex,\n        colspan: column.colSpan,\n        rowspan: column.rowSpan,\n        \"class\": getCellClasses(columns, cellIndex),\n        style: getCellStyles(column, cellIndex)\n      }, [h(\"div\", {\n        \"class\": [\"cell\", column.labelClassName]\n      }, [sums[cellIndex]])]);\n    })))])]);\n  }\n});\nexport { TableFooter as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;AAIA,kBAAeA,eAAe,CAAC;EAC7BC,IAAI,EAAE,eADuB;EAE7BC,KAAK,EAAE;IACLC,KAAK,EAAE;MACLC,IAAI,EAAEC,MADD;MAEL,WAAS;IAFJ,CADF;IAKLC,KAAK,EAAE;MACLC,QAAQ,EAAE,IADL;MAELH,IAAI,EAAEI;IAFD,CALF;IASLC,aAAa,EAAEC,QATV;IAULC,OAAO,EAAEN,MAVJ;IAWLO,MAAM,EAAEC,OAXH;IAYLC,WAAW,EAAE;MACXV,IAAI,EAAEI,MADK;MAEX,WAAS,oBAAM;QACb,OAAO;UACLO,IAAI,EAAE,EADD;UAELC,KAAK,EAAE;QAFF,CAAP;MAID;IAPU;EAZR,CAFsB;EAwB7BC,KAxB6B,iBAwBvBf,KAxBuB,EAwBhB;IACX,gBAAmDgB,QAAQ,CAAChB,KAAD,CAA3D;IAAA,IAAQiB,cAAR,aAAQA,cAAR;IAAA,IAAwBC,aAAxB,aAAwBA,aAAxB;IAAA,IAAuCC,OAAvC,aAAuCA,OAAvC;;IACA,IAAMC,EAAE,GAAGC,YAAY,CAAC,OAAD,CAAvB;IACA,OAAO;MACLD,EAAE,EAAFA,EADK;MAELH,cAAc,EAAdA,cAFK;MAGLC,aAAa,EAAbA,aAHK;MAILC,OAAO,EAAPA;IAJK,CAAP;EAMD,CAjC4B;EAkC7BG,MAlC6B,oBAkCpB;IACP,IACEH,OADF,GAOI,IAPJ,CACEA,OADF;IAAA,IAEED,aAFF,GAOI,IAPJ,CAEEA,aAFF;IAAA,IAGED,cAHF,GAOI,IAPJ,CAGEA,cAHF;IAAA,IAIEV,aAJF,GAOI,IAPJ,CAIEA,aAJF;IAAA,IAKEE,OALF,GAOI,IAPJ,CAKEA,OALF;IAAA,IAMEW,EANF,GAOI,IAPJ,CAMEA,EANF;IAQA,IAAMG,IAAI,GAAG,KAAKnB,KAAL,CAAWoB,MAAX,CAAkBD,IAAlB,CAAuBE,KAApC;IACA,IAAIC,IAAI,GAAG,EAAX;;IACA,IAAInB,aAAJ,EAAmB;MACjBmB,IAAI,GAAGnB,aAAa,CAAC;QACnBY,OAAO,EAAPA,OADmB;QAEnBI,IAAI,EAAJA;MAFmB,CAAD,CAApB;IAID,CALD,MAKO;MACLJ,OAAO,CAACQ,OAAR,CAAgB,UAACC,MAAD,EAASC,KAAT,EAAmB;QACjC,IAAIA,KAAK,KAAK,CAAd,EAAiB;UACfH,IAAI,CAACG,KAAD,CAAJ,GAAcpB,OAAd;UACA;QACD;;QACD,IAAMqB,MAAM,GAAGP,IAAI,CAACQ,GAAL,CAAS,UAACC,IAAD;UAAA,OAAUC,MAAM,CAACD,IAAI,CAACJ,MAAM,CAACM,QAAR,CAAL,CAAhB;QAAA,CAAT,CAAf;QACA,IAAMC,UAAU,GAAG,EAAnB;QACA,IAAIC,SAAS,GAAG,IAAhB;QACAN,MAAM,CAACH,OAAP,CAAe,UAACF,KAAD,EAAW;UACxB,IAAI,CAACQ,MAAM,CAACI,KAAP,CAAa,CAACZ,KAAd,CAAL,EAA2B;YACzBW,SAAS,GAAG,KAAZ;YACA,IAAME,OAAO,GAAG,UAAGb,KAAH,EAAWc,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,CAAhB;YACAJ,UAAU,CAACK,IAAX,CAAgBF,OAAO,GAAGA,OAAO,CAACG,MAAX,GAAoB,CAA3C;UACD;QACF,CAND;QAOA,IAAMC,SAAS,GAAGC,IAAI,CAACC,GAAL,CAASC,KAAT,CAAe,IAAf,EAAqBV,UAArB,CAAlB;;QACA,IAAI,CAACC,SAAL,EAAgB;UACdV,IAAI,CAACG,KAAD,CAAJ,GAAcC,MAAM,CAACgB,MAAP,CAAc,UAACC,IAAD,EAAOC,IAAP,EAAgB;YAC1C,IAAMvB,KAAK,GAAGQ,MAAM,CAACe,IAAD,CAApB;;YACA,IAAI,CAACf,MAAM,CAACI,KAAP,CAAa,CAACZ,KAAd,CAAL,EAA2B;cACzB,OAAOQ,MAAM,CAACgB,UAAP,CAAkB,CAACF,IAAI,GAAGC,IAAR,EAAcE,OAAd,CAAsBP,IAAI,CAACQ,GAAL,CAAST,SAAT,EAAoB,EAApB,CAAtB,CAAlB,CAAP;YACD,CAFD,MAEO;cACL,OAAOK,IAAP;YACD;UACF,CAPa,EAOX,CAPW,CAAd;QAQD,CATD,MASO;UACLrB,IAAI,CAACG,KAAD,CAAJ,GAAc,EAAd;QACD;MACF,CA5BD;IA6BD;;IACD,OAAOuB,CAAC,CAAC,OAAD,EAAU;MAChB,SAAOhC,EAAE,CAACiC,CAAH,CAAK,QAAL,CADS;MAEhBC,WAAW,EAAE,GAFG;MAGhBC,WAAW,EAAE,GAHG;MAIhB7C,MAAM,EAAE;IAJQ,CAAV,EAKL,CACD8C,SAAS,CAAC;MACRrC,OAAO,EAAPA;IADQ,CAAD,CADR,EAIDiC,CAAC,CAAC,OAAD,EAAU,CACTA,CAAC,CAAC,IAAD,EAAO,EAAP,qBACIjC,OAAO,CAACY,GAAR,CAAY,UAACH,MAAD,EAAS6B,SAAT;MAAA,OAAuBL,CAAC,CAAC,IAAD,EAAO;QAC5CM,GAAG,EAAED,SADuC;QAE5CE,OAAO,EAAE/B,MAAM,CAACgC,OAF4B;QAG5CC,OAAO,EAAEjC,MAAM,CAACkC,OAH4B;QAI5C,SAAO7C,cAAc,CAACE,OAAD,EAAUsC,SAAV,CAJuB;QAK5CM,KAAK,EAAE7C,aAAa,CAACU,MAAD,EAAS6B,SAAT;MALwB,CAAP,EAMpC,CACDL,CAAC,CAAC,KAAD,EAAQ;QACP,SAAO,CAAC,MAAD,EAASxB,MAAM,CAACoC,cAAhB;MADA,CAAR,EAEE,CAACtC,IAAI,CAAC+B,SAAD,CAAL,CAFF,CADA,CANoC,CAAxB;IAAA,CAAZ,CADJ,EADQ,CAAV,CAJA,CALK,CAAR;EAyBD;AA1G4B,CAAD,CAA9B","names":["defineComponent","name","props","fixed","type","String","store","required","Object","summaryMethod","Function","sumText","border","Boolean","defaultSort","prop","order","setup","useStyle","getCellClasses","getCellStyles","columns","ns","useNamespace","render","data","states","value","sums","forEach","column","index","values","map","item","Number","property","precisions","notNumber","isNaN","decimal","split","push","length","precision","Math","max","apply","reduce","prev","curr","parseFloat","toFixed","min","h","e","cellspacing","cellpadding","hColgroup","cellIndex","key","colspan","colSpan","rowspan","rowSpan","style","labelClassName"],"sources":["../../../../../../../packages/components/table/src/table-footer/index.ts"],"sourcesContent":["// @ts-nocheck\nimport { defineComponent, h } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { hColgroup } from '../h-helper'\nimport useStyle from './style-helper'\nimport type { Store } from '../store'\n\nimport type { PropType } from 'vue'\nimport type { DefaultRow, Sort, SummaryMethod } from '../table/defaults'\nexport interface TableFooter<T> {\n  fixed: string\n  store: Store<T>\n  summaryMethod: SummaryMethod<T>\n  sumText: string\n  border: boolean\n  defaultSort: Sort\n}\n\nexport default defineComponent({\n  name: 'ElTableFooter',\n\n  props: {\n    fixed: {\n      type: String,\n      default: '',\n    },\n    store: {\n      required: true,\n      type: Object as PropType<TableFooter<DefaultRow>['store']>,\n    },\n    summaryMethod: Function as PropType<\n      TableFooter<DefaultRow>['summaryMethod']\n    >,\n    sumText: String,\n    border: Boolean,\n    defaultSort: {\n      type: Object as PropType<TableFooter<DefaultRow>['defaultSort']>,\n      default: () => {\n        return {\n          prop: '',\n          order: '',\n        }\n      },\n    },\n  },\n  setup(props) {\n    const { getCellClasses, getCellStyles, columns } = useStyle(\n      props as TableFooter<DefaultRow>\n    )\n    const ns = useNamespace('table')\n    return {\n      ns,\n      getCellClasses,\n      getCellStyles,\n      columns,\n    }\n  },\n  render() {\n    const {\n      columns,\n      getCellStyles,\n      getCellClasses,\n      summaryMethod,\n      sumText,\n      ns,\n    } = this\n    const data = this.store.states.data.value\n    let sums = []\n    if (summaryMethod) {\n      sums = summaryMethod({\n        columns,\n        data,\n      })\n    } else {\n      columns.forEach((column, index) => {\n        if (index === 0) {\n          sums[index] = sumText\n          return\n        }\n        const values = data.map((item) => Number(item[column.property]))\n        const precisions = []\n        let notNumber = true\n        values.forEach((value) => {\n          if (!Number.isNaN(+value)) {\n            notNumber = false\n            const decimal = `${value}`.split('.')[1]\n            precisions.push(decimal ? decimal.length : 0)\n          }\n        })\n        const precision = Math.max.apply(null, precisions)\n        if (!notNumber) {\n          sums[index] = values.reduce((prev, curr) => {\n            const value = Number(curr)\n            if (!Number.isNaN(+value)) {\n              return Number.parseFloat(\n                (prev + curr).toFixed(Math.min(precision, 20))\n              )\n            } else {\n              return prev\n            }\n          }, 0)\n        } else {\n          sums[index] = ''\n        }\n      })\n    }\n    return h(\n      'table',\n      {\n        class: ns.e('footer'),\n        cellspacing: '0',\n        cellpadding: '0',\n        border: '0',\n      },\n      [\n        hColgroup({\n          columns,\n        }),\n        h('tbody', [\n          h('tr', {}, [\n            ...columns.map((column, cellIndex) =>\n              h(\n                'td',\n                {\n                  key: cellIndex,\n                  colspan: column.colSpan,\n                  rowspan: column.rowSpan,\n                  class: getCellClasses(columns, cellIndex),\n                  style: getCellStyles(column, cellIndex),\n                },\n                [\n                  h(\n                    'div',\n                    {\n                      class: ['cell', column.labelClassName],\n                    },\n                    [sums[cellIndex]]\n                  ),\n                ]\n              )\n            ),\n          ]),\n        ]),\n      ]\n    )\n  },\n})\n"]},"metadata":{},"sourceType":"module"}