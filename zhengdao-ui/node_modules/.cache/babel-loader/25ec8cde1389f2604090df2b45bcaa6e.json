{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport { defineComponent, watch, renderSlot } from 'vue';\nimport '../../../utils/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';\nimport { useSizeProp } from '../../../hooks/use-common-props/index.mjs';\nimport { provideGlobalConfig } from '../../../hooks/use-global-config/index.mjs';\nvar messageConfig = {};\nvar configProviderProps = buildProps({\n  a11y: {\n    type: Boolean,\n    \"default\": true\n  },\n  locale: {\n    type: definePropType(Object)\n  },\n  size: useSizeProp,\n  button: {\n    type: definePropType(Object)\n  },\n  experimentalFeatures: {\n    type: definePropType(Object)\n  },\n  keyboardNavigation: {\n    type: Boolean,\n    \"default\": true\n  },\n  message: {\n    type: definePropType(Object)\n  },\n  zIndex: Number,\n  namespace: {\n    type: String,\n    \"default\": \"el\"\n  }\n});\nvar ConfigProvider = defineComponent({\n  name: \"ElConfigProvider\",\n  props: configProviderProps,\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    watch(function () {\n      return props.message;\n    }, function (val) {\n      Object.assign(messageConfig, val != null ? val : {});\n    }, {\n      immediate: true,\n      deep: true\n    });\n    var config = provideGlobalConfig(props);\n    return function () {\n      return renderSlot(slots, \"default\", {\n        config: config == null ? void 0 : config.value\n      });\n    };\n  }\n});\nexport { configProviderProps, ConfigProvider as default, messageConfig };","map":{"version":3,"mappings":";;;;;;;AAGY,IAACA,aAAa,GAAG,EAAjB;AACA,IAACC,mBAAmB,GAAGC,UAAU,CAAC;EAC5CC,IAAI,EAAE;IACJC,IAAI,EAAEC,OADF;IAEJ,WAAS;EAFL,CADsC;EAK5CC,MAAM,EAAE;IACNF,IAAI,EAAEG,cAAc,CAACC,MAAD;EADd,CALoC;EAQ5CC,IAAI,EAAEC,WARsC;EAS5CC,MAAM,EAAE;IACNP,IAAI,EAAEG,cAAc,CAACC,MAAD;EADd,CAToC;EAY5CI,oBAAoB,EAAE;IACpBR,IAAI,EAAEG,cAAc,CAACC,MAAD;EADA,CAZsB;EAe5CK,kBAAkB,EAAE;IAClBT,IAAI,EAAEC,OADY;IAElB,WAAS;EAFS,CAfwB;EAmB5CS,OAAO,EAAE;IACPV,IAAI,EAAEG,cAAc,CAACC,MAAD;EADb,CAnBmC;EAsB5CO,MAAM,EAAEC,MAtBoC;EAuB5CC,SAAS,EAAE;IACTb,IAAI,EAAEc,MADG;IAET,WAAS;EAFA;AAvBiC,CAAD,CAAjC;AA4BP,IAACC,cAAc,GAAGC,eAAe,CAAC;EACrCC,IAAI,EAAE,kBAD+B;EAErCC,KAAK,EAAErB,mBAF8B;EAGrCsB,KAHqC,iBAG/BD,KAH+B,QAGb;IAAA,IAATE,KAAS,QAATA,KAAS;IACtBC,KAAK,CAAC;MAAA,OAAMH,KAAK,CAACR,OAAZ;IAAA,CAAD,EAAsB,UAACY,GAAD,EAAS;MAClClB,MAAM,CAACmB,MAAP,CAAc3B,aAAd,EAA6B0B,GAAG,IAAI,IAAP,GAAcA,GAAd,GAAoB,EAAjD;IACD,CAFI,EAEF;MAAEE,SAAS,EAAE,IAAb;MAAmBC,IAAI,EAAE;IAAzB,CAFE,CAAL;IAGA,IAAMC,MAAM,GAAGC,mBAAmB,CAACT,KAAD,CAAlC;IACA,OAAO;MAAA,OAAMU,UAAU,CAACR,KAAD,EAAQ,SAAR,EAAmB;QAAEM,MAAM,EAAEA,MAAM,IAAI,IAAV,GAAiB,KAAK,CAAtB,GAA0BA,MAAM,CAACG;MAA3C,CAAnB,CAAhB;IAAA,CAAP;EACD;AAToC,CAAD,CAAjC","names":["messageConfig","configProviderProps","buildProps","a11y","type","Boolean","locale","definePropType","Object","size","useSizeProp","button","experimentalFeatures","keyboardNavigation","message","zIndex","Number","namespace","String","ConfigProvider","defineComponent","name","props","setup","slots","watch","val","assign","immediate","deep","config","provideGlobalConfig","renderSlot","value"],"sources":["../../../../../../packages/components/config-provider/src/config-provider.ts"],"sourcesContent":["import { defineComponent, renderSlot, watch } from 'vue'\nimport { buildProps, definePropType } from '@element-plus/utils'\nimport { provideGlobalConfig, useSizeProp } from '@element-plus/hooks'\n\nimport type { ExtractPropTypes } from 'vue'\nimport type { ExperimentalFeatures } from '@element-plus/tokens'\nimport type { Language } from '@element-plus/locale'\nimport type { ButtonConfigContext } from '@element-plus/components/button'\nimport type { MessageConfigContext } from '@element-plus/components/message'\n\nexport const messageConfig: MessageConfigContext = {}\n\nexport const configProviderProps = buildProps({\n  // Controlling if the users want a11y features.\n  a11y: {\n    type: Boolean,\n    default: true,\n  },\n\n  locale: {\n    type: definePropType<Language>(Object),\n  },\n\n  size: useSizeProp,\n\n  button: {\n    type: definePropType<ButtonConfigContext>(Object),\n  },\n\n  experimentalFeatures: {\n    type: definePropType<ExperimentalFeatures>(Object),\n  },\n\n  // Controls if we should handle keyboard navigation\n  keyboardNavigation: {\n    type: Boolean,\n    default: true,\n  },\n\n  message: {\n    type: definePropType<MessageConfigContext>(Object),\n  },\n\n  zIndex: Number,\n\n  namespace: {\n    type: String,\n    default: 'el',\n  },\n} as const)\nexport type ConfigProviderProps = ExtractPropTypes<typeof configProviderProps>\n\nconst ConfigProvider = defineComponent({\n  name: 'ElConfigProvider',\n  props: configProviderProps,\n\n  setup(props, { slots }) {\n    watch(\n      () => props.message,\n      (val) => {\n        Object.assign(messageConfig, val ?? {})\n      },\n      { immediate: true, deep: true }\n    )\n    const config = provideGlobalConfig(props)\n    return () => renderSlot(slots, 'default', { config: config?.value })\n  },\n})\nexport type ConfigProviderInstance = InstanceType<typeof ConfigProvider>\n\nexport default ConfigProvider\n"]},"metadata":{},"sourceType":"module"}