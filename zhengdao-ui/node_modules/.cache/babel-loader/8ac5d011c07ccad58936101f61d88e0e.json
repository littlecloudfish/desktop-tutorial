{"ast":null,"code":"import { isClient } from '@vueuse/core';\nvar isDragging = false;\n\nfunction draggable(element, options) {\n  if (!isClient) return;\n\n  var moveFn = function moveFn(event) {\n    var _a;\n\n    (_a = options.drag) == null ? void 0 : _a.call(options, event);\n  };\n\n  var upFn = function upFn(event) {\n    var _a;\n\n    document.removeEventListener(\"mousemove\", moveFn);\n    document.removeEventListener(\"mouseup\", upFn);\n    document.removeEventListener(\"touchmove\", moveFn);\n    document.removeEventListener(\"touchend\", upFn);\n    document.onselectstart = null;\n    document.ondragstart = null;\n    isDragging = false;\n    (_a = options.end) == null ? void 0 : _a.call(options, event);\n  };\n\n  var downFn = function downFn(event) {\n    var _a;\n\n    if (isDragging) return;\n    event.preventDefault();\n\n    document.onselectstart = function () {\n      return false;\n    };\n\n    document.ondragstart = function () {\n      return false;\n    };\n\n    document.addEventListener(\"mousemove\", moveFn);\n    document.addEventListener(\"mouseup\", upFn);\n    document.addEventListener(\"touchmove\", moveFn);\n    document.addEventListener(\"touchend\", upFn);\n    isDragging = true;\n    (_a = options.start) == null ? void 0 : _a.call(options, event);\n  };\n\n  element.addEventListener(\"mousedown\", downFn);\n  element.addEventListener(\"touchstart\", downFn);\n}\n\nexport { draggable as default };","map":{"version":3,"mappings":";AACA,IAAIA,UAAU,GAAG,KAAjB;;AACe,mBAASC,OAAT,EAAkBC,OAAlB,EAA2B;EACxC,IAAI,CAACC,QAAL,EACE;;EACF,IAAMC,MAAM,GAAG,SAATA,MAAS,CAASC,KAAT,EAAgB;IAC7B,IAAIC,EAAJ;;IACA,CAACA,EAAE,GAAGJ,OAAO,CAACK,IAAd,KAAuB,IAAvB,GAA8B,KAAK,CAAnC,GAAuCD,EAAE,CAACE,IAAH,CAAQN,OAAR,EAAiBG,KAAjB,CAAvC;EACD,CAHD;;EAIA,IAAMI,IAAI,GAAG,SAAPA,IAAO,CAASJ,KAAT,EAAgB;IAC3B,IAAIC,EAAJ;;IACAI,QAAQ,CAACC,mBAAT,CAA6B,WAA7B,EAA0CP,MAA1C;IACAM,QAAQ,CAACC,mBAAT,CAA6B,SAA7B,EAAwCF,IAAxC;IACAC,QAAQ,CAACC,mBAAT,CAA6B,WAA7B,EAA0CP,MAA1C;IACAM,QAAQ,CAACC,mBAAT,CAA6B,UAA7B,EAAyCF,IAAzC;IACAC,QAAQ,CAACE,aAAT,GAAyB,IAAzB;IACAF,QAAQ,CAACG,WAAT,GAAuB,IAAvB;IACAb,UAAU,GAAG,KAAb;IACA,CAACM,EAAE,GAAGJ,OAAO,CAACY,GAAd,KAAsB,IAAtB,GAA6B,KAAK,CAAlC,GAAsCR,EAAE,CAACE,IAAH,CAAQN,OAAR,EAAiBG,KAAjB,CAAtC;EACD,CAVD;;EAWA,IAAMU,MAAM,GAAG,SAATA,MAAS,CAASV,KAAT,EAAgB;IAC7B,IAAIC,EAAJ;;IACA,IAAIN,UAAJ,EACE;IACFK,KAAK,CAACW,cAAN;;IACAN,QAAQ,CAACE,aAAT,GAAyB;MAAA,OAAM,KAAN;IAAA,CAAzB;;IACAF,QAAQ,CAACG,WAAT,GAAuB;MAAA,OAAM,KAAN;IAAA,CAAvB;;IACAH,QAAQ,CAACO,gBAAT,CAA0B,WAA1B,EAAuCb,MAAvC;IACAM,QAAQ,CAACO,gBAAT,CAA0B,SAA1B,EAAqCR,IAArC;IACAC,QAAQ,CAACO,gBAAT,CAA0B,WAA1B,EAAuCb,MAAvC;IACAM,QAAQ,CAACO,gBAAT,CAA0B,UAA1B,EAAsCR,IAAtC;IACAT,UAAU,GAAG,IAAb;IACA,CAACM,EAAE,GAAGJ,OAAO,CAACgB,KAAd,KAAwB,IAAxB,GAA+B,KAAK,CAApC,GAAwCZ,EAAE,CAACE,IAAH,CAAQN,OAAR,EAAiBG,KAAjB,CAAxC;EACD,CAbD;;EAcAJ,OAAO,CAACgB,gBAAR,CAAyB,WAAzB,EAAsCF,MAAtC;EACAd,OAAO,CAACgB,gBAAR,CAAyB,YAAzB,EAAuCF,MAAvC;AACF","names":["isDragging","element","options","isClient","moveFn","event","_a","drag","call","upFn","document","removeEventListener","onselectstart","ondragstart","end","downFn","preventDefault","addEventListener","start"],"sources":["../../../../../../packages/components/color-picker/src/draggable.ts"],"sourcesContent":["import { isClient } from '@vueuse/core'\n\nlet isDragging = false\n\nexport declare interface IOptions {\n  drag?: (event: Event) => void\n  start?: (event: Event) => void\n  end?: (event: Event) => void\n}\n\nexport default function (element: HTMLElement, options: IOptions) {\n  if (!isClient) return\n\n  const moveFn = function (event: Event) {\n    options.drag?.(event)\n  }\n\n  const upFn = function (event: Event) {\n    document.removeEventListener('mousemove', moveFn)\n    document.removeEventListener('mouseup', upFn)\n    document.removeEventListener('touchmove', moveFn)\n    document.removeEventListener('touchend', upFn)\n    document.onselectstart = null\n    document.ondragstart = null\n\n    isDragging = false\n\n    options.end?.(event)\n  }\n\n  const downFn = function (event: Event) {\n    if (isDragging) return\n    event.preventDefault()\n    document.onselectstart = () => false\n    document.ondragstart = () => false\n    document.addEventListener('mousemove', moveFn)\n    document.addEventListener('mouseup', upFn)\n    document.addEventListener('touchmove', moveFn)\n    document.addEventListener('touchend', upFn)\n\n    isDragging = true\n\n    options.start?.(event)\n  }\n\n  element.addEventListener('mousedown', downFn)\n  element.addEventListener('touchstart', downFn)\n}\n"]},"metadata":{},"sourceType":"module"}