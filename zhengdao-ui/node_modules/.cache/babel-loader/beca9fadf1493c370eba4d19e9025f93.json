{"ast":null,"code":"import _defineProperty from \"/home/little/Documents/music_web/startproj/zhengdao-ui/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nvar _LayoutKeys;\n\nimport '../../../../utils/index.mjs';\nimport { HORIZONTAL, VERTICAL } from '../defaults.mjs';\nimport { cAF, rAF } from '../../../../utils/raf.mjs';\nimport { isFirefox } from '../../../../utils/browser.mjs';\nvar LayoutKeys = (_LayoutKeys = {}, _defineProperty(_LayoutKeys, HORIZONTAL, \"deltaX\"), _defineProperty(_LayoutKeys, VERTICAL, \"deltaY\"), _LayoutKeys);\n\nvar useWheel = function useWheel(_ref, onWheelDelta) {\n  var atEndEdge = _ref.atEndEdge,\n      atStartEdge = _ref.atStartEdge,\n      layout = _ref.layout;\n  var frameHandle;\n  var offset = 0;\n\n  var hasReachedEdge = function hasReachedEdge(offset2) {\n    var edgeReached = offset2 < 0 && atStartEdge.value || offset2 > 0 && atEndEdge.value;\n    return edgeReached;\n  };\n\n  var onWheel = function onWheel(e) {\n    cAF(frameHandle);\n    var newOffset = e[LayoutKeys[layout.value]];\n    if (hasReachedEdge(offset) && hasReachedEdge(offset + newOffset)) return;\n    offset += newOffset;\n\n    if (!isFirefox()) {\n      e.preventDefault();\n    }\n\n    frameHandle = rAF(function () {\n      onWheelDelta(offset);\n      offset = 0;\n    });\n  };\n\n  return {\n    hasReachedEdge: hasReachedEdge,\n    onWheel: onWheel\n  };\n};\n\nexport { useWheel as default };","map":{"version":3,"mappings":";;;;;;;;AAEA,IAAMA,UAAU,mDACbC,UADa,EACA,QADA,gCAEbC,QAFa,EAEF,QAFE,eAAhB;;AAIK,IAACC,QAAQ,GAAG,SAAXA,QAAW,OAAqCC,YAArC,EAAsD;EAAA,IAAnDC,SAAmD,QAAnDA,SAAmD;EAAA,IAAxCC,WAAwC,QAAxCA,WAAwC;EAAA,IAA3BC,MAA2B,QAA3BA,MAA2B;EACrE,IAAIC,WAAJ;EACA,IAAIC,MAAM,GAAG,CAAb;;EACA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,OAAD,EAAa;IAClC,IAAMC,WAAW,GAAGD,OAAO,GAAG,CAAV,IAAeL,WAAW,CAACO,KAA3B,IAAoCF,OAAO,GAAG,CAAV,IAAeN,SAAS,CAACQ,KAAjF;IACA,OAAOD,WAAP;EACD,CAHD;;EAIA,IAAME,OAAO,GAAG,SAAVA,OAAU,CAACC,CAAD,EAAO;IACrBC,GAAG,CAACR,WAAD,CAAH;IACA,IAAMS,SAAS,GAAGF,CAAC,CAACf,UAAU,CAACO,MAAM,CAACM,KAAR,CAAX,CAAnB;IACA,IAAIH,cAAc,CAACD,MAAD,CAAd,IAA0BC,cAAc,CAACD,MAAM,GAAGQ,SAAV,CAA5C,EACE;IACFR,MAAM,IAAIQ,SAAV;;IACA,IAAI,CAACC,SAAS,EAAd,EAAkB;MAChBH,CAAC,CAACI,cAAF;IACD;;IACDX,WAAW,GAAGY,GAAG,CAAC,YAAM;MACtBhB,YAAY,CAACK,MAAD,CAAZ;MACAA,MAAM,GAAG,CAAT;IACD,CAHgB,CAAjB;EAID,CAbD;;EAcA,OAAO;IACLC,cAAc,EAAdA,cADK;IAELI,OAAO,EAAPA;EAFK,CAAP;AAIF,CAzBK","names":["LayoutKeys","HORIZONTAL","VERTICAL","useWheel","onWheelDelta","atEndEdge","atStartEdge","layout","frameHandle","offset","hasReachedEdge","offset2","edgeReached","value","onWheel","e","cAF","newOffset","isFirefox","preventDefault","rAF"],"sources":["../../../../../../../packages/components/virtual-list/src/hooks/use-wheel.ts"],"sourcesContent":["// @ts-nocheck\nimport { cAF, isFirefox, rAF } from '@element-plus/utils'\nimport { HORIZONTAL, VERTICAL } from '../defaults'\n\nimport type { ComputedRef } from 'vue'\nimport type { LayoutDirection } from '../types'\n\nconst LayoutKeys = {\n  [HORIZONTAL]: 'deltaX',\n  [VERTICAL]: 'deltaY',\n}\n\ninterface ListWheelState {\n  atStartEdge: ComputedRef<boolean> // exclusive to reachEnd\n  atEndEdge: ComputedRef<boolean>\n  layout: ComputedRef<LayoutDirection>\n}\n\ntype ListWheelHandler = (offset: number) => void\n\nconst useWheel = (\n  { atEndEdge, atStartEdge, layout }: ListWheelState,\n  onWheelDelta: ListWheelHandler\n) => {\n  let frameHandle: number\n  let offset = 0\n\n  // let scrollLock = false\n  // let lockHandle = null\n\n  // const lockScroll = () => {\n  //   clearTimeout(lockHandle)\n  //   scrollLock = true\n  //   lockHandle = setTimeout(() => scrollLock = false, 50)\n  // }\n\n  const hasReachedEdge = (offset: number) => {\n    const edgeReached =\n      (offset < 0 && atStartEdge.value) || (offset > 0 && atEndEdge.value)\n\n    return edgeReached\n  }\n\n  const onWheel = (e: WheelEvent) => {\n    cAF(frameHandle)\n\n    const newOffset = e[LayoutKeys[layout.value]]\n\n    if (hasReachedEdge(offset) && hasReachedEdge(offset + newOffset)) return\n\n    offset += newOffset\n\n    if (!isFirefox()) {\n      e.preventDefault()\n    }\n\n    frameHandle = rAF(() => {\n      onWheelDelta(offset)\n      offset = 0\n    })\n  }\n\n  return {\n    hasReachedEdge,\n    onWheel,\n  }\n}\n\nexport default useWheel\n"]},"metadata":{},"sourceType":"module"}