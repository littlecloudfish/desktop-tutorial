{"ast":null,"code":"import _regeneratorRuntime from \"/home/little/Documents/music_web/startproj/zhengdao-ui/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/little/Documents/music_web/startproj/zhengdao-ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { useStore } from 'vuex';\nimport { inject } from 'vue';\nimport { computed } from 'vue';\nimport { mapGetters } from 'vuex';\nexport default {\n  inject: ['userid'],\n  setup: function setup() {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var userid, store, userinfomation, userpublish;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              userid = inject('userid');\n              store = useStore();\n              _context.next = 4;\n              return store.dispatch('userInfo/personinfo', userid);\n\n            case 4:\n              _context.next = 6;\n              return store.getters['userInfo/personinfo'];\n\n            case 6:\n              userinfomation = _context.sent;\n              _context.next = 9;\n              return store.dispatch('userInfo/personmusic', userid);\n\n            case 9:\n              _context.next = 11;\n              return store.getters['userInfo/personalmusic'];\n\n            case 11:\n              userpublish = _context.sent;\n              return _context.abrupt(\"return\", {\n                userinfomation: userinfomation\n              });\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  data: function data() {\n    return {\n      currentAudioName: '',\n      otherList: [],\n      dataready: false\n    };\n  },\n  methods: {},\n  beforeUpdate: function beforeUpdate() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this.otherList = audioList;\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  }\n};","map":{"version":3,"mappings":";;AAkBE,SAAQA,QAAR,QAAuB,MAAvB;AACA,SAAQC,MAAR,QAAqB,KAArB;AACA,SAAQC,QAAR,QAAuB,KAAvB;AACA,SAAQC,UAAR,QAAyB,MAAzB;AACA,eAAe;EACbF,MAAM,EAAC,CAAC,QAAD,CADM;EAEPG,KAFO,mBAEC;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cACJC,MADI,GACKJ,MAAM,CAAC,QAAD,CADX;cAEJK,KAFI,GAEIN,QAAQ,EAFZ;cAAA;cAAA,OAGJM,KAAK,CAACC,QAAN,CAAe,qBAAf,EAAsCF,MAAtC,CAHI;;YAAA;cAAA;cAAA,OAImBC,KAAK,CAACE,OAAN,CAAc,qBAAd,CAJnB;;YAAA;cAIJC,cAJI;cAAA;cAAA,OAKJH,KAAK,CAACC,QAAN,CAAe,sBAAf,EAAuCF,MAAvC,CALI;;YAAA;cAAA;cAAA,OAMgBC,KAAK,CAACE,OAAN,CAAc,wBAAd,CANhB;;YAAA;cAMJE,WANI;cAAA,iCAOJ;gBACFD,cAAc,EAAdA;cADE,CAPI;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAWb,CAbY;EAcbE,IAda,kBAcN;IACL,OAAO;MACLC,gBAAgB,EAAE,EADb;MAELC,SAAS,EAAC,EAFL;MAGLC,SAAS,EAAC;IAHL,CAAP;EAKD,CApBY;EAqBbC,OAAO,EAAE,EArBI;EAwBPC,YAxBO,0BAwBO;IAAA;;IAAA;MAAA;QAAA;UAAA;YAAA;cAChB,KAAI,CAACH,SAAL,GAAiBI,SAAjB;;YADgB;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAEjB;AA1BU,CAAf","names":["useStore","inject","computed","mapGetters","setup","userid","store","dispatch","getters","userinfomation","userpublish","data","currentAudioName","otherList","dataready","methods","beforeUpdate","audioList"],"sourceRoot":"","sources":["/home/little/Documents/music_web/startproj/zhengdao-ui/src/components/layout/userinfo.vue"],"sourcesContent":["<template>\n    <div>\n        <el-row class=\"infocard\">\n            <el-col :span=\"200\">\n                <el-image style=\"width: 150px; height: 150px\" src=\"https://fuss10.elemecdn.com/a/3f/3302e58f9a181d2509f3dc0fa68b0jpeg.jpeg\" fit=\"fill\" />\n            </el-col>\n            <el-col :span=\"12\" class=\"textinfo\">\n                <p style = \"color:white\">Player Name:{{userinfomation.fullname}}</p>\n                <p style = \"color:white\">Player DiscordId:</p>\n                <p style = \"color:white\">Account Created Day:{{userinfomation.create_date}}</p>\n            </el-col>\n        </el-row>\n        <el-row>\n\n        </el-row>   \n    </div>\n</template>\n <script> \n  import {useStore} from 'vuex'\n  import {inject} from 'vue'\n  import {computed} from 'vue'\n  import {mapGetters} from 'vuex'\n  export default {\n    inject:['userid'],\n    async setup (){\n        const userid = inject('userid')\n        const store = useStore()\n        await store.dispatch('userInfo/personinfo', userid)\n        const userinfomation = await store.getters['userInfo/personinfo']\n        await store.dispatch('userInfo/personmusic', userid)\n        const userpublish = await store.getters['userInfo/personalmusic']   \n        return{\n            userinfomation,\n        }\n        \n    },\n    data() {\n      return {\n        currentAudioName: '',\n        otherList:[],\n        dataready:false,\n      }\n    },\n    methods: {\n     \n    },\n    async beforeUpdate(){\n        this.otherList = audioList;\n      },\n    \n  }\n  </script>\n\n  <style scoped>\n .infocard{\n    border-radius: 18px;\n    padding-bottom: 3%;\n    background:#0f2743;\n  } \n  .el-image{\n    padding-top:20%;\n    padding-left:10%;\n  }\n  .textinfo{\n    padding-left:50px;\n    padding-top:3%;\n  }\n  \n  </style>"]},"metadata":{},"sourceType":"module"}