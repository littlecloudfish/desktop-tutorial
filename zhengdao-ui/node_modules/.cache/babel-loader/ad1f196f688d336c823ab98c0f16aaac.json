{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, mergeProps as _mergeProps, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createTextVNode(\"Input Account Email\");\n\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\"Input Account Name\");\n\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\"Input Account Password\");\n\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Hint: Enter a secure password you can remember\", -1\n/* HOISTED */\n);\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"button\", null, \"Submit\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_col = _resolveComponent(\"el-col\");\n\n  const _component_el_row = _resolveComponent(\"el-row\");\n\n  return _openBlock(), _createBlock($setup[\"Form\"], {\n    \"validation-schema\": $setup.schema,\n    onSubmit: $setup.onSubmit\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_row, null, {\n      default: _withCtx(() => [_createVNode(_component_el_col, {\n        style: {\n          \"color\": \"white\"\n        },\n        span: 24\n      }, {\n        default: _withCtx(() => [_hoisted_1]),\n        _: 1\n        /* STABLE */\n\n      })]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode($setup[\"Field\"], {\n      name: \"email\",\n      type: \"email\"\n    }), _createVNode($setup[\"ErrorMessage\"], {\n      name: \"email\"\n    }), _createVNode(_component_el_row, null, {\n      default: _withCtx(() => [_createVNode(_component_el_col, {\n        style: {\n          \"color\": \"white\"\n        },\n        span: 24\n      }, {\n        default: _withCtx(() => [_hoisted_2]),\n        _: 1\n        /* STABLE */\n\n      })]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode($setup[\"Field\"], {\n      name: \"name\"\n    }), _createVNode($setup[\"ErrorMessage\"], {\n      name: \"name\"\n    }), _createVNode(_component_el_row, null, {\n      default: _withCtx(() => [_createVNode(_component_el_col, {\n        style: {\n          \"color\": \"white\"\n        },\n        span: 24\n      }, {\n        default: _withCtx(() => [_hoisted_3]),\n        _: 1\n        /* STABLE */\n\n      })]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode($setup[\"Field\"], {\n      name: \"password\"\n    }, {\n      default: _withCtx(({\n        field\n      }) => [_createElementVNode(\"input\", _mergeProps(field, {\n        type: \"password\"\n      }), null, 16\n      /* FULL_PROPS */\n      ), _hoisted_4]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode($setup[\"ErrorMessage\"], {\n      name: \"name\"\n    }), _hoisted_5]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"validation-schema\"]);\n}","map":{"version":3,"mappings":";;iDAGiD;;iDAKA;;iDAKA;;gCAI3CA,oBAAqD,GAArD,EAAqD,IAArD,EAAG,gDAAH,EAAiD;AAAA;AAAjD;;gCAGFA,oBAAuB,QAAvB,EAAuB,IAAvB,EAAQ,QAAR,EAAc;AAAA;AAAd;;;;;;;uBAnBFC,aAoBOC,cApBP,EAoBO;IApBA,qBAAmBA,aAoBnB;IApB4BC,QAAM,EAAED;EAoBpC,CApBP;sBACE,MAES,CAFTE,aAESC,iBAFT,EAES,IAFT,EAES;wBADH,MAAmE,CAAnED,aAAmEE,iBAAnE,EAAmE;QAA3DC,KAAmB,EAAnB;UAAA;QAAA,CAA2D;QAAtCC,IAAI,EAAE;MAAgC,CAAnE;0BAAuC,MAAmB;;;;OAA1D,CAAmE,EAChE;;;;IAAA,CAFT,CAES,EACTJ,aAAmCF,eAAnC,EAAmC;MAA5BO,IAAI,EAAC,OAAuB;MAAfC,IAAI,EAAC;IAAU,CAAnC,CADS,EAETN,aAA6BF,sBAA7B,EAA6B;MAAfO,IAAI,EAAC;IAAU,CAA7B,CAFS,EAGTL,aAESC,iBAFT,EAES,IAFT,EAES;wBADH,MAAkE,CAAlED,aAAkEE,iBAAlE,EAAkE;QAA1DC,KAAmB,EAAnB;UAAA;QAAA,CAA0D;QAArCC,IAAI,EAAE;MAA+B,CAAlE;0BAAuC,MAAkB;;;;OAAzD,CAAkE,EAC/D;;;;IAAA,CAFT,CAHS,EAMTJ,aAAqBF,eAArB,EAAqB;MAAdO,IAAI,EAAC;IAAS,CAArB,CANS,EAOTL,aAA4BF,sBAA5B,EAA4B;MAAdO,IAAI,EAAC;IAAS,CAA5B,CAPS,EAQTL,aAESC,iBAFT,EAES,IAFT,EAES;wBADH,MAAsE,CAAtED,aAAsEE,iBAAtE,EAAsE;QAA9DC,KAAmB,EAAnB;UAAA;QAAA,CAA8D;QAAzCC,IAAI,EAAE;MAAmC,CAAtE;0BAAuC,MAAsB;;;;OAA7D,CAAsE,EACnE;;;;IAAA,CAFT,CARS,EAWTJ,aAGQF,eAHR,EAGQ;MAHDO,IAAI,EAAC;IAGJ,CAHR,EAAsB;wBACpB,CAAsC;QADPE;MACO,CAAtC,KADoC,CACpCX,oBAAsC,OAAtC,cAAeW,KAAf,EAAoB;QAAED,IAAI,EAAC;MAAP,CAApB,GAAqC,IAArC,EAAqC;MAAA;MAArC,CADoC,EAEpCE,UAFoC,EAAhB;;;;IAAA,CAAtB,CAXS,EAeTR,aAA4BF,sBAA5B,EAA4B;MAAdO,IAAI,EAAC;IAAS,CAA5B,CAfS,EAgBTI,UAhBS;;;;GAHX;;EAAA","names":["_createElementVNode","_createBlock","$setup","onSubmit","_createVNode","_component_el_row","_component_el_col","style","span","name","type","field","_hoisted_4","_hoisted_5"],"sourceRoot":"","sources":["/home/little/Documents/music_web/startproj/zhengdao-ui/src/components/function/registration.vue"],"sourcesContent":["<template>\n  <Form :validation-schema=\"schema\" @submit=\"onSubmit\">\n    <el-row>\n          <el-col style=\"color:white\" :span=\"24\">Input Account Email</el-col>\n    </el-row>\n    <Field name=\"email\" type=\"email\" />\n    <ErrorMessage name=\"email\" />\n    <el-row>\n          <el-col style=\"color:white\" :span=\"24\">Input Account Name</el-col>\n    </el-row>\n    <Field name=\"name\" />\n    <ErrorMessage name=\"name\" />\n    <el-row>\n          <el-col style=\"color:white\" :span=\"24\">Input Account Password</el-col>\n    </el-row>\n    <Field name=\"password\" v-slot=\"{ field }\">\n      <input v-bind=\"field\" type=\"password\">\n      <p>Hint: Enter a secure password you can remember</p>\n    </Field>\n    <ErrorMessage name=\"name\" />\n    <button>Submit</button>\n  </Form>\n</template>\n\n<script setup>\nimport { Field, Form, ErrorMessage } from 'vee-validate';\nimport * as yup from 'yup';\n\nconst schema = yup.object({\n  email: yup.string().email().required(),\n  name: yup.string().required(),\n});\n\nfunction onSubmit(values) {\n  alert(JSON.stringify(values, null, 2));\n}\n</script>\n\n<!-- <template>\n    <h2 style=\"color:white\">Register an account </h2>\n    <form >\n      <div class=\"form-control\">\n        <el-row>\n          <el-col style=\"color:white\" :span=\"24\">Input Username</el-col>\n        </el-row>\n        <el-row>\n          <el-col :span=\"20\">\n              <el-input v-model.trim=\"username\" placeholder=\"Please input Username\" />\n          </el-col>\n        </el-row>\n        <p v-if=\"!validusername\">Username cannot be empty or start with space </p>\n      </div>\n      <div class=\"form-control\">\n        <el-row>\n          <el-col style=\"color:white\" :span=\"24\">Input Password</el-col>\n        </el-row>\n        <el-row>\n          <el-col :span=\"20\">\n              <el-input v-model=\"password\" placeholder=\"Please input Password\" />\n          </el-col>\n        </el-row>\n      </div>\n      <div class=\"form-control\">\n        <el-row>\n          <el-col style=\"color:white\" :span=\"24\">Input Password Again</el-col>\n        </el-row>\n        <el-row>\n          <el-col :span=\"20\">\n              <el-input v-model=\"secondpassword\" placeholder=\"Please input Password Again\" />\n          </el-col>\n        </el-row>\n        <p v-if=\"!validpassword\">One or more input fields are invalid. Please check your provided data.</p>\n      </div>\n      <div class=\"form-control\">\n        <el-row>\n          <el-col style=\"color:white\" :span=\"24\">Input Email</el-col>\n        </el-row>\n        <el-row>\n          <el-col :span=\"20\">\n              <el-input v-model=\"email\" placeholder=\"Please input Email\" />\n          </el-col>\n        </el-row>\n        <p v-if=\"!validemail\">Must be valid Email Address</p>\n  \n      </div>\n      <div class=\"form-control\">\n        <el-row>\n          <el-col style=\"color:white\" :span=\"20\">Input discord ID with #</el-col>\n        </el-row>\n        <el-row>\n          <el-col :span=\"20\">\n              <el-input v-model=\"discordId\" placeholder=\"Please input discord ID with #\" />\n          </el-col>\n        </el-row>\n        <p v-if=\"!validediscord\">Must be DiscordID with #</p>\n  \n      </div>\n      <div>\n        <el-row>\n          <el-button type=\"Success\" round @click=\"submitresult\" >Submit</el-button>  \n        </el-row>\n      </div>\n    </form>\n  </template> -->\n  \n  \n<!--   \n  <script>\n  // import axios from 'axios'\n  import imageCompressor from 'vue-image-compressor';\n\n  export default{\n    components: { imageCompressor },\n\n    data(){\n      return{\n        username: '',\n        validusername:true,\n        password:'',\n        secondpassword:'',\n        validpassword:true,\n        email:'',\n        validemail:true,\n        discordId:'',\n        validediscord:true,\n        error: null,\n      };\n    },\n    methods:{\n      submitresult(){\n        if(this.secondpassword !==this.password ){\n          this.validpassword = false;\n          return;\n        }\n        this.validpassword = true;\n        // console.log(this.validpassword)\n        // console.log(this.password)\n        // console.log(this.secondpassword)\n  \n        if(this.mode === 'login'){\n          \n        }else{\n          this.$store.dispatch('signup',{\n            username: this.username,\n            password: this.password,\n          });\n        }\n      \n    },\n   \n    }\n\n  }\n  </script>\n   -->\n  <style lang=\"scss\">\n  .el-row {\n    margin-bottom: 20px;\n  }\n  .el-row:last-child {\n    margin-bottom: 0;\n  }\n  .el-col {\n    border-radius: 4px;\n  }\n  \n  .grid-content {\n    border-radius: 4px;\n    min-height: 12px;\n  }\n  </style>"]},"metadata":{},"sourceType":"module"}