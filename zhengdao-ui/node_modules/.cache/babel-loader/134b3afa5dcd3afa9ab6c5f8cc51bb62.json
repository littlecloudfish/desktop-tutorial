{"ast":null,"code":"import _objectSpread from \"/home/little/Documents/music_web/startproj/zhengdao-ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { defineComponent, getCurrentInstance, computed, ref, watch, nextTick, onMounted, openBlock, createElementBlock, normalizeClass, unref, normalizeStyle, withModifiers, createElementVNode, withKeys, createBlock, withCtx, resolveDynamicComponent, createCommentVNode, toDisplayString, Fragment, createVNode } from 'vue';\nimport { isPromise } from '@vue/shared';\nimport '../../../utils/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { Loading } from '@element-plus/icons-vue';\nimport '../../../constants/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { switchProps, switchEmits } from './switch.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useFormItem, useFormItemInputId } from '../../../hooks/use-form-item/index.mjs';\nimport { useSize, useDisabled } from '../../../hooks/use-common-props/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useDeprecated } from '../../../hooks/use-deprecated/index.mjs';\nimport { addUnit } from '../../../utils/dom/style.mjs';\nimport { UPDATE_MODEL_EVENT, CHANGE_EVENT, INPUT_EVENT } from '../../../constants/event.mjs';\nimport { debugWarn, throwError } from '../../../utils/error.mjs';\nimport { isBoolean } from '@vueuse/core';\nvar _hoisted_1 = [\"onClick\"];\nvar _hoisted_2 = [\"id\", \"aria-checked\", \"aria-disabled\", \"name\", \"true-value\", \"false-value\", \"disabled\", \"tabindex\", \"onKeydown\"];\nvar _hoisted_3 = [\"aria-hidden\"];\nvar _hoisted_4 = [\"aria-hidden\"];\nvar _hoisted_5 = [\"aria-hidden\"];\nvar _hoisted_6 = [\"aria-hidden\"];\nvar __default__ = {\n  name: \"ElSwitch\"\n};\n\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: switchProps,\n  emits: switchEmits,\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose,\n        emit = _ref.emit;\n    var props = __props;\n    var COMPONENT_NAME = \"ElSwitch\";\n    var vm = getCurrentInstance();\n\n    var _useFormItem = useFormItem(),\n        formItem = _useFormItem.formItem;\n\n    var switchSize = useSize();\n    var ns = useNamespace(\"switch\");\n    useDeprecated({\n      from: '\"value\"',\n      replacement: '\"model-value\" or \"v-model\"',\n      scope: COMPONENT_NAME,\n      version: \"2.3.0\",\n      ref: \"https://element-plus.org/en-US/component/switch.html#attributes\",\n      type: \"Attribute\"\n    }, computed(function () {\n      var _a;\n\n      return !!((_a = vm.vnode.props) == null ? void 0 : _a.value);\n    }));\n\n    var _useFormItemInputId = useFormItemInputId(props, {\n      formItemContext: formItem\n    }),\n        inputId = _useFormItemInputId.inputId;\n\n    var switchDisabled = useDisabled(computed(function () {\n      return props.loading;\n    }));\n    var isControlled = ref(props.modelValue !== false);\n    var input = ref();\n    var core = ref();\n    var switchKls = computed(function () {\n      return [ns.b(), ns.m(switchSize.value), ns.is(\"disabled\", switchDisabled.value), ns.is(\"checked\", checked.value)];\n    });\n    var coreStyle = computed(function () {\n      return {\n        width: addUnit(props.width)\n      };\n    });\n    watch(function () {\n      return props.modelValue;\n    }, function () {\n      isControlled.value = true;\n    });\n    watch(function () {\n      return props.value;\n    }, function () {\n      isControlled.value = false;\n    });\n    var actualValue = computed(function () {\n      return isControlled.value ? props.modelValue : props.value;\n    });\n    var checked = computed(function () {\n      return actualValue.value === props.activeValue;\n    });\n\n    if (![props.activeValue, props.inactiveValue].includes(actualValue.value)) {\n      emit(UPDATE_MODEL_EVENT, props.inactiveValue);\n      emit(CHANGE_EVENT, props.inactiveValue);\n      emit(INPUT_EVENT, props.inactiveValue);\n    }\n\n    watch(checked, function (val) {\n      var _a;\n\n      input.value.checked = val;\n\n      if (props.validateEvent) {\n        (_a = formItem == null ? void 0 : formItem.validate) == null ? void 0 : _a.call(formItem, \"change\")[\"catch\"](function (err) {\n          return debugWarn(err);\n        });\n      }\n    });\n\n    var handleChange = function handleChange() {\n      var val = checked.value ? props.inactiveValue : props.activeValue;\n      emit(UPDATE_MODEL_EVENT, val);\n      emit(CHANGE_EVENT, val);\n      emit(INPUT_EVENT, val);\n      nextTick(function () {\n        input.value.checked = checked.value;\n      });\n    };\n\n    var switchValue = function switchValue() {\n      if (switchDisabled.value) return;\n      var beforeChange = props.beforeChange;\n\n      if (!beforeChange) {\n        handleChange();\n        return;\n      }\n\n      var shouldChange = beforeChange();\n      var isPromiseOrBool = [isPromise(shouldChange), isBoolean(shouldChange)].includes(true);\n\n      if (!isPromiseOrBool) {\n        throwError(COMPONENT_NAME, \"beforeChange must return type `Promise<boolean>` or `boolean`\");\n      }\n\n      if (isPromise(shouldChange)) {\n        shouldChange.then(function (result) {\n          if (result) {\n            handleChange();\n          }\n        })[\"catch\"](function (e) {\n          debugWarn(COMPONENT_NAME, \"some error occurred: \".concat(e));\n        });\n      } else if (shouldChange) {\n        handleChange();\n      }\n    };\n\n    var styles = computed(function () {\n      return ns.cssVarBlock(_objectSpread(_objectSpread(_objectSpread({}, props.activeColor ? {\n        \"on-color\": props.activeColor\n      } : null), props.inactiveColor ? {\n        \"off-color\": props.inactiveColor\n      } : null), props.borderColor ? {\n        \"border-color\": props.borderColor\n      } : null));\n    });\n\n    var focus = function focus() {\n      var _a, _b;\n\n      (_b = (_a = input.value) == null ? void 0 : _a.focus) == null ? void 0 : _b.call(_a);\n    };\n\n    onMounted(function () {\n      input.value.checked = checked.value;\n    });\n    expose({\n      focus: focus\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createElementBlock(\"div\", {\n        \"class\": normalizeClass(unref(switchKls)),\n        style: normalizeStyle(unref(styles)),\n        onClick: withModifiers(switchValue, [\"prevent\"])\n      }, [createElementVNode(\"input\", {\n        id: unref(inputId),\n        ref_key: \"input\",\n        ref: input,\n        \"class\": normalizeClass(unref(ns).e(\"input\")),\n        type: \"checkbox\",\n        role: \"switch\",\n        \"aria-checked\": unref(checked),\n        \"aria-disabled\": unref(switchDisabled),\n        name: _ctx.name,\n        \"true-value\": _ctx.activeValue,\n        \"false-value\": _ctx.inactiveValue,\n        disabled: unref(switchDisabled),\n        tabindex: _ctx.tabindex,\n        onChange: handleChange,\n        onKeydown: withKeys(switchValue, [\"enter\"])\n      }, null, 42, _hoisted_2), !_ctx.inlinePrompt && (_ctx.inactiveIcon || _ctx.inactiveText) ? (openBlock(), createElementBlock(\"span\", {\n        key: 0,\n        \"class\": normalizeClass([unref(ns).e(\"label\"), unref(ns).em(\"label\", \"left\"), unref(ns).is(\"active\", !unref(checked))])\n      }, [_ctx.inactiveIcon ? (openBlock(), createBlock(unref(ElIcon), {\n        key: 0\n      }, {\n        \"default\": withCtx(function () {\n          return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.inactiveIcon)))];\n        }),\n        _: 1\n      })) : createCommentVNode(\"v-if\", true), !_ctx.inactiveIcon && _ctx.inactiveText ? (openBlock(), createElementBlock(\"span\", {\n        key: 1,\n        \"aria-hidden\": unref(checked)\n      }, toDisplayString(_ctx.inactiveText), 9, _hoisted_3)) : createCommentVNode(\"v-if\", true)], 2)) : createCommentVNode(\"v-if\", true), createElementVNode(\"span\", {\n        ref_key: \"core\",\n        ref: core,\n        \"class\": normalizeClass(unref(ns).e(\"core\")),\n        style: normalizeStyle(unref(coreStyle))\n      }, [_ctx.inlinePrompt ? (openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        \"class\": normalizeClass(unref(ns).e(\"inner\"))\n      }, [_ctx.activeIcon || _ctx.inactiveIcon ? (openBlock(), createElementBlock(Fragment, {\n        key: 0\n      }, [_ctx.activeIcon ? (openBlock(), createBlock(unref(ElIcon), {\n        key: 0,\n        \"class\": normalizeClass([unref(ns).is(\"icon\"), unref(checked) ? unref(ns).is(\"show\") : unref(ns).is(\"hide\")])\n      }, {\n        \"default\": withCtx(function () {\n          return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.activeIcon)))];\n        }),\n        _: 1\n      }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true), _ctx.inactiveIcon ? (openBlock(), createBlock(unref(ElIcon), {\n        key: 1,\n        \"class\": normalizeClass([unref(ns).is(\"icon\"), !unref(checked) ? unref(ns).is(\"show\") : unref(ns).is(\"hide\")])\n      }, {\n        \"default\": withCtx(function () {\n          return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.inactiveIcon)))];\n        }),\n        _: 1\n      }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true)], 64)) : _ctx.activeText || _ctx.inactiveIcon ? (openBlock(), createElementBlock(Fragment, {\n        key: 1\n      }, [_ctx.activeText ? (openBlock(), createElementBlock(\"span\", {\n        key: 0,\n        \"class\": normalizeClass([unref(ns).is(\"text\"), unref(checked) ? unref(ns).is(\"show\") : unref(ns).is(\"hide\")]),\n        \"aria-hidden\": !unref(checked)\n      }, toDisplayString(_ctx.activeText.substring(0, 3)), 11, _hoisted_4)) : createCommentVNode(\"v-if\", true), _ctx.inactiveText ? (openBlock(), createElementBlock(\"span\", {\n        key: 1,\n        \"class\": normalizeClass([unref(ns).is(\"text\"), !unref(checked) ? unref(ns).is(\"show\") : unref(ns).is(\"hide\")]),\n        \"aria-hidden\": unref(checked)\n      }, toDisplayString(_ctx.inactiveText.substring(0, 3)), 11, _hoisted_5)) : createCommentVNode(\"v-if\", true)], 64)) : createCommentVNode(\"v-if\", true)], 2)) : createCommentVNode(\"v-if\", true), createElementVNode(\"div\", {\n        \"class\": normalizeClass(unref(ns).e(\"action\"))\n      }, [_ctx.loading ? (openBlock(), createBlock(unref(ElIcon), {\n        key: 0,\n        \"class\": normalizeClass(unref(ns).is(\"loading\"))\n      }, {\n        \"default\": withCtx(function () {\n          return [createVNode(unref(Loading))];\n        }),\n        _: 1\n      }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true)], 2)], 6), !_ctx.inlinePrompt && (_ctx.activeIcon || _ctx.activeText) ? (openBlock(), createElementBlock(\"span\", {\n        key: 1,\n        \"class\": normalizeClass([unref(ns).e(\"label\"), unref(ns).em(\"label\", \"right\"), unref(ns).is(\"active\", unref(checked))])\n      }, [_ctx.activeIcon ? (openBlock(), createBlock(unref(ElIcon), {\n        key: 0\n      }, {\n        \"default\": withCtx(function () {\n          return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.activeIcon)))];\n        }),\n        _: 1\n      })) : createCommentVNode(\"v-if\", true), !_ctx.activeIcon && _ctx.activeText ? (openBlock(), createElementBlock(\"span\", {\n        key: 1,\n        \"aria-hidden\": !unref(checked)\n      }, toDisplayString(_ctx.activeText), 9, _hoisted_6)) : createCommentVNode(\"v-if\", true)], 2)) : createCommentVNode(\"v-if\", true)], 14, _hoisted_1);\n    };\n  }\n}));\n\nvar Switch = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/switch/src/switch.vue\"]]);\n\nexport { Switch as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAiHA;IASA;;IACA;IAAA;;IACA;IACA;IAGAA;MACAC,eADA;MAEAC,yCAFA;MAGAC,qBAHA;MAIAC,gBAJA;MAKAC,sEALA;MAMAC;IANA,GAQAC;MAGA;;MACA;IACA,CALA,CARA;;IAeA;MACAC;IADA;IAAA;;IAGA;MAAA;IAAA;IAEA;IAAA,IACAC,aADA;IAEA;IAAA,IACAC;MAAA,QACAC,MADA,EAEAA,sBAFA,EAIAA,uCAJA,EAKAA,+BALA;IAAA,EADA;IAUA;MAAA,OACA;QACAC;MADA,CADA;IAAA;IAOAC;MAAA;IAAA,GACA;MACAC;IAEA,CAJA;IAMAD;MAAA;IAAA;MACAC;IACA,CAFA;IAIA;MAEA;IACA,CAHA;IAIA;MAAA;IAAA;;IACA;MACAC;MAEAA;MACAA;IAEA;;IACAF;MACA;;MACAJ;;MAEA;QACA;UAAA;QAAA;MACA;IACA,CAPA;;IAQA;MACA;MACAM;MACAA;MACAA;MAEAC;QACAP;MAAA,CADA;IAGA,CATA;;IAUA;MACA,0BACA;MACA;;MAEA;QAEAQ;QACA;MAAA;;MAEA;MACA,uBACAC,uBADA,EAKAC,uBALA,EAOAC,QAPA,CAOA,IAPA;;MASA;QACAC;MACA;;MACA;QACAC,YACA,KADA,CACA;UACA;YACAL;UAAA;QAEA,CALA,WAKA;UACAM;QACA,CAPA;MASA,CAVA,MAUA;QACAN;MAAA;IACA,CAnCA;;IAoCA,UACA;MACA,oEACAO;QAAA;MAAA,QADA,GAGAA;QAAA;MAAA,QAHA,GAIAA;QAAA;MAAA,QAJA;IAOA,CARA,CADA;;IAUA;MACA;;MAEA;IAIA,CAPA;;IAQAC;;KAAA","names":["useDeprecated","from","replacement","scope","version","ref","type","computed","formItemContext","input","switchKls","ns","width","watch","isControlled","emit","nextTick","handleChange","isPromise","isBoolean","includes","throwError","shouldChange","debugWarn","props","onMounted"],"sources":["../../../../../../packages/components/switch/src/switch.vue"],"sourcesContent":["<template>\n  <div :class=\"switchKls\" :style=\"styles\" @click.prevent=\"switchValue\">\n    <input\n      :id=\"inputId\"\n      ref=\"input\"\n      :class=\"ns.e('input')\"\n      type=\"checkbox\"\n      role=\"switch\"\n      :aria-checked=\"checked\"\n      :aria-disabled=\"switchDisabled\"\n      :name=\"name\"\n      :true-value=\"activeValue\"\n      :false-value=\"inactiveValue\"\n      :disabled=\"switchDisabled\"\n      :tabindex=\"tabindex\"\n      @change=\"handleChange\"\n      @keydown.enter=\"switchValue\"\n    />\n    <span\n      v-if=\"!inlinePrompt && (inactiveIcon || inactiveText)\"\n      :class=\"[\n        ns.e('label'),\n        ns.em('label', 'left'),\n        ns.is('active', !checked),\n      ]\"\n    >\n      <el-icon v-if=\"inactiveIcon\"><component :is=\"inactiveIcon\" /></el-icon>\n      <span v-if=\"!inactiveIcon && inactiveText\" :aria-hidden=\"checked\">{{\n        inactiveText\n      }}</span>\n    </span>\n    <span ref=\"core\" :class=\"ns.e('core')\" :style=\"coreStyle\">\n      <div v-if=\"inlinePrompt\" :class=\"ns.e('inner')\">\n        <template v-if=\"activeIcon || inactiveIcon\">\n          <el-icon\n            v-if=\"activeIcon\"\n            :class=\"[ns.is('icon'), checked ? ns.is('show') : ns.is('hide')]\"\n          >\n            <component :is=\"activeIcon\" />\n          </el-icon>\n          <el-icon\n            v-if=\"inactiveIcon\"\n            :class=\"[ns.is('icon'), !checked ? ns.is('show') : ns.is('hide')]\"\n          >\n            <component :is=\"inactiveIcon\" />\n          </el-icon>\n        </template>\n        <template v-else-if=\"activeText || inactiveIcon\">\n          <span\n            v-if=\"activeText\"\n            :class=\"[ns.is('text'), checked ? ns.is('show') : ns.is('hide')]\"\n            :aria-hidden=\"!checked\"\n          >\n            {{ activeText.substring(0, 3) }}\n          </span>\n          <span\n            v-if=\"inactiveText\"\n            :class=\"[ns.is('text'), !checked ? ns.is('show') : ns.is('hide')]\"\n            :aria-hidden=\"checked\"\n          >\n            {{ inactiveText.substring(0, 3) }}\n          </span>\n        </template>\n      </div>\n      <div :class=\"ns.e('action')\">\n        <el-icon v-if=\"loading\" :class=\"ns.is('loading')\"><loading /></el-icon>\n      </div>\n    </span>\n    <span\n      v-if=\"!inlinePrompt && (activeIcon || activeText)\"\n      :class=\"[\n        ns.e('label'),\n        ns.em('label', 'right'),\n        ns.is('active', checked),\n      ]\"\n    >\n      <el-icon v-if=\"activeIcon\"><component :is=\"activeIcon\" /></el-icon>\n      <span v-if=\"!activeIcon && activeText\" :aria-hidden=\"!checked\">{{\n        activeText\n      }}</span>\n    </span>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport {\n  computed,\n  getCurrentInstance,\n  nextTick,\n  onMounted,\n  ref,\n  watch,\n} from 'vue'\nimport { isPromise } from '@vue/shared'\nimport { addUnit, debugWarn, isBoolean, throwError } from '@element-plus/utils'\nimport ElIcon from '@element-plus/components/icon'\nimport { Loading } from '@element-plus/icons-vue'\nimport {\n  CHANGE_EVENT,\n  INPUT_EVENT,\n  UPDATE_MODEL_EVENT,\n} from '@element-plus/constants'\nimport {\n  useDeprecated,\n  useDisabled,\n  useFormItem,\n  useFormItemInputId,\n  useNamespace,\n  useSize,\n} from '@element-plus/hooks'\nimport { switchEmits, switchProps } from './switch'\nimport type { CSSProperties } from 'vue'\n\nconst COMPONENT_NAME = 'ElSwitch'\n\ndefineOptions({\n  name: 'ElSwitch',\n})\n\nconst props = defineProps(switchProps)\nconst emit = defineEmits(switchEmits)\n\nconst vm = getCurrentInstance()!\nconst { formItem } = useFormItem()\nconst switchSize = useSize()\nconst ns = useNamespace('switch')\n\nuseDeprecated(\n  {\n    from: '\"value\"',\n    replacement: '\"model-value\" or \"v-model\"',\n    scope: COMPONENT_NAME,\n    version: '2.3.0',\n    ref: 'https://element-plus.org/en-US/component/switch.html#attributes',\n    type: 'Attribute',\n  },\n  computed(() => !!vm.vnode.props?.value)\n)\n\nconst { inputId } = useFormItemInputId(props, {\n  formItemContext: formItem,\n})\n\nconst switchDisabled = useDisabled(computed(() => props.loading))\nconst isControlled = ref(props.modelValue !== false)\nconst input = ref<HTMLInputElement>()\nconst core = ref<HTMLSpanElement>()\n\nconst switchKls = computed(() => [\n  ns.b(),\n  ns.m(switchSize.value),\n  ns.is('disabled', switchDisabled.value),\n  ns.is('checked', checked.value),\n])\n\nconst coreStyle = computed<CSSProperties>(() => ({\n  width: addUnit(props.width),\n}))\n\nwatch(\n  () => props.modelValue,\n  () => {\n    isControlled.value = true\n  }\n)\n\nwatch(\n  () => props.value,\n  () => {\n    isControlled.value = false\n  }\n)\n\nconst actualValue = computed(() => {\n  return isControlled.value ? props.modelValue : props.value\n})\n\nconst checked = computed(() => actualValue.value === props.activeValue)\n\nif (![props.activeValue, props.inactiveValue].includes(actualValue.value)) {\n  emit(UPDATE_MODEL_EVENT, props.inactiveValue)\n  emit(CHANGE_EVENT, props.inactiveValue)\n  emit(INPUT_EVENT, props.inactiveValue)\n}\n\nwatch(checked, (val) => {\n  input.value!.checked = val\n\n  if (props.validateEvent) {\n    formItem?.validate?.('change').catch((err) => debugWarn(err))\n  }\n})\n\nconst handleChange = () => {\n  const val = checked.value ? props.inactiveValue : props.activeValue\n  emit(UPDATE_MODEL_EVENT, val)\n  emit(CHANGE_EVENT, val)\n  emit(INPUT_EVENT, val)\n  nextTick(() => {\n    input.value!.checked = checked.value\n  })\n}\n\nconst switchValue = () => {\n  if (switchDisabled.value) return\n\n  const { beforeChange } = props\n  if (!beforeChange) {\n    handleChange()\n    return\n  }\n\n  const shouldChange = beforeChange()\n\n  const isPromiseOrBool = [\n    isPromise(shouldChange),\n    isBoolean(shouldChange),\n  ].includes(true)\n  if (!isPromiseOrBool) {\n    throwError(\n      COMPONENT_NAME,\n      'beforeChange must return type `Promise<boolean>` or `boolean`'\n    )\n  }\n\n  if (isPromise(shouldChange)) {\n    shouldChange\n      .then((result) => {\n        if (result) {\n          handleChange()\n        }\n      })\n      .catch((e) => {\n        debugWarn(COMPONENT_NAME, `some error occurred: ${e}`)\n      })\n  } else if (shouldChange) {\n    handleChange()\n  }\n}\n\nconst styles = computed(() => {\n  return ns.cssVarBlock({\n    ...(props.activeColor ? { 'on-color': props.activeColor } : null),\n    ...(props.inactiveColor ? { 'off-color': props.inactiveColor } : null),\n    ...(props.borderColor ? { 'border-color': props.borderColor } : null),\n  })\n})\n\nconst focus = (): void => {\n  input.value?.focus?.()\n}\n\nonMounted(() => {\n  input.value!.checked = checked.value\n})\n\ndefineExpose({\n  /**\n   *  @description manual focus to the switch component\n   **/\n  focus,\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}