{"ast":null,"code":"import _objectSpread from \"/home/little/Documents/music_web/startproj/zhengdao-ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport '../../../utils/index.mjs';\nimport '../../popper/index.mjs';\nimport '../../../hooks/index.mjs';\nimport '../../../constants/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';\nimport { useDelayedToggleProps } from '../../../hooks/use-delayed-toggle/index.mjs';\nimport { usePopperContentProps } from '../../popper/src/content.mjs';\nimport { POPPER_CONTAINER_SELECTOR } from '../../../hooks/use-popper-container/index.mjs';\nimport { usePopperTriggerProps } from '../../popper/src/trigger.mjs';\nimport { EVENT_CODE } from '../../../constants/aria.mjs';\nvar triggers = [\"hover\", \"focus\", \"click\", \"contextmenu\"];\nvar ns = useNamespace(\"tooltip\");\nvar useTooltipContentProps = buildProps(_objectSpread(_objectSpread(_objectSpread({}, useDelayedToggleProps), usePopperContentProps), {}, {\n  appendTo: {\n    type: definePropType([String, Object]),\n    \"default\": POPPER_CONTAINER_SELECTOR\n  },\n  content: {\n    type: String,\n    \"default\": \"\"\n  },\n  rawContent: {\n    type: Boolean,\n    \"default\": false\n  },\n  persistent: Boolean,\n  ariaLabel: String,\n  visible: {\n    type: definePropType(Boolean),\n    \"default\": null\n  },\n  transition: {\n    type: String,\n    \"default\": \"\".concat(ns.namespace.value, \"-fade-in-linear\")\n  },\n  teleported: {\n    type: Boolean,\n    \"default\": true\n  },\n  disabled: {\n    type: Boolean\n  }\n}));\nvar useTooltipTriggerProps = buildProps(_objectSpread(_objectSpread({}, usePopperTriggerProps), {}, {\n  disabled: Boolean,\n  trigger: {\n    type: definePropType([String, Array]),\n    \"default\": \"hover\"\n  },\n  triggerKeys: {\n    type: definePropType(Array),\n    \"default\": function _default() {\n      return [EVENT_CODE.enter, EVENT_CODE.space];\n    }\n  }\n}));\nvar useTooltipProps = buildProps({\n  openDelay: {\n    type: Number\n  },\n  visibleArrow: {\n    type: Boolean,\n    \"default\": void 0\n  },\n  hideAfter: {\n    type: Number,\n    \"default\": 200\n  },\n  showArrow: {\n    type: Boolean,\n    \"default\": true\n  }\n});\nexport { useTooltipContentProps, useTooltipProps, useTooltipTriggerProps };","map":{"version":3,"mappings":";;;;;;;;;;;;;AAWA,IAAMA,QAAQ,GAAG,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,aAA5B,CAAjB;AACA,IAAMC,EAAE,GAAGC,YAAY,CAAC,SAAD,CAAvB;AACY,IAACC,sBAAsB,GAAGC,UAAU,+CAC3CC,qBAD2C,GAE3CC,qBAF2C;EAG9CC,QAAQ,EAAE;IACRC,IAAI,EAAEC,cAAc,CAAC,CAACC,MAAD,EAASC,MAAT,CAAD,CADZ;IAER,WAASC;EAFD,CAHoC;EAO9CC,OAAO,EAAE;IACPL,IAAI,EAAEE,MADC;IAEP,WAAS;EAFF,CAPqC;EAW9CI,UAAU,EAAE;IACVN,IAAI,EAAEO,OADI;IAEV,WAAS;EAFC,CAXkC;EAe9CC,UAAU,EAAED,OAfkC;EAgB9CE,SAAS,EAAEP,MAhBmC;EAiB9CQ,OAAO,EAAE;IACPV,IAAI,EAAEC,cAAc,CAACM,OAAD,CADb;IAEP,WAAS;EAFF,CAjBqC;EAqB9CI,UAAU,EAAE;IACVX,IAAI,EAAEE,MADI;IAEV,qBAAYT,EAAE,CAACmB,SAAH,CAAaC,KAAzB;EAFU,CArBkC;EAyB9CC,UAAU,EAAE;IACVd,IAAI,EAAEO,OADI;IAEV,WAAS;EAFC,CAzBkC;EA6B9CQ,QAAQ,EAAE;IACRf,IAAI,EAAEO;EADE;AA7BoC,GAApC;AAiCA,IAACS,sBAAsB,GAAGpB,UAAU,iCAC3CqB,qBAD2C;EAE9CF,QAAQ,EAAER,OAFoC;EAG9CW,OAAO,EAAE;IACPlB,IAAI,EAAEC,cAAc,CAAC,CAACC,MAAD,EAASiB,KAAT,CAAD,CADb;IAEP,WAAS;EAFF,CAHqC;EAO9CC,WAAW,EAAE;IACXpB,IAAI,EAAEC,cAAc,CAACkB,KAAD,CADT;IAEX,WAAS;MAAA,OAAM,CAACE,UAAU,CAACC,KAAZ,EAAmBD,UAAU,CAACE,KAA9B,CAAN;IAAA;EAFE;AAPiC,GAApC;AAYA,IAACC,eAAe,GAAG5B,UAAU,CAAC;EACxC6B,SAAS,EAAE;IACTzB,IAAI,EAAE0B;EADG,CAD6B;EAIxCC,YAAY,EAAE;IACZ3B,IAAI,EAAEO,OADM;IAEZ,WAAS,KAAK;EAFF,CAJ0B;EAQxCqB,SAAS,EAAE;IACT5B,IAAI,EAAE0B,MADG;IAET,WAAS;EAFA,CAR6B;EAYxCG,SAAS,EAAE;IACT7B,IAAI,EAAEO,OADG;IAET,WAAS;EAFA;AAZ6B,CAAD,CAA7B","names":["triggers","ns","useNamespace","useTooltipContentProps","buildProps","useDelayedToggleProps","usePopperContentProps","appendTo","type","definePropType","String","Object","POPPER_CONTAINER_SELECTOR","content","rawContent","Boolean","persistent","ariaLabel","visible","transition","namespace","value","teleported","disabled","useTooltipTriggerProps","usePopperTriggerProps","trigger","Array","triggerKeys","EVENT_CODE","enter","space","useTooltipProps","openDelay","Number","visibleArrow","hideAfter","showArrow"],"sources":["../../../../../../packages/components/tooltip/src/tooltip.ts"],"sourcesContent":["// @ts-nocheck\nimport { buildProps, definePropType } from '@element-plus/utils'\nimport {\n  usePopperContentProps,\n  usePopperTriggerProps,\n} from '@element-plus/components/popper'\nimport {\n  POPPER_CONTAINER_SELECTOR,\n  useDelayedToggleProps,\n  useNamespace,\n} from '@element-plus/hooks'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport type Tooltip from '../tooltip.vue'\n\nimport type { ExtractPropTypes } from 'vue'\n\nconst triggers = ['hover', 'focus', 'click', 'contextmenu'] as const\nconst ns = useNamespace('tooltip')\n\nexport type Trigger = typeof triggers[number]\n\nexport const useTooltipContentProps = buildProps({\n  ...useDelayedToggleProps,\n  ...usePopperContentProps,\n  appendTo: {\n    type: definePropType<string | HTMLElement>([String, Object]),\n    default: POPPER_CONTAINER_SELECTOR,\n  },\n  content: {\n    type: String,\n    default: '',\n  },\n  rawContent: {\n    type: Boolean,\n    default: false,\n  },\n  persistent: Boolean,\n  ariaLabel: String,\n  // because model toggle prop is generated dynamically\n  // so the typing cannot be evaluated by typescript as type:\n  // [name]: { type: Boolean, default: null }\n  // so we need to declare that again for type checking.\n  visible: {\n    type: definePropType<boolean | null>(Boolean),\n    default: null,\n  },\n  transition: {\n    type: String,\n    default: `${ns.namespace.value}-fade-in-linear`,\n  },\n  teleported: {\n    type: Boolean,\n    default: true,\n  },\n  disabled: {\n    type: Boolean,\n  },\n} as const)\n\nexport const useTooltipTriggerProps = buildProps({\n  ...usePopperTriggerProps,\n  disabled: Boolean,\n  trigger: {\n    type: definePropType<Trigger | Trigger[]>([String, Array]),\n    default: 'hover',\n  },\n  triggerKeys: {\n    type: definePropType<string[]>(Array),\n    default: () => [EVENT_CODE.enter, EVENT_CODE.space],\n  },\n} as const)\n\nexport const useTooltipProps = buildProps({\n  openDelay: {\n    type: Number,\n  },\n  visibleArrow: {\n    type: Boolean,\n    default: undefined,\n  },\n  hideAfter: {\n    type: Number,\n    default: 200,\n  },\n  showArrow: {\n    type: Boolean,\n    default: true,\n  },\n})\n\nexport type ElTooltipContentProps = ExtractPropTypes<\n  typeof useTooltipContentProps\n>\n\nexport type ElTooltipTriggerProps = ExtractPropTypes<\n  typeof useTooltipTriggerProps\n>\n\nexport type ElTooltipProps = ExtractPropTypes<typeof useTooltipProps> &\n  ElTooltipContentProps &\n  ElTooltipTriggerProps\n\nexport type TooltipInstance = InstanceType<typeof Tooltip>\n"]},"metadata":{},"sourceType":"module"}