{"ast":null,"code":"import _slicedToArray from \"/home/little/Documents/music_web/backandfrontsep/zhengdao-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\n\nvar useTimePanel = function useTimePanel(_ref) {\n  var getAvailableHours = _ref.getAvailableHours,\n      getAvailableMinutes = _ref.getAvailableMinutes,\n      getAvailableSeconds = _ref.getAvailableSeconds;\n\n  var getAvailableTime = function getAvailableTime(date, role, first, compareDate) {\n    var availableTimeGetters = {\n      hour: getAvailableHours,\n      minute: getAvailableMinutes,\n      second: getAvailableSeconds\n    };\n    var result = date;\n    [\"hour\", \"minute\", \"second\"].forEach(function (type) {\n      if (availableTimeGetters[type]) {\n        var availableTimeSlots;\n        var method = availableTimeGetters[type];\n\n        switch (type) {\n          case \"minute\":\n            {\n              availableTimeSlots = method(result.hour(), role, compareDate);\n              break;\n            }\n\n          case \"second\":\n            {\n              availableTimeSlots = method(result.hour(), result.minute(), role, compareDate);\n              break;\n            }\n\n          default:\n            {\n              availableTimeSlots = method(role, compareDate);\n              break;\n            }\n        }\n\n        if ((availableTimeSlots == null ? void 0 : availableTimeSlots.length) && !availableTimeSlots.includes(result[type]())) {\n          var pos = first ? 0 : availableTimeSlots.length - 1;\n          result = result[type](availableTimeSlots[pos]);\n        }\n      }\n    });\n    return result;\n  };\n\n  var timePickerOptions = {};\n\n  var onSetOption = function onSetOption(_ref2) {\n    var _ref3 = _slicedToArray(_ref2, 2),\n        key = _ref3[0],\n        val = _ref3[1];\n\n    timePickerOptions[key] = val;\n  };\n\n  return {\n    timePickerOptions: timePickerOptions,\n    getAvailableTime: getAvailableTime,\n    onSetOption: onSetOption\n  };\n};\n\nexport { useTimePanel };","map":{"version":3,"mappings":";;;;;;AAAY,IAACA,YAAY,GAAG,SAAfA,YAAe,OAItB;EAAA,IAHJC,iBAGI,QAHJA,iBAGI;EAAA,IAFJC,mBAEI,QAFJA,mBAEI;EAAA,IADJC,mBACI,QADJA,mBACI;;EACJ,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,IAAD,EAAOC,IAAP,EAAaC,KAAb,EAAoBC,WAApB,EAAoC;IAC3D,IAAMC,oBAAoB,GAAG;MAC3BC,IAAI,EAAET,iBADqB;MAE3BU,MAAM,EAAET,mBAFmB;MAG3BU,MAAM,EAAET;IAHmB,CAA7B;IAKA,IAAIU,MAAM,GAAGR,IAAb;IACA,CAAC,MAAD,EAAS,QAAT,EAAmB,QAAnB,EAA6BS,OAA7B,CAAqC,UAACC,IAAD,EAAU;MAC7C,IAAIN,oBAAoB,CAACM,IAAD,CAAxB,EAAgC;QAC9B,IAAIC,kBAAJ;QACA,IAAMC,MAAM,GAAGR,oBAAoB,CAACM,IAAD,CAAnC;;QACA,QAAQA,IAAR;UACE,KAAK,QAAL;YAAe;cACbC,kBAAkB,GAAGC,MAAM,CAACJ,MAAM,CAACH,IAAP,EAAD,EAAgBJ,IAAhB,EAAsBE,WAAtB,CAA3B;cACA;YACD;;UACD,KAAK,QAAL;YAAe;cACbQ,kBAAkB,GAAGC,MAAM,CAACJ,MAAM,CAACH,IAAP,EAAD,EAAgBG,MAAM,CAACF,MAAP,EAAhB,EAAiCL,IAAjC,EAAuCE,WAAvC,CAA3B;cACA;YACD;;UACD;YAAS;cACPQ,kBAAkB,GAAGC,MAAM,CAACX,IAAD,EAAOE,WAAP,CAA3B;cACA;YACD;QAZH;;QAcA,IAAI,CAACQ,kBAAkB,IAAI,IAAtB,GAA6B,KAAK,CAAlC,GAAsCA,kBAAkB,CAACE,MAA1D,KAAqE,CAACF,kBAAkB,CAACG,QAAnB,CAA4BN,MAAM,CAACE,IAAD,CAAN,EAA5B,CAA1E,EAAuH;UACrH,IAAMK,GAAG,GAAGb,KAAK,GAAG,CAAH,GAAOS,kBAAkB,CAACE,MAAnB,GAA4B,CAApD;UACAL,MAAM,GAAGA,MAAM,CAACE,IAAD,CAAN,CAAaC,kBAAkB,CAACI,GAAD,CAA/B,CAAT;QACD;MACF;IACF,CAvBD;IAwBA,OAAOP,MAAP;EACD,CAhCD;;EAiCA,IAAMQ,iBAAiB,GAAG,EAA1B;;EACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,QAAgB;IAAA;IAAA,IAAdC,GAAc;IAAA,IAATC,GAAS;;IAClCH,iBAAiB,CAACE,GAAD,CAAjB,GAAyBC,GAAzB;EACD,CAFD;;EAGA,OAAO;IACLH,iBAAiB,EAAjBA,iBADK;IAELjB,gBAAgB,EAAhBA,gBAFK;IAGLkB,WAAW,EAAXA;EAHK,CAAP;AAKF,CA/CY","names":["useTimePanel","getAvailableHours","getAvailableMinutes","getAvailableSeconds","getAvailableTime","date","role","first","compareDate","availableTimeGetters","hour","minute","second","result","forEach","type","availableTimeSlots","method","length","includes","pos","timePickerOptions","onSetOption","key","val"],"sources":["../../../../../../../packages/components/time-picker/src/composables/use-time-panel.ts"],"sourcesContent":["import type { Dayjs } from 'dayjs'\n\nimport type {\n  GetDisabledHoursState,\n  GetDisabledMinutesState,\n  GetDisabledSecondsState,\n} from '../types'\n\ntype UseTimePanelProps = {\n  getAvailableHours: GetDisabledHoursState\n  getAvailableMinutes: GetDisabledMinutesState\n  getAvailableSeconds: GetDisabledSecondsState\n}\n\nexport const useTimePanel = ({\n  getAvailableHours,\n  getAvailableMinutes,\n  getAvailableSeconds,\n}: UseTimePanelProps) => {\n  const getAvailableTime = (\n    date: Dayjs,\n    role: string,\n    first: boolean,\n    compareDate?: Dayjs\n  ) => {\n    const availableTimeGetters = {\n      hour: getAvailableHours,\n      minute: getAvailableMinutes,\n      second: getAvailableSeconds,\n    } as const\n    let result = date\n    ;(['hour', 'minute', 'second'] as const).forEach((type) => {\n      if (availableTimeGetters[type]) {\n        let availableTimeSlots: number[]\n        const method = availableTimeGetters[type]\n        switch (type) {\n          case 'minute': {\n            availableTimeSlots = (method as typeof getAvailableMinutes)(\n              result.hour(),\n              role,\n              compareDate\n            )\n            break\n          }\n          case 'second': {\n            availableTimeSlots = (method as typeof getAvailableSeconds)(\n              result.hour(),\n              result.minute(),\n              role,\n              compareDate\n            )\n            break\n          }\n          default: {\n            availableTimeSlots = (method as typeof getAvailableHours)(\n              role,\n              compareDate\n            )\n            break\n          }\n        }\n\n        if (\n          availableTimeSlots?.length &&\n          !availableTimeSlots.includes(result[type]())\n        ) {\n          const pos = first ? 0 : availableTimeSlots.length - 1\n          result = result[type](availableTimeSlots[pos]) as unknown as Dayjs\n        }\n      }\n    })\n    return result\n  }\n\n  const timePickerOptions: Record<string, (...args: any[]) => void> = {}\n\n  const onSetOption = ([key, val]: [string, (...args: any[]) => void]) => {\n    timePickerOptions[key] = val\n  }\n\n  return {\n    timePickerOptions,\n\n    getAvailableTime,\n    onSetOption,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}