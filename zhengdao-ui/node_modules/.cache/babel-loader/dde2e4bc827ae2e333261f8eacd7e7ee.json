{"ast":null,"code":"import \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport { isVNode, h } from 'vue';\nimport '../../../utils/index.mjs';\nimport { isArray, isFunction } from '@vue/shared';\nimport { addUnit } from '../../../utils/dom/style.mjs';\n\nvar sumReducer = function sumReducer(sum2, num) {\n  return sum2 + num;\n};\n\nvar sum = function sum(listLike) {\n  return isArray(listLike) ? listLike.reduce(sumReducer, 0) : listLike;\n};\n\nvar tryCall = function tryCall(fLike, params) {\n  var defaultRet = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return isFunction(fLike) ? fLike(params) : fLike != null ? fLike : defaultRet;\n};\n\nvar enforceUnit = function enforceUnit(style) {\n  ;\n  [\"width\", \"maxWidth\", \"minWidth\", \"height\"].forEach(function (key) {\n    style[key] = addUnit(style[key]);\n  });\n  return style;\n};\n\nvar componentToSlot = function componentToSlot(ComponentLike) {\n  return isVNode(ComponentLike) ? function (props) {\n    return h(ComponentLike, props);\n  } : ComponentLike;\n};\n\nexport { componentToSlot, enforceUnit, sum, tryCall };","map":{"version":3,"mappings":";;;;;;;;AAEA,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAOC,GAAP;EAAA,OAAeD,IAAI,GAAGC,GAAtB;AAAA,CAAnB;;AACY,IAACC,GAAG,GAAG,SAANA,GAAM,CAACC,QAAD,EAAc;EAC/B,OAAOC,OAAO,CAACD,QAAD,CAAP,GAAoBA,QAAQ,CAACE,MAAT,CAAgBN,UAAhB,EAA4B,CAA5B,CAApB,GAAqDI,QAA5D;AACF,CAFY;;AAGA,IAACG,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAoC;EAAA,IAApBC,UAAoB,uEAAP,EAAO;EACzD,OAAOC,UAAU,CAACH,KAAD,CAAV,GAAoBA,KAAK,CAACC,MAAD,CAAzB,GAAoCD,KAAK,IAAI,IAAT,GAAgBA,KAAhB,GAAwBE,UAAnE;AACF,CAFY;;AAGA,IAACE,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;EACpC;EACA,CAAC,OAAD,EAAU,UAAV,EAAsB,UAAtB,EAAkC,QAAlC,EAA4CC,OAA5C,CAAoD,UAACC,GAAD,EAAS;IAC3DF,KAAK,CAACE,GAAD,CAAL,GAAaC,OAAO,CAACH,KAAK,CAACE,GAAD,CAAN,CAApB;EACD,CAFD;EAGA,OAAOF,KAAP;AACF,CANY;;AAOA,IAACI,eAAe,GAAG,SAAlBA,eAAkB,CAACC,aAAD;EAAA,OAAmBC,OAAO,CAACD,aAAD,CAAP,GAAyB,UAACE,KAAD;IAAA,OAAWC,CAAC,CAACH,aAAD,EAAgBE,KAAhB,CAAZ;EAAA,CAAzB,GAA8DF,aAAjF;AAAA,CAAnB","names":["sumReducer","sum2","num","sum","listLike","isArray","reduce","tryCall","fLike","params","defaultRet","isFunction","enforceUnit","style","forEach","key","addUnit","componentToSlot","ComponentLike","isVNode","props","h"],"sources":["../../../../../../packages/components/table-v2/src/utils.ts"],"sourcesContent":["import { h, isVNode } from 'vue'\nimport { addUnit, isArray, isFunction } from '@element-plus/utils'\n\nimport type { CSSProperties, Component, Slot } from 'vue'\n\nconst sumReducer = (sum: number, num: number) => sum + num\n\nexport const sum = (listLike: number | number[]) => {\n  return isArray(listLike) ? listLike.reduce(sumReducer, 0) : listLike\n}\n\nexport const tryCall = <T>(\n  fLike: T,\n  params: T extends (...args: infer K) => unknown ? K : any,\n  defaultRet = {}\n) => {\n  return isFunction(fLike) ? fLike(params) : fLike ?? defaultRet\n}\n\nexport const enforceUnit = (style: CSSProperties) => {\n  ;(['width', 'maxWidth', 'minWidth', 'height'] as const).forEach((key) => {\n    style[key] = addUnit(style[key])\n  })\n\n  return style\n}\n\nexport const componentToSlot = <T>(\n  ComponentLike: JSX.Element | ((props: T) => Component<T>) | undefined\n) =>\n  isVNode(ComponentLike)\n    ? (props: T) => h(ComponentLike, props)\n    : (ComponentLike as Slot)\n"]},"metadata":{},"sourceType":"module"}