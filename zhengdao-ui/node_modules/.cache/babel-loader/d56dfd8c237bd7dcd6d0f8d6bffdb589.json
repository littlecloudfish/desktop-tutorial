{"ast":null,"code":"import _regeneratorRuntime from \"/home/little/Documents/music_web/backandfrontsep/zhengdao-ui/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/little/Documents/music_web/backandfrontsep/zhengdao-ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.number.is-nan.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport { ref, onMounted, nextTick } from 'vue';\nimport { useEventListener } from '@vueuse/core';\n\nvar useLifecycle = function useLifecycle(props, initData, resetSize) {\n  var sliderWrapper = ref();\n  onMounted( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (props.range) {\n              if (Array.isArray(props.modelValue)) {\n                initData.firstValue = Math.max(props.min, props.modelValue[0]);\n                initData.secondValue = Math.min(props.max, props.modelValue[1]);\n              } else {\n                initData.firstValue = props.min;\n                initData.secondValue = props.max;\n              }\n\n              initData.oldValue = [initData.firstValue, initData.secondValue];\n            } else {\n              if (typeof props.modelValue !== \"number\" || Number.isNaN(props.modelValue)) {\n                initData.firstValue = props.min;\n              } else {\n                initData.firstValue = Math.min(props.max, Math.max(props.min, props.modelValue));\n              }\n\n              initData.oldValue = initData.firstValue;\n            }\n\n            useEventListener(window, \"resize\", resetSize);\n            _context.next = 4;\n            return nextTick();\n\n          case 4:\n            resetSize();\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })));\n  return {\n    sliderWrapper: sliderWrapper\n  };\n};\n\nexport { useLifecycle };","map":{"version":3,"mappings":";;;;;;;;AAEY,IAACA,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAQC,QAAR,EAAkBC,SAAlB,EAAgC;EAC1D,IAAMC,aAAa,GAAGC,GAAG,EAAzB;EACAC,SAAS,0EAAC;IAAA;MAAA;QAAA;UAAA;YACR,IAAIL,KAAK,CAACM,KAAV,EAAiB;cACf,IAAIC,KAAK,CAACC,OAAN,CAAcR,KAAK,CAACS,UAApB,CAAJ,EAAqC;gBACnCR,QAAQ,CAACS,UAAT,GAAsBC,IAAI,CAACC,GAAL,CAASZ,KAAK,CAACa,GAAf,EAAoBb,KAAK,CAACS,UAAN,CAAiB,CAAjB,CAApB,CAAtB;gBACAR,QAAQ,CAACa,WAAT,GAAuBH,IAAI,CAACE,GAAL,CAASb,KAAK,CAACY,GAAf,EAAoBZ,KAAK,CAACS,UAAN,CAAiB,CAAjB,CAApB,CAAvB;cACD,CAHD,MAGO;gBACLR,QAAQ,CAACS,UAAT,GAAsBV,KAAK,CAACa,GAA5B;gBACAZ,QAAQ,CAACa,WAAT,GAAuBd,KAAK,CAACY,GAA7B;cACD;;cACDX,QAAQ,CAACc,QAAT,GAAoB,CAACd,QAAQ,CAACS,UAAV,EAAsBT,QAAQ,CAACa,WAA/B,CAApB;YACD,CATD,MASO;cACL,IAAI,OAAOd,KAAK,CAACS,UAAb,KAA4B,QAA5B,IAAwCO,MAAM,CAACC,KAAP,CAAajB,KAAK,CAACS,UAAnB,CAA5C,EAA4E;gBAC1ER,QAAQ,CAACS,UAAT,GAAsBV,KAAK,CAACa,GAA5B;cACD,CAFD,MAEO;gBACLZ,QAAQ,CAACS,UAAT,GAAsBC,IAAI,CAACE,GAAL,CAASb,KAAK,CAACY,GAAf,EAAoBD,IAAI,CAACC,GAAL,CAASZ,KAAK,CAACa,GAAf,EAAoBb,KAAK,CAACS,UAA1B,CAApB,CAAtB;cACD;;cACDR,QAAQ,CAACc,QAAT,GAAoBd,QAAQ,CAACS,UAA7B;YACD;;YACDQ,gBAAgB,CAACC,MAAD,EAAS,QAAT,EAAmBjB,SAAnB,CAAhB;YAlBQ;YAAA,OAmBFkB,QAAQ,EAnBN;;UAAA;YAoBRlB,SAAS;;UApBD;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAD,GAAT;EAsBA,OAAO;IACLC,aAAa,EAAbA;EADK,CAAP;AAGF,CA3BY","names":["useLifecycle","props","initData","resetSize","sliderWrapper","ref","onMounted","range","Array","isArray","modelValue","firstValue","Math","max","min","secondValue","oldValue","Number","isNaN","useEventListener","window","nextTick"],"sources":["../../../../../../../packages/components/slider/src/composables/use-lifecycle.ts"],"sourcesContent":["import { nextTick, onMounted, ref } from 'vue'\nimport { useEventListener } from '@vueuse/core'\nimport type { SliderInitData, SliderProps } from '../slider'\n\nexport const useLifecycle = (\n  props: SliderProps,\n  initData: SliderInitData,\n  resetSize: () => void\n) => {\n  const sliderWrapper = ref<HTMLElement>()\n\n  onMounted(async () => {\n    if (props.range) {\n      if (Array.isArray(props.modelValue)) {\n        initData.firstValue = Math.max(props.min, props.modelValue[0])\n        initData.secondValue = Math.min(props.max, props.modelValue[1])\n      } else {\n        initData.firstValue = props.min\n        initData.secondValue = props.max\n      }\n      initData.oldValue = [initData.firstValue, initData.secondValue]\n    } else {\n      if (\n        typeof props.modelValue !== 'number' ||\n        Number.isNaN(props.modelValue)\n      ) {\n        initData.firstValue = props.min\n      } else {\n        initData.firstValue = Math.min(\n          props.max,\n          Math.max(props.min, props.modelValue)\n        )\n      }\n      initData.oldValue = initData.firstValue\n    }\n\n    useEventListener(window, 'resize', resetSize)\n\n    await nextTick()\n    resetSize()\n  })\n\n  return {\n    sliderWrapper,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}