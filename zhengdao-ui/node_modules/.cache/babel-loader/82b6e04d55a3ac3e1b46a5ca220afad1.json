{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nvar _hoisted_1 = {\n  key: 0\n};\n\nvar _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", null, [/*#__PURE__*/_createElementVNode(\"strong\", null, \"hello\")], -1\n/* HOISTED */\n);\n\nvar _hoisted_3 = /*#__PURE__*/_createElementVNode(\"p\", null, null, -1\n/* HOISTED */\n);\n\nvar _hoisted_4 = [_hoisted_2, _hoisted_3];\nvar _hoisted_5 = {\n  key: 1\n};\nvar _hoisted_6 = {\n  key: 2\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [!$setup.loading && $setup.data && $setup.data.length ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.data, function (post) {\n    return _openBlock(), _createElementBlock(\"li\", null, _hoisted_4);\n  }), 256\n  /* UNKEYED_FRAGMENT */\n  ))])) : _createCommentVNode(\"v-if\", true), $setup.loading ? (_openBlock(), _createElementBlock(\"p\", _hoisted_5, \" Still loading.. \")) : _createCommentVNode(\"v-if\", true), $setup.error ? (_openBlock(), _createElementBlock(\"p\", _hoisted_6, \" error \")) : _createCommentVNode(\"v-if\", true)], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;;8BAGMA,oBAA6B,GAA7B,EAA6B,IAA7B,EAA6B,cAA1BA,oBAAsB,QAAtB,EAAsB,IAAtB,EAAQ,OAAR,CAA0B,CAA7B;;AAAA;;8BACAA,oBAAO,GAAP,EAAO,IAAP,EAAO,IAAP,EAAO;AAAA;AAAP;;kBADAC,YACAC;;;;;;;;8DAHOC,kBAAWA,eAAQA,YAAKC,wBAAnCC,oBAKK,IALL,EAKKC,UALL,EAKK,oBAJHD,oBAGKE,SAHL,EAGK,IAHL,EAGKC,YAHcL,WAGd,EAHkB,UAAZM,IAAY,EAAR;yBAAfJ,oBAGK,IAHL,EAGK,IAHL,EAGKK,UAHL;GAGK,CAHL;;EAAA,CAIG,EALL,wCAOSP,gCAATE,oBAEI,GAFJ,EAEIM,UAFJ,EAAkB,mBAAlB,wCAGSR,8BAATE,oBAGI,GAHJ,EAGIO,UAHJ,EAAgB,SAAhB","names":["_createElementVNode","_hoisted_2","_hoisted_3","$setup","length","_createElementBlock","_hoisted_1","_Fragment","_renderList","post","_hoisted_4","_hoisted_5","_hoisted_6"],"sourceRoot":"","sources":["/home/little/Documents/music_web/backandfrontsep/zhengdao-ui/src/components/Posts.vue"],"sourcesContent":["<template>\n  <ul v-if=\"!loading && data && data.length\">\n    <li v-for=\"post of data\">\n      <p><strong>hello</strong></p>\n      <p></p>\n    </li>\n  </ul>\n\n  <p v-if=\"loading\">\n   Still loading..\n  </p>\n  <p v-if=\"error\">\n    error\n\n  </p>\n</template>\n\n\n\n<script>\nimport { ref, computed, onMounted } from \"vue\";\nexport default {\n  name: 'Posts',\n  props: {\n  },\n  setup() {\n    const data = ref(null);\n    const loading = ref(true);\n    const error = ref(null);\n\n    function fetchData() {\n        loading.value = true;\n        // I prefer to use fetch\n        // you can use use axios as an alternative\n        return fetch('http://jsonplaceholder.typicode.com/posts', {\n            method: 'get',\n            headers: {\n            'content-type': 'application/json'\n            }\n        })\n            .then(res => {\n            // a non-200 response code\n            if (!res.ok) {\n                // create error instance with HTTP status text\n                const error = new Error(res.statusText);\n                error.json = res.json();\n                throw error;\n            }\n\n            return res.json();\n            })\n            .then(json => {\n            // set the response data\n            data.value = json.data;\n            })\n            .catch(err => {\n            error.value = err;\n            // In case a custom JSON error response was provided\n            if (err.json) {\n                return err.json.then(json => {\n                // set the JSON response message\n                error.value.message = json.message;\n                });\n            }\n            })\n            .then(() => {\n            loading.value = false;\n            });\n}\n\n    onMounted(() => {\n      fetchData();\n    });\n\n    return {\n      data,\n      loading,\n      error\n    };\n  }\n}\n</script>"]},"metadata":{},"sourceType":"module"}