{"ast":null,"code":"import _defineProperty from \"/home/little/Documents/music_web/backandfrontsep/zhengdao-ui/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nvar _inputEmits;\n\nimport \"core-js/modules/es.number.constructor.js\";\nimport { isString } from '@vue/shared';\nimport '../../../utils/index.mjs';\nimport '../../../constants/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';\nimport { useSizeProp } from '../../../hooks/use-common-props/index.mjs';\nimport { iconPropType } from '../../../utils/vue/icon.mjs';\nimport { mutable } from '../../../utils/typescript.mjs';\nimport { UPDATE_MODEL_EVENT } from '../../../constants/event.mjs';\nvar inputProps = buildProps({\n  id: {\n    type: String,\n    \"default\": void 0\n  },\n  size: useSizeProp,\n  disabled: Boolean,\n  modelValue: {\n    type: definePropType([String, Number, Object]),\n    \"default\": \"\"\n  },\n  type: {\n    type: String,\n    \"default\": \"text\"\n  },\n  resize: {\n    type: String,\n    values: [\"none\", \"both\", \"horizontal\", \"vertical\"]\n  },\n  autosize: {\n    type: definePropType([Boolean, Object]),\n    \"default\": false\n  },\n  autocomplete: {\n    type: String,\n    \"default\": \"off\"\n  },\n  formatter: {\n    type: Function\n  },\n  parser: {\n    type: Function\n  },\n  placeholder: {\n    type: String\n  },\n  form: {\n    type: String,\n    \"default\": \"\"\n  },\n  readonly: {\n    type: Boolean,\n    \"default\": false\n  },\n  clearable: {\n    type: Boolean,\n    \"default\": false\n  },\n  showPassword: {\n    type: Boolean,\n    \"default\": false\n  },\n  showWordLimit: {\n    type: Boolean,\n    \"default\": false\n  },\n  suffixIcon: {\n    type: iconPropType,\n    \"default\": \"\"\n  },\n  prefixIcon: {\n    type: iconPropType,\n    \"default\": \"\"\n  },\n  containerRole: {\n    type: String,\n    \"default\": void 0\n  },\n  label: {\n    type: String,\n    \"default\": void 0\n  },\n  tabindex: {\n    type: [String, Number],\n    \"default\": 0\n  },\n  validateEvent: {\n    type: Boolean,\n    \"default\": true\n  },\n  inputStyle: {\n    type: definePropType([Object, Array, String]),\n    \"default\": function _default() {\n      return mutable({});\n    }\n  }\n});\nvar inputEmits = (_inputEmits = {}, _defineProperty(_inputEmits, UPDATE_MODEL_EVENT, function (value) {\n  return isString(value);\n}), _defineProperty(_inputEmits, \"input\", function input(value) {\n  return isString(value);\n}), _defineProperty(_inputEmits, \"change\", function change(value) {\n  return isString(value);\n}), _defineProperty(_inputEmits, \"focus\", function focus(evt) {\n  return evt instanceof FocusEvent;\n}), _defineProperty(_inputEmits, \"blur\", function blur(evt) {\n  return evt instanceof FocusEvent;\n}), _defineProperty(_inputEmits, \"clear\", function clear() {\n  return true;\n}), _defineProperty(_inputEmits, \"mouseleave\", function mouseleave(evt) {\n  return evt instanceof MouseEvent;\n}), _defineProperty(_inputEmits, \"mouseenter\", function mouseenter(evt) {\n  return evt instanceof MouseEvent;\n}), _defineProperty(_inputEmits, \"keydown\", function keydown(evt) {\n  return evt instanceof Event;\n}), _defineProperty(_inputEmits, \"compositionstart\", function compositionstart(evt) {\n  return evt instanceof CompositionEvent;\n}), _defineProperty(_inputEmits, \"compositionupdate\", function compositionupdate(evt) {\n  return evt instanceof CompositionEvent;\n}), _defineProperty(_inputEmits, \"compositionend\", function compositionend(evt) {\n  return evt instanceof CompositionEvent;\n}), _inputEmits);\nexport { inputEmits, inputProps };","map":{"version":3,"mappings":"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","names":["inputProps","buildProps","id","type","String","size","useSizeProp","disabled","Boolean","modelValue","definePropType","Number","Object","resize","values","autosize","autocomplete","formatter","Function","parser","placeholder","form","readonly","clearable","showPassword","showWordLimit","suffixIcon","iconPropType","prefixIcon","containerRole","label","tabindex","validateEvent","inputStyle","Array","mutable","inputEmits","UPDATE_MODEL_EVENT","value","isString","evt","FocusEvent","MouseEvent","Event","CompositionEvent"],"sources":["../../../../../../packages/components/input/src/input.ts"],"sourcesContent":["import { isString } from '@vue/shared'\nimport {\n  buildProps,\n  definePropType,\n  iconPropType,\n  mutable,\n} from '@element-plus/utils'\nimport { UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport { useSizeProp } from '@element-plus/hooks'\nimport type Input from './input.vue'\nimport type { ExtractPropTypes, StyleValue } from 'vue'\n\nexport type InputAutoSize = { minRows?: number; maxRows?: number } | boolean\n\nexport const inputProps = buildProps({\n  id: {\n    type: String,\n    default: undefined,\n  },\n  size: useSizeProp,\n  disabled: Boolean,\n  modelValue: {\n    type: definePropType<string | number | null | undefined>([\n      String,\n      Number,\n      Object,\n    ]),\n    default: '',\n  },\n  type: {\n    type: String,\n    default: 'text',\n  },\n  resize: {\n    type: String,\n    values: ['none', 'both', 'horizontal', 'vertical'],\n  },\n  autosize: {\n    type: definePropType<InputAutoSize>([Boolean, Object]),\n    default: false,\n  },\n  autocomplete: {\n    type: String,\n    default: 'off',\n  },\n  formatter: {\n    type: Function,\n  },\n  parser: {\n    type: Function,\n  },\n  placeholder: {\n    type: String,\n  },\n  form: {\n    type: String,\n    default: '',\n  },\n  readonly: {\n    type: Boolean,\n    default: false,\n  },\n  clearable: {\n    type: Boolean,\n    default: false,\n  },\n  showPassword: {\n    type: Boolean,\n    default: false,\n  },\n  showWordLimit: {\n    type: Boolean,\n    default: false,\n  },\n  suffixIcon: {\n    type: iconPropType,\n    default: '',\n  },\n  prefixIcon: {\n    type: iconPropType,\n    default: '',\n  },\n  containerRole: {\n    type: String,\n    default: undefined,\n  },\n  label: {\n    type: String,\n    default: undefined,\n  },\n  tabindex: {\n    type: [String, Number],\n    default: 0,\n  },\n  validateEvent: {\n    type: Boolean,\n    default: true,\n  },\n  inputStyle: {\n    type: definePropType<StyleValue>([Object, Array, String]),\n    default: () => mutable({} as const),\n  },\n} as const)\nexport type InputProps = ExtractPropTypes<typeof inputProps>\n\nexport const inputEmits = {\n  [UPDATE_MODEL_EVENT]: (value: string) => isString(value),\n  input: (value: string) => isString(value),\n  change: (value: string) => isString(value),\n  focus: (evt: FocusEvent) => evt instanceof FocusEvent,\n  blur: (evt: FocusEvent) => evt instanceof FocusEvent,\n  clear: () => true,\n  mouseleave: (evt: MouseEvent) => evt instanceof MouseEvent,\n  mouseenter: (evt: MouseEvent) => evt instanceof MouseEvent,\n  // NOTE: when autofill by browser, the keydown event is instanceof Event, not KeyboardEvent\n  // relative bug report https://github.com/element-plus/element-plus/issues/6665\n  keydown: (evt: KeyboardEvent | Event) => evt instanceof Event,\n  compositionstart: (evt: CompositionEvent) => evt instanceof CompositionEvent,\n  compositionupdate: (evt: CompositionEvent) => evt instanceof CompositionEvent,\n  compositionend: (evt: CompositionEvent) => evt instanceof CompositionEvent,\n}\nexport type InputEmits = typeof inputEmits\n\nexport type InputInstance = InstanceType<typeof Input>\n"]},"metadata":{},"sourceType":"module"}