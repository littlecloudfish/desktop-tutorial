{"ast":null,"code":"import { LEFT_CHECK_CHANGE_EVENT, RIGHT_CHECK_CHANGE_EVENT } from '../transfer.mjs';\n\nvar useCheckedChange = function useCheckedChange(checkedState, emit) {\n  var onSourceCheckedChange = function onSourceCheckedChange(val, movedKeys) {\n    checkedState.leftChecked = val;\n    if (!movedKeys) return;\n    emit(LEFT_CHECK_CHANGE_EVENT, val, movedKeys);\n  };\n\n  var onTargetCheckedChange = function onTargetCheckedChange(val, movedKeys) {\n    checkedState.rightChecked = val;\n    if (!movedKeys) return;\n    emit(RIGHT_CHECK_CHANGE_EVENT, val, movedKeys);\n  };\n\n  return {\n    onSourceCheckedChange: onSourceCheckedChange,\n    onTargetCheckedChange: onTargetCheckedChange\n  };\n};\n\nexport { useCheckedChange };","map":{"version":3,"mappings":";;AACY,IAACA,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,YAAD,EAAeC,IAAf,EAAwB;EACtD,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,GAAD,EAAMC,SAAN,EAAoB;IAChDJ,YAAY,CAACK,WAAb,GAA2BF,GAA3B;IACA,IAAI,CAACC,SAAL,EACE;IACFH,IAAI,CAACK,uBAAD,EAA0BH,GAA1B,EAA+BC,SAA/B,CAAJ;EACD,CALD;;EAMA,IAAMG,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACJ,GAAD,EAAMC,SAAN,EAAoB;IAChDJ,YAAY,CAACQ,YAAb,GAA4BL,GAA5B;IACA,IAAI,CAACC,SAAL,EACE;IACFH,IAAI,CAACQ,wBAAD,EAA2BN,GAA3B,EAAgCC,SAAhC,CAAJ;EACD,CALD;;EAMA,OAAO;IACLF,qBAAqB,EAArBA,qBADK;IAELK,qBAAqB,EAArBA;EAFK,CAAP;AAIF,CAjBY","names":["useCheckedChange","checkedState","emit","onSourceCheckedChange","val","movedKeys","leftChecked","LEFT_CHECK_CHANGE_EVENT","onTargetCheckedChange","rightChecked","RIGHT_CHECK_CHANGE_EVENT"],"sources":["../../../../../../../packages/components/transfer/src/composables/use-checked-change.ts"],"sourcesContent":["import { LEFT_CHECK_CHANGE_EVENT, RIGHT_CHECK_CHANGE_EVENT } from '../transfer'\n\nimport type { SetupContext } from 'vue'\nimport type {\n  TransferCheckedState,\n  TransferEmits,\n  TransferKey,\n} from '../transfer'\n\nexport const useCheckedChange = (\n  checkedState: TransferCheckedState,\n  emit: SetupContext<TransferEmits>['emit']\n) => {\n  const onSourceCheckedChange = (\n    val: TransferKey[],\n    movedKeys?: TransferKey[]\n  ) => {\n    checkedState.leftChecked = val\n    if (!movedKeys) return\n    emit(LEFT_CHECK_CHANGE_EVENT, val, movedKeys)\n  }\n\n  const onTargetCheckedChange = (\n    val: TransferKey[],\n    movedKeys?: TransferKey[]\n  ) => {\n    checkedState.rightChecked = val\n    if (!movedKeys) return\n    emit(RIGHT_CHECK_CHANGE_EVENT, val, movedKeys)\n  }\n\n  return {\n    onSourceCheckedChange,\n    onTargetCheckedChange,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}