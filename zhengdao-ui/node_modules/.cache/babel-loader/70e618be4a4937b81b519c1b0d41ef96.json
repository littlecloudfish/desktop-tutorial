{"ast":null,"code":"import { defineComponent, ref, inject, computed, onBeforeUnmount, unref, watch, resolveComponent, openBlock, createBlock, Teleport, createVNode, Transition, withCtx, withDirectives, mergeProps, createCommentVNode, renderSlot, vShow } from 'vue';\nimport { onClickOutside } from '@vueuse/core';\nimport '../../popper/index.mjs';\nimport '../../../utils/index.mjs';\nimport { useTooltipContentProps } from './tooltip.mjs';\nimport { TOOLTIP_INJECTION_KEY } from './tokens.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport ElPopperContent from '../../popper/src/content2.mjs';\nimport { composeEventHandlers } from '../../../utils/dom/event.mjs';\n\nvar _sfc_main = defineComponent({\n  name: \"ElTooltipContent\",\n  components: {\n    ElPopperContent: ElPopperContent\n  },\n  inheritAttrs: false,\n  props: useTooltipContentProps,\n  setup: function setup(props) {\n    var contentRef = ref(null);\n    var intermediateOpen = ref(false);\n    var entering = ref(false);\n    var leaving = ref(false);\n    var destroyed = ref(false);\n\n    var _inject = inject(TOOLTIP_INJECTION_KEY, void 0),\n        controlled = _inject.controlled,\n        id = _inject.id,\n        open = _inject.open,\n        trigger = _inject.trigger,\n        onClose = _inject.onClose,\n        onOpen = _inject.onOpen,\n        onShow = _inject.onShow,\n        onHide = _inject.onHide,\n        onBeforeShow = _inject.onBeforeShow,\n        onBeforeHide = _inject.onBeforeHide;\n\n    var persistentRef = computed(function () {\n      if (process.env.NODE_ENV === \"test\") {\n        return true;\n      }\n\n      return props.persistent;\n    });\n    onBeforeUnmount(function () {\n      destroyed.value = true;\n    });\n    var shouldRender = computed(function () {\n      return unref(persistentRef) ? true : unref(open);\n    });\n    var shouldShow = computed(function () {\n      return props.disabled ? false : unref(open);\n    });\n    var contentStyle = computed(function () {\n      var _a;\n\n      return (_a = props.style) != null ? _a : {};\n    });\n    var ariaHidden = computed(function () {\n      return !unref(open);\n    });\n\n    var onTransitionLeave = function onTransitionLeave() {\n      onHide();\n    };\n\n    var stopWhenControlled = function stopWhenControlled() {\n      if (unref(controlled)) return true;\n    };\n\n    var onContentEnter = composeEventHandlers(stopWhenControlled, function () {\n      if (props.enterable && unref(trigger) === \"hover\") {\n        onOpen();\n      }\n    });\n    var onContentLeave = composeEventHandlers(stopWhenControlled, function () {\n      if (unref(trigger) === \"hover\") {\n        onClose();\n      }\n    });\n\n    var onBeforeEnter = function onBeforeEnter() {\n      var _a, _b;\n\n      (_b = (_a = contentRef.value) == null ? void 0 : _a.updatePopper) == null ? void 0 : _b.call(_a);\n      onBeforeShow == null ? void 0 : onBeforeShow();\n    };\n\n    var onBeforeLeave = function onBeforeLeave() {\n      onBeforeHide == null ? void 0 : onBeforeHide();\n    };\n\n    var onAfterShow = function onAfterShow() {\n      onShow();\n      stopHandle = onClickOutside(computed(function () {\n        var _a;\n\n        return (_a = contentRef.value) == null ? void 0 : _a.popperContentRef;\n      }), function () {\n        if (unref(controlled)) return;\n        var $trigger = unref(trigger);\n\n        if ($trigger !== \"hover\") {\n          onClose();\n        }\n      });\n    };\n\n    var onBlur = function onBlur() {\n      if (!props.virtualTriggering) {\n        onClose();\n      }\n    };\n\n    var stopHandle;\n    watch(function () {\n      return unref(open);\n    }, function (val) {\n      if (!val) {\n        stopHandle == null ? void 0 : stopHandle();\n      }\n    }, {\n      flush: \"post\"\n    });\n    return {\n      ariaHidden: ariaHidden,\n      entering: entering,\n      leaving: leaving,\n      id: id,\n      intermediateOpen: intermediateOpen,\n      contentStyle: contentStyle,\n      contentRef: contentRef,\n      destroyed: destroyed,\n      shouldRender: shouldRender,\n      shouldShow: shouldShow,\n      onClose: onClose,\n      open: open,\n      onAfterShow: onAfterShow,\n      onBeforeEnter: onBeforeEnter,\n      onBeforeLeave: onBeforeLeave,\n      onContentEnter: onContentEnter,\n      onContentLeave: onContentLeave,\n      onTransitionLeave: onTransitionLeave,\n      onBlur: onBlur\n    };\n  }\n});\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_popper_content = resolveComponent(\"el-popper-content\");\n\n  return openBlock(), createBlock(Teleport, {\n    disabled: !_ctx.teleported,\n    to: _ctx.appendTo\n  }, [createVNode(Transition, {\n    name: _ctx.transition,\n    onAfterLeave: _ctx.onTransitionLeave,\n    onBeforeEnter: _ctx.onBeforeEnter,\n    onAfterEnter: _ctx.onAfterShow,\n    onBeforeLeave: _ctx.onBeforeLeave\n  }, {\n    \"default\": withCtx(function () {\n      return [_ctx.shouldRender ? withDirectives((openBlock(), createBlock(_component_el_popper_content, mergeProps({\n        key: 0,\n        id: _ctx.id,\n        ref: \"contentRef\"\n      }, _ctx.$attrs, {\n        \"aria-label\": _ctx.ariaLabel,\n        \"aria-hidden\": _ctx.ariaHidden,\n        \"boundaries-padding\": _ctx.boundariesPadding,\n        \"fallback-placements\": _ctx.fallbackPlacements,\n        \"gpu-acceleration\": _ctx.gpuAcceleration,\n        offset: _ctx.offset,\n        placement: _ctx.placement,\n        \"popper-options\": _ctx.popperOptions,\n        strategy: _ctx.strategy,\n        effect: _ctx.effect,\n        enterable: _ctx.enterable,\n        pure: _ctx.pure,\n        \"popper-class\": _ctx.popperClass,\n        \"popper-style\": [_ctx.popperStyle, _ctx.contentStyle],\n        \"reference-el\": _ctx.referenceEl,\n        \"trigger-target-el\": _ctx.triggerTargetEl,\n        visible: _ctx.shouldShow,\n        \"z-index\": _ctx.zIndex,\n        onMouseenter: _ctx.onContentEnter,\n        onMouseleave: _ctx.onContentLeave,\n        onBlur: _ctx.onBlur,\n        onClose: _ctx.onClose\n      }), {\n        \"default\": withCtx(function () {\n          return [createCommentVNode(\" Workaround bug #6378 \"), !_ctx.destroyed ? renderSlot(_ctx.$slots, \"default\", {\n            key: 0\n          }) : createCommentVNode(\"v-if\", true)];\n        }),\n        _: 3\n      }, 16, [\"id\", \"aria-label\", \"aria-hidden\", \"boundaries-padding\", \"fallback-placements\", \"gpu-acceleration\", \"offset\", \"placement\", \"popper-options\", \"strategy\", \"effect\", \"enterable\", \"pure\", \"popper-class\", \"popper-style\", \"reference-el\", \"trigger-target-el\", \"visible\", \"z-index\", \"onMouseenter\", \"onMouseleave\", \"onBlur\", \"onClose\"])), [[vShow, _ctx.shouldShow]]) : createCommentVNode(\"v-if\", true)];\n    }),\n    _: 3\n  }, 8, [\"name\", \"onAfterLeave\", \"onBeforeEnter\", \"onAfterEnter\", \"onBeforeLeave\"])], 8, [\"disabled\", \"to\"]);\n}\n\nvar ElTooltipContent = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/tooltip/src/content.vue\"]]);\n\nexport { ElTooltipContent as default };","map":{"version":3,"mappings":"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","names":["_sfc_main","defineComponent","name","components","ElPopperContent","inheritAttrs","props","setup","ref","inject","TOOLTIP_INJECTION_KEY","controlled","id","open","trigger","onClose","onOpen","onShow","onHide","onBeforeShow","onBeforeHide","computed","env","NODE_ENV","onBeforeUnmount","destroyed","value","unref","contentStyle","_a","onTransitionLeave","_b","onAfterShow","stopHandle","watch","flush","ariaHidden","entering","leaving","intermediateOpen","contentRef","shouldRender","shouldShow","onBeforeEnter","onBeforeLeave","onContentEnter","onContentLeave","_component_el_popper_content","_openBlock","disabled","to","_ctx","_createVNode","onAfterEnter","_withCtx","_withDirectives","key","offset","placement","strategy","effect","enterable","pure","visible","onMouseleave","onBlur"],"sources":["../../../../../../packages/components/tooltip/src/content.vue"],"sourcesContent":["<template>\n  <teleport :disabled=\"!teleported\" :to=\"appendTo\">\n    <transition\n      :name=\"transition\"\n      @after-leave=\"onTransitionLeave\"\n      @before-enter=\"onBeforeEnter\"\n      @after-enter=\"onAfterShow\"\n      @before-leave=\"onBeforeLeave\"\n    >\n      <el-popper-content\n        v-if=\"shouldRender\"\n        v-show=\"shouldShow\"\n        :id=\"id\"\n        ref=\"contentRef\"\n        v-bind=\"$attrs\"\n        :aria-label=\"ariaLabel\"\n        :aria-hidden=\"ariaHidden\"\n        :boundaries-padding=\"boundariesPadding\"\n        :fallback-placements=\"fallbackPlacements\"\n        :gpu-acceleration=\"gpuAcceleration\"\n        :offset=\"offset\"\n        :placement=\"placement\"\n        :popper-options=\"popperOptions\"\n        :strategy=\"strategy\"\n        :effect=\"effect\"\n        :enterable=\"enterable\"\n        :pure=\"pure\"\n        :popper-class=\"popperClass\"\n        :popper-style=\"[popperStyle, contentStyle]\"\n        :reference-el=\"referenceEl\"\n        :trigger-target-el=\"triggerTargetEl\"\n        :visible=\"shouldShow\"\n        :z-index=\"zIndex\"\n        @mouseenter=\"onContentEnter\"\n        @mouseleave=\"onContentLeave\"\n        @blur=\"onBlur\"\n        @close=\"onClose\"\n      >\n        <!-- Workaround bug #6378 -->\n        <template v-if=\"!destroyed\">\n          <slot />\n        </template>\n      </el-popper-content>\n    </transition>\n  </teleport>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  inject,\n  onBeforeUnmount,\n  ref,\n  unref,\n  watch,\n} from 'vue'\nimport { onClickOutside } from '@vueuse/core'\nimport { ElPopperContent } from '@element-plus/components/popper'\nimport { composeEventHandlers } from '@element-plus/utils'\n\nimport { useTooltipContentProps } from './tooltip'\nimport { TOOLTIP_INJECTION_KEY } from './tokens'\n\nexport default defineComponent({\n  name: 'ElTooltipContent',\n  components: {\n    ElPopperContent,\n  },\n  inheritAttrs: false,\n  props: useTooltipContentProps,\n  setup(props) {\n    const contentRef = ref<InstanceType<typeof ElPopperContent> | null>(null)\n    const intermediateOpen = ref(false)\n    const entering = ref(false)\n    const leaving = ref(false)\n    const destroyed = ref(false)\n    const {\n      controlled,\n      id,\n      open,\n      trigger,\n      onClose,\n      onOpen,\n      onShow,\n      onHide,\n      onBeforeShow,\n      onBeforeHide,\n    } = inject(TOOLTIP_INJECTION_KEY, undefined)!\n    const persistentRef = computed(() => {\n      // For testing, we would always want the content to be rendered\n      // to the DOM, so we need to return true here.\n      if (process.env.NODE_ENV === 'test') {\n        return true\n      }\n      return props.persistent\n    })\n\n    onBeforeUnmount(() => {\n      destroyed.value = true\n    })\n\n    const shouldRender = computed(() => {\n      return unref(persistentRef) ? true : unref(open)\n    })\n\n    const shouldShow = computed(() => {\n      return props.disabled ? false : unref(open)\n    })\n\n    const contentStyle = computed(() => (props.style ?? {}) as any)\n\n    const ariaHidden = computed(() => !unref(open))\n\n    const onTransitionLeave = () => {\n      onHide()\n    }\n\n    const stopWhenControlled = () => {\n      if (unref(controlled)) return true\n    }\n\n    const onContentEnter = composeEventHandlers(stopWhenControlled, () => {\n      if (props.enterable && unref(trigger) === 'hover') {\n        onOpen()\n      }\n    })\n\n    const onContentLeave = composeEventHandlers(stopWhenControlled, () => {\n      if (unref(trigger) === 'hover') {\n        onClose()\n      }\n    })\n\n    const onBeforeEnter = () => {\n      contentRef.value?.updatePopper?.()\n      onBeforeShow?.()\n    }\n\n    const onBeforeLeave = () => {\n      onBeforeHide?.()\n    }\n\n    const onAfterShow = () => {\n      onShow()\n      stopHandle = onClickOutside(\n        computed(() => {\n          return contentRef.value?.popperContentRef\n        }),\n        () => {\n          if (unref(controlled)) return\n          const $trigger = unref(trigger)\n          if ($trigger !== 'hover') {\n            onClose()\n          }\n        }\n      )\n    }\n\n    const onBlur = () => {\n      if (!props.virtualTriggering) {\n        onClose()\n      }\n    }\n\n    let stopHandle: ReturnType<typeof onClickOutside>\n\n    watch(\n      () => unref(open),\n      (val) => {\n        if (!val) {\n          stopHandle?.()\n        }\n      },\n      {\n        flush: 'post',\n      }\n    )\n\n    return {\n      ariaHidden,\n      entering,\n      leaving,\n      id,\n      intermediateOpen,\n      contentStyle,\n      contentRef,\n      destroyed,\n      shouldRender,\n      shouldShow,\n      onClose,\n      open,\n      onAfterShow,\n      onBeforeEnter,\n      onBeforeLeave,\n      onContentEnter,\n      onContentLeave,\n      onTransitionLeave,\n      onBlur,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}