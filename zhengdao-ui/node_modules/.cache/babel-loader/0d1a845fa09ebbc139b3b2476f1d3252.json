{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nvar _hoisted_1 = /*#__PURE__*/_createElementVNode(\"p\", {\n  style: {\n    \"color\": \"beige\"\n  }\n}, \"Music Name:\", -1\n/* HOISTED */\n);\n\nvar _hoisted_2 = {\n  style: {\n    \"color\": \"beige\",\n    \"padding-bottom\": \"3px\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, [_hoisted_1, _createElementVNode(\"p\", _hoisted_2, _toDisplayString($data.currentAudioName || $setup.audioList[0].name), 1\n  /* TEXT */\n  )]), _createCommentVNode(\" {{audioList[0].url}} \")], 2112\n  /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;8BAEUA,oBAAwC,GAAxC,EAAwC;EAArCC,KAAqB,EAArB;IAAA;EAAA;AAAqC,CAAxC,EAAyB,aAAzB,EAAoC;AAAA;AAApC;;;EACGA,KAA0C,EAA1C;IAAA;IAAA;EAAA;;;6DAFLD,oBAGM,KAHN,EAGM,IAHN,EAGM,CAFJE,UAEI,EADJF,oBAA6F,GAA7F,cAA6FG,iBAA5CC,0BAAoBC,iBAAS,CAAT,EAAaC,IAAW,CAA7F,EAAsF;EAAA;EAAtF,CACI,CAHN,GAIJC","names":["_createElementVNode","style","_hoisted_1","_toDisplayString","$data","$setup","name","_createCommentVNode"],"sourceRoot":"","sources":["/home/little/Documents/music_web/startproj/zhengdao-ui/src/components/layout/userinfo.vue"],"sourcesContent":["<template>\n        <div>\n          <p style = \"color:beige\">Music Name:</p>\n          <p style = \"color:beige; padding-bottom:3px;\">{{ currentAudioName || audioList[0].name }}</p>\n        </div>\n    <!-- {{audioList[0].url}} -->\n</template>\n <script> \n  import {useStore} from 'vuex'\n  import {inject} from 'vue'\n  import {computed} from 'vue'\n  import {mapGetters} from 'vuex'\n  export default {\n    inject:['userid'],\n    async setup (){\n        const store = useStore()\n        await store.dispatch('userInfo/personinfo', inject('useris'))\n        const userinfomation = await store.getters['userInfo/personinfo']\n        \n        return{\n            userinfomation,\n            audioList,\n\n        }\n    },\n    data() {\n      return {\n        currentAudioName: '',\n        \n        otherList:[],\n        dataready:false,\n      }\n    },\n    methods: {\n     \n    },\n    async beforeUpdate(){\n        this.otherList = audioList;\n      },\n    \n  }\n  </script>\n\n  <style scoped>\n \n  </style>"]},"metadata":{},"sourceType":"module"}