{"ast":null,"code":"import _objectSpread from \"/home/little/Documents/music_web/backandfrontsep/zhengdao-ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport '../../../../utils/index.mjs';\nimport '../../../../hooks/index.mjs';\nimport { CircleClose } from '@element-plus/icons-vue';\nimport { disabledTimeListsProps } from '../props/shared.mjs';\nimport { buildProps, definePropType } from '../../../../utils/vue/props/runtime.mjs';\nimport { useSizeProp } from '../../../../hooks/use-common-props/index.mjs';\nvar timePickerDefaultProps = buildProps(_objectSpread(_objectSpread({\n  id: {\n    type: definePropType([Array, String])\n  },\n  name: {\n    type: definePropType([Array, String]),\n    \"default\": \"\"\n  },\n  popperClass: {\n    type: String,\n    \"default\": \"\"\n  },\n  format: String,\n  valueFormat: String,\n  type: {\n    type: String,\n    \"default\": \"\"\n  },\n  clearable: {\n    type: Boolean,\n    \"default\": true\n  },\n  clearIcon: {\n    type: definePropType([String, Object]),\n    \"default\": CircleClose\n  },\n  editable: {\n    type: Boolean,\n    \"default\": true\n  },\n  prefixIcon: {\n    type: definePropType([String, Object]),\n    \"default\": \"\"\n  },\n  size: useSizeProp,\n  readonly: {\n    type: Boolean,\n    \"default\": false\n  },\n  disabled: {\n    type: Boolean,\n    \"default\": false\n  },\n  placeholder: {\n    type: String,\n    \"default\": \"\"\n  },\n  popperOptions: {\n    type: definePropType(Object),\n    \"default\": function _default() {\n      return {};\n    }\n  },\n  modelValue: {\n    type: definePropType([Date, Array, String, Number]),\n    \"default\": \"\"\n  },\n  rangeSeparator: {\n    type: String,\n    \"default\": \"-\"\n  },\n  startPlaceholder: String,\n  endPlaceholder: String,\n  defaultValue: {\n    type: definePropType([Date, Array])\n  },\n  defaultTime: {\n    type: definePropType([Date, Array])\n  },\n  isRange: {\n    type: Boolean,\n    \"default\": false\n  }\n}, disabledTimeListsProps), {}, {\n  disabledDate: {\n    type: Function\n  },\n  cellClassName: {\n    type: Function\n  },\n  shortcuts: {\n    type: Array,\n    \"default\": function _default() {\n      return [];\n    }\n  },\n  arrowControl: {\n    type: Boolean,\n    \"default\": false\n  },\n  label: {\n    type: String,\n    \"default\": void 0\n  },\n  tabindex: {\n    type: definePropType([String, Number]),\n    \"default\": 0\n  },\n  validateEvent: {\n    type: Boolean,\n    \"default\": true\n  },\n  unlinkPanels: Boolean\n}));\nexport { timePickerDefaultProps };","map":{"version":3,"mappings":"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","names":["timePickerDefaultProps","buildProps","id","type","definePropType","Array","String","name","popperClass","format","valueFormat","clearable","Boolean","clearIcon","Object","CircleClose","editable","prefixIcon","size","useSizeProp","readonly","disabled","placeholder","popperOptions","modelValue","Date","Number","rangeSeparator","startPlaceholder","endPlaceholder","defaultValue","defaultTime","isRange","disabledTimeListsProps","disabledDate","Function","cellClassName","shortcuts","arrowControl","label","tabindex","validateEvent","unlinkPanels"],"sources":["../../../../../../../packages/components/time-picker/src/common/props.ts"],"sourcesContent":["import { buildProps, definePropType } from '@element-plus/utils'\nimport { useSizeProp } from '@element-plus/hooks'\nimport { CircleClose } from '@element-plus/icons-vue'\nimport { disabledTimeListsProps } from '../props/shared'\n\nimport type { Component, ExtractPropTypes } from 'vue'\nimport type { Options } from '@popperjs/core'\nimport type { Dayjs } from 'dayjs'\n\nexport type SingleOrRange<T> = T | [T, T]\nexport type DateModelType = number | string | Date\nexport type ModelValueType = SingleOrRange<DateModelType>\nexport type DayOrDays = SingleOrRange<Dayjs>\nexport type DateOrDates = SingleOrRange<Date>\nexport type UserInput = SingleOrRange<string | null>\nexport type GetDisabledHours = (role: string, comparingDate?: Dayjs) => number[]\nexport type GetDisabledMinutes = (\n  hour: number,\n  role: string,\n  comparingDate?: Dayjs\n) => number[]\nexport type GetDisabledSeconds = (\n  hour: number,\n  minute: number,\n  role: string,\n  comparingDate?: Dayjs\n) => number[]\n\nexport const timePickerDefaultProps = buildProps({\n  id: {\n    type: definePropType<SingleOrRange<string>>([Array, String]),\n  },\n  name: {\n    type: definePropType<SingleOrRange<string>>([Array, String]),\n    default: '',\n  },\n  popperClass: {\n    type: String,\n    default: '',\n  },\n  format: String,\n  valueFormat: String,\n  type: {\n    type: String,\n    default: '',\n  },\n  clearable: {\n    type: Boolean,\n    default: true,\n  },\n  clearIcon: {\n    type: definePropType<string | Component>([String, Object]),\n    default: CircleClose,\n  },\n  editable: {\n    type: Boolean,\n    default: true,\n  },\n  prefixIcon: {\n    type: definePropType<string | Component>([String, Object]),\n    default: '',\n  },\n  size: useSizeProp,\n  readonly: {\n    type: Boolean,\n    default: false,\n  },\n  disabled: {\n    type: Boolean,\n    default: false,\n  },\n  placeholder: {\n    type: String,\n    default: '',\n  },\n  popperOptions: {\n    type: definePropType<Partial<Options>>(Object),\n    default: () => ({}),\n  },\n  modelValue: {\n    type: definePropType<ModelValueType>([Date, Array, String, Number]),\n    default: '',\n  },\n  rangeSeparator: {\n    type: String,\n    default: '-',\n  },\n  startPlaceholder: String,\n  endPlaceholder: String,\n  defaultValue: {\n    type: definePropType<SingleOrRange<Date>>([Date, Array]),\n  },\n  defaultTime: {\n    type: definePropType<SingleOrRange<Date>>([Date, Array]),\n  },\n  isRange: {\n    type: Boolean,\n    default: false,\n  },\n  ...disabledTimeListsProps,\n  disabledDate: {\n    type: Function,\n  },\n  cellClassName: {\n    type: Function,\n  },\n  shortcuts: {\n    type: Array,\n    default: () => [],\n  },\n  arrowControl: {\n    type: Boolean,\n    default: false,\n  },\n  label: {\n    type: String,\n    default: undefined,\n  },\n  tabindex: {\n    type: definePropType<string | number>([String, Number]),\n    default: 0,\n  },\n  validateEvent: {\n    type: Boolean,\n    default: true,\n  },\n  unlinkPanels: Boolean,\n} as const)\n\nexport type TimePickerDefaultProps = ExtractPropTypes<\n  typeof timePickerDefaultProps\n>\n\nexport interface PickerOptions {\n  isValidValue: (date: DayOrDays) => boolean\n  handleKeydownInput: (event: KeyboardEvent) => void\n  parseUserInput: (value: UserInput) => DayOrDays\n  formatToString: (value: DayOrDays) => UserInput\n  getRangeAvailableTime: (date: DayOrDays) => DayOrDays\n  getDefaultValue: () => DayOrDays\n  panelReady: boolean\n  handleClear: () => void\n  handleFocusPicker?: () => void\n}\n"]},"metadata":{},"sourceType":"module"}