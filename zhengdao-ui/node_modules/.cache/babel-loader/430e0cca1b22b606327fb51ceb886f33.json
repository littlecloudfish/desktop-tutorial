{"ast":null,"code":"import \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport { ref, watch } from 'vue';\nimport { makeList } from '../utils.mjs';\n\nvar makeAvailableArr = function makeAvailableArr(disabledList) {\n  var trueOrNumber = function trueOrNumber(isDisabled, index) {\n    return isDisabled || index;\n  };\n\n  var getNumber = function getNumber(predicate) {\n    return predicate !== true;\n  };\n\n  return disabledList.map(trueOrNumber).filter(getNumber);\n};\n\nvar getTimeLists = function getTimeLists(disabledHours, disabledMinutes, disabledSeconds) {\n  var getHoursList = function getHoursList(role, compare) {\n    return makeList(24, disabledHours && function () {\n      return disabledHours == null ? void 0 : disabledHours(role, compare);\n    });\n  };\n\n  var getMinutesList = function getMinutesList(hour, role, compare) {\n    return makeList(60, disabledMinutes && function () {\n      return disabledMinutes == null ? void 0 : disabledMinutes(hour, role, compare);\n    });\n  };\n\n  var getSecondsList = function getSecondsList(hour, minute, role, compare) {\n    return makeList(60, disabledSeconds && function () {\n      return disabledSeconds == null ? void 0 : disabledSeconds(hour, minute, role, compare);\n    });\n  };\n\n  return {\n    getHoursList: getHoursList,\n    getMinutesList: getMinutesList,\n    getSecondsList: getSecondsList\n  };\n};\n\nvar buildAvailableTimeSlotGetter = function buildAvailableTimeSlotGetter(disabledHours, disabledMinutes, disabledSeconds) {\n  var _getTimeLists = getTimeLists(disabledHours, disabledMinutes, disabledSeconds),\n      getHoursList = _getTimeLists.getHoursList,\n      getMinutesList = _getTimeLists.getMinutesList,\n      getSecondsList = _getTimeLists.getSecondsList;\n\n  var getAvailableHours = function getAvailableHours(role, compare) {\n    return makeAvailableArr(getHoursList(role, compare));\n  };\n\n  var getAvailableMinutes = function getAvailableMinutes(hour, role, compare) {\n    return makeAvailableArr(getMinutesList(hour, role, compare));\n  };\n\n  var getAvailableSeconds = function getAvailableSeconds(hour, minute, role, compare) {\n    return makeAvailableArr(getSecondsList(hour, minute, role, compare));\n  };\n\n  return {\n    getAvailableHours: getAvailableHours,\n    getAvailableMinutes: getAvailableMinutes,\n    getAvailableSeconds: getAvailableSeconds\n  };\n};\n\nvar useOldValue = function useOldValue(props) {\n  var oldValue = ref(props.parsedValue);\n  watch(function () {\n    return props.visible;\n  }, function (val) {\n    if (!val) {\n      oldValue.value = props.parsedValue;\n    }\n  });\n  return oldValue;\n};\n\nexport { buildAvailableTimeSlotGetter, getTimeLists, useOldValue };","map":{"version":3,"mappings":"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","names":["makeAvailableArr","disabledList","trueOrNumber","isDisabled","index","getNumber","predicate","map","filter","getTimeLists","disabledHours","disabledMinutes","disabledSeconds","getHoursList","role","compare","makeList","getMinutesList","hour","getSecondsList","minute","buildAvailableTimeSlotGetter","getAvailableHours","getAvailableMinutes","getAvailableSeconds","useOldValue","props","oldValue","ref","parsedValue","watch","visible","val","value"],"sources":["../../../../../../../packages/components/time-picker/src/composables/use-time-picker.ts"],"sourcesContent":["import { ref, watch } from 'vue'\nimport { makeList } from '../utils'\n\nimport type { Dayjs } from 'dayjs'\nimport type {\n  GetDisabledHoursState,\n  GetDisabledMinutesState,\n  GetDisabledSecondsState,\n} from '../types'\nimport type {\n  GetDisabledHours,\n  GetDisabledMinutes,\n  GetDisabledSeconds,\n} from '../props/shared'\n\nconst makeAvailableArr = (disabledList: boolean[]): number[] => {\n  const trueOrNumber = (isDisabled: boolean, index: number) =>\n    isDisabled || index\n\n  const getNumber = (predicate: number | true): predicate is number =>\n    predicate !== true\n\n  return disabledList.map(trueOrNumber).filter(getNumber)\n}\n\nexport const getTimeLists = (\n  disabledHours?: GetDisabledHours,\n  disabledMinutes?: GetDisabledMinutes,\n  disabledSeconds?: GetDisabledSeconds\n) => {\n  const getHoursList = (role: string, compare?: Dayjs) => {\n    return makeList(24, disabledHours && (() => disabledHours?.(role, compare)))\n  }\n\n  const getMinutesList = (hour: number, role: string, compare?: Dayjs) => {\n    return makeList(\n      60,\n      disabledMinutes && (() => disabledMinutes?.(hour, role, compare))\n    )\n  }\n\n  const getSecondsList = (\n    hour: number,\n    minute: number,\n    role: string,\n    compare?: Dayjs\n  ) => {\n    return makeList(\n      60,\n      disabledSeconds && (() => disabledSeconds?.(hour, minute, role, compare))\n    )\n  }\n\n  return {\n    getHoursList,\n    getMinutesList,\n    getSecondsList,\n  }\n}\n\nexport const buildAvailableTimeSlotGetter = (\n  disabledHours: GetDisabledHours,\n  disabledMinutes: GetDisabledMinutes,\n  disabledSeconds: GetDisabledSeconds\n) => {\n  const { getHoursList, getMinutesList, getSecondsList } = getTimeLists(\n    disabledHours,\n    disabledMinutes,\n    disabledSeconds\n  )\n\n  const getAvailableHours: GetDisabledHoursState = (role, compare?) => {\n    return makeAvailableArr(getHoursList(role, compare))\n  }\n\n  const getAvailableMinutes: GetDisabledMinutesState = (\n    hour,\n    role,\n    compare?\n  ) => {\n    return makeAvailableArr(getMinutesList(hour, role, compare))\n  }\n\n  const getAvailableSeconds: GetDisabledSecondsState = (\n    hour,\n    minute,\n    role,\n    compare?\n  ) => {\n    return makeAvailableArr(getSecondsList(hour, minute, role, compare))\n  }\n\n  return {\n    getAvailableHours,\n    getAvailableMinutes,\n    getAvailableSeconds,\n  }\n}\n\nexport const useOldValue = (props: {\n  parsedValue?: string | Dayjs | Dayjs[]\n  visible: boolean\n}) => {\n  const oldValue = ref(props.parsedValue)\n\n  watch(\n    () => props.visible,\n    (val) => {\n      if (!val) {\n        oldValue.value = props.parsedValue\n      }\n    }\n  )\n\n  return oldValue\n}\n"]},"metadata":{},"sourceType":"module"}