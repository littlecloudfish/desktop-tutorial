{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport { defineComponent, inject, toRef, ref, computed, unref, openBlock, createElementBlock, normalizeClass, createElementVNode, renderSlot, Fragment, renderList, toDisplayString, createCommentVNode, createVNode, withDirectives, withCtx, createBlock, createTextVNode } from 'vue';\nimport dayjs from 'dayjs';\nimport '../../../../directives/index.mjs';\nimport '../../../../utils/index.mjs';\nimport '../../../../hooks/index.mjs';\nimport { ElButton } from '../../../button/index.mjs';\nimport { ElInput } from '../../../input/index.mjs';\nimport '../../../time-picker/index.mjs';\nimport { ElIcon } from '../../../icon/index.mjs';\nimport { ArrowRight, DArrowLeft, ArrowLeft, DArrowRight } from '@element-plus/icons-vue';\nimport { panelDateRangeProps } from '../props/panel-date-range.mjs';\nimport { useRangePicker } from '../composables/use-range-picker.mjs';\nimport { isValidRange, getDefaultValue } from '../utils.mjs';\nimport DateTable from './basic-date-table.mjs';\nimport _export_sfc from '../../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useLocale } from '../../../../hooks/use-locale/index.mjs';\nimport { extractTimeFormat, extractDateFormat } from '../../../time-picker/src/utils.mjs';\nimport { isArray } from '@vue/shared';\nimport TimePickPanel from '../../../time-picker/src/time-picker-com/panel-time-pick.mjs';\nimport ClickOutside from '../../../../directives/click-outside/index.mjs';\nvar _hoisted_1 = [\"onClick\"];\nvar _hoisted_2 = [\"disabled\"];\nvar _hoisted_3 = [\"disabled\"];\nvar _hoisted_4 = [\"disabled\"];\nvar _hoisted_5 = [\"disabled\"];\n\nvar _sfc_main = /* @__PURE__ */defineComponent({\n  __name: \"panel-date-range\",\n  props: panelDateRangeProps,\n  emits: [\"pick\", \"set-picker-option\", \"calendar-change\", \"panel-change\"],\n  setup: function setup(__props, _ref) {\n    var emit = _ref.emit;\n    var props = __props;\n    var unit = \"month\";\n    var pickerBase = inject(\"EP_PICKER_BASE\");\n    var _pickerBase$props = pickerBase.props,\n        disabledDate = _pickerBase$props.disabledDate,\n        cellClassName = _pickerBase$props.cellClassName,\n        format = _pickerBase$props.format,\n        defaultTime = _pickerBase$props.defaultTime,\n        arrowControl = _pickerBase$props.arrowControl,\n        clearable = _pickerBase$props.clearable;\n    var shortcuts = toRef(pickerBase.props, \"shortcuts\");\n    var defaultValue = toRef(pickerBase.props, \"defaultValue\");\n\n    var _useLocale = useLocale(),\n        lang = _useLocale.lang;\n\n    var leftDate = ref(dayjs().locale(lang.value));\n    var rightDate = ref(dayjs().locale(lang.value).add(1, unit));\n\n    var _useRangePicker = useRangePicker(props, {\n      defaultValue: defaultValue,\n      leftDate: leftDate,\n      rightDate: rightDate,\n      unit: unit,\n      onParsedValueChanged: onParsedValueChanged\n    }),\n        minDate = _useRangePicker.minDate,\n        maxDate = _useRangePicker.maxDate,\n        rangeState = _useRangePicker.rangeState,\n        ppNs = _useRangePicker.ppNs,\n        drpNs = _useRangePicker.drpNs,\n        handleChangeRange = _useRangePicker.handleChangeRange,\n        handleRangeConfirm = _useRangePicker.handleRangeConfirm,\n        handleShortcutClick = _useRangePicker.handleShortcutClick,\n        onSelect = _useRangePicker.onSelect,\n        t = _useRangePicker.t;\n\n    var dateUserInput = ref({\n      min: null,\n      max: null\n    });\n    var timeUserInput = ref({\n      min: null,\n      max: null\n    });\n    var leftLabel = computed(function () {\n      return \"\".concat(leftDate.value.year(), \" \").concat(t(\"el.datepicker.year\"), \" \").concat(t(\"el.datepicker.month\".concat(leftDate.value.month() + 1)));\n    });\n    var rightLabel = computed(function () {\n      return \"\".concat(rightDate.value.year(), \" \").concat(t(\"el.datepicker.year\"), \" \").concat(t(\"el.datepicker.month\".concat(rightDate.value.month() + 1)));\n    });\n    var leftYear = computed(function () {\n      return leftDate.value.year();\n    });\n    var leftMonth = computed(function () {\n      return leftDate.value.month();\n    });\n    var rightYear = computed(function () {\n      return rightDate.value.year();\n    });\n    var rightMonth = computed(function () {\n      return rightDate.value.month();\n    });\n    var hasShortcuts = computed(function () {\n      return !!shortcuts.value.length;\n    });\n    var minVisibleDate = computed(function () {\n      if (dateUserInput.value.min !== null) return dateUserInput.value.min;\n      if (minDate.value) return minDate.value.format(dateFormat.value);\n      return \"\";\n    });\n    var maxVisibleDate = computed(function () {\n      if (dateUserInput.value.max !== null) return dateUserInput.value.max;\n      if (maxDate.value || minDate.value) return (maxDate.value || minDate.value).format(dateFormat.value);\n      return \"\";\n    });\n    var minVisibleTime = computed(function () {\n      if (timeUserInput.value.min !== null) return timeUserInput.value.min;\n      if (minDate.value) return minDate.value.format(timeFormat.value);\n      return \"\";\n    });\n    var maxVisibleTime = computed(function () {\n      if (timeUserInput.value.max !== null) return timeUserInput.value.max;\n      if (maxDate.value || minDate.value) return (maxDate.value || minDate.value).format(timeFormat.value);\n      return \"\";\n    });\n    var timeFormat = computed(function () {\n      return extractTimeFormat(format);\n    });\n    var dateFormat = computed(function () {\n      return extractDateFormat(format);\n    });\n\n    var leftPrevYear = function leftPrevYear() {\n      leftDate.value = leftDate.value.subtract(1, \"year\");\n\n      if (!props.unlinkPanels) {\n        rightDate.value = leftDate.value.add(1, \"month\");\n      }\n\n      handlePanelChange(\"year\");\n    };\n\n    var leftPrevMonth = function leftPrevMonth() {\n      leftDate.value = leftDate.value.subtract(1, \"month\");\n\n      if (!props.unlinkPanels) {\n        rightDate.value = leftDate.value.add(1, \"month\");\n      }\n\n      handlePanelChange(\"month\");\n    };\n\n    var rightNextYear = function rightNextYear() {\n      if (!props.unlinkPanels) {\n        leftDate.value = leftDate.value.add(1, \"year\");\n        rightDate.value = leftDate.value.add(1, \"month\");\n      } else {\n        rightDate.value = rightDate.value.add(1, \"year\");\n      }\n\n      handlePanelChange(\"year\");\n    };\n\n    var rightNextMonth = function rightNextMonth() {\n      if (!props.unlinkPanels) {\n        leftDate.value = leftDate.value.add(1, \"month\");\n        rightDate.value = leftDate.value.add(1, \"month\");\n      } else {\n        rightDate.value = rightDate.value.add(1, \"month\");\n      }\n\n      handlePanelChange(\"month\");\n    };\n\n    var leftNextYear = function leftNextYear() {\n      leftDate.value = leftDate.value.add(1, \"year\");\n      handlePanelChange(\"year\");\n    };\n\n    var leftNextMonth = function leftNextMonth() {\n      leftDate.value = leftDate.value.add(1, \"month\");\n      handlePanelChange(\"month\");\n    };\n\n    var rightPrevYear = function rightPrevYear() {\n      rightDate.value = rightDate.value.subtract(1, \"year\");\n      handlePanelChange(\"year\");\n    };\n\n    var rightPrevMonth = function rightPrevMonth() {\n      rightDate.value = rightDate.value.subtract(1, \"month\");\n      handlePanelChange(\"month\");\n    };\n\n    var handlePanelChange = function handlePanelChange(mode) {\n      emit(\"panel-change\", [leftDate.value.toDate(), rightDate.value.toDate()], mode);\n    };\n\n    var enableMonthArrow = computed(function () {\n      var nextMonth = (leftMonth.value + 1) % 12;\n      var yearOffset = leftMonth.value + 1 >= 12 ? 1 : 0;\n      return props.unlinkPanels && new Date(leftYear.value + yearOffset, nextMonth) < new Date(rightYear.value, rightMonth.value);\n    });\n    var enableYearArrow = computed(function () {\n      return props.unlinkPanels && rightYear.value * 12 + rightMonth.value - (leftYear.value * 12 + leftMonth.value + 1) >= 12;\n    });\n    var btnDisabled = computed(function () {\n      return !(minDate.value && maxDate.value && !rangeState.value.selecting && isValidRange([minDate.value, maxDate.value]));\n    });\n    var showTime = computed(function () {\n      return props.type === \"datetime\" || props.type === \"datetimerange\";\n    });\n\n    var formatEmit = function formatEmit(emitDayjs, index) {\n      if (!emitDayjs) return;\n\n      if (defaultTime) {\n        var defaultTimeD = dayjs(defaultTime[index] || defaultTime).locale(lang.value);\n        return defaultTimeD.year(emitDayjs.year()).month(emitDayjs.month()).date(emitDayjs.date());\n      }\n\n      return emitDayjs;\n    };\n\n    var handleRangePick = function handleRangePick(val) {\n      var close = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var min_ = val.minDate;\n      var max_ = val.maxDate;\n      var minDate_ = formatEmit(min_, 0);\n      var maxDate_ = formatEmit(max_, 1);\n\n      if (maxDate.value === maxDate_ && minDate.value === minDate_) {\n        return;\n      }\n\n      emit(\"calendar-change\", [min_.toDate(), max_ && max_.toDate()]);\n      maxDate.value = maxDate_;\n      minDate.value = minDate_;\n      if (!close || showTime.value) return;\n      handleRangeConfirm();\n    };\n\n    var minTimePickerVisible = ref(false);\n    var maxTimePickerVisible = ref(false);\n\n    var handleMinTimeClose = function handleMinTimeClose() {\n      minTimePickerVisible.value = false;\n    };\n\n    var handleMaxTimeClose = function handleMaxTimeClose() {\n      maxTimePickerVisible.value = false;\n    };\n\n    var handleDateInput = function handleDateInput(value, type) {\n      dateUserInput.value[type] = value;\n      var parsedValueD = dayjs(value, dateFormat.value).locale(lang.value);\n\n      if (parsedValueD.isValid()) {\n        if (disabledDate && disabledDate(parsedValueD.toDate())) {\n          return;\n        }\n\n        if (type === \"min\") {\n          leftDate.value = parsedValueD;\n          minDate.value = (minDate.value || leftDate.value).year(parsedValueD.year()).month(parsedValueD.month()).date(parsedValueD.date());\n\n          if (!props.unlinkPanels) {\n            rightDate.value = parsedValueD.add(1, \"month\");\n            maxDate.value = minDate.value.add(1, \"month\");\n          }\n        } else {\n          rightDate.value = parsedValueD;\n          maxDate.value = (maxDate.value || rightDate.value).year(parsedValueD.year()).month(parsedValueD.month()).date(parsedValueD.date());\n\n          if (!props.unlinkPanels) {\n            leftDate.value = parsedValueD.subtract(1, \"month\");\n            minDate.value = maxDate.value.subtract(1, \"month\");\n          }\n        }\n      }\n    };\n\n    var handleDateChange = function handleDateChange(_, type) {\n      dateUserInput.value[type] = null;\n    };\n\n    var handleTimeInput = function handleTimeInput(value, type) {\n      timeUserInput.value[type] = value;\n      var parsedValueD = dayjs(value, timeFormat.value).locale(lang.value);\n\n      if (parsedValueD.isValid()) {\n        if (type === \"min\") {\n          minTimePickerVisible.value = true;\n          minDate.value = (minDate.value || leftDate.value).hour(parsedValueD.hour()).minute(parsedValueD.minute()).second(parsedValueD.second());\n\n          if (!maxDate.value || maxDate.value.isBefore(minDate.value)) {\n            maxDate.value = minDate.value;\n          }\n        } else {\n          maxTimePickerVisible.value = true;\n          maxDate.value = (maxDate.value || rightDate.value).hour(parsedValueD.hour()).minute(parsedValueD.minute()).second(parsedValueD.second());\n          rightDate.value = maxDate.value;\n\n          if (maxDate.value && maxDate.value.isBefore(minDate.value)) {\n            minDate.value = maxDate.value;\n          }\n        }\n      }\n    };\n\n    var handleTimeChange = function handleTimeChange(value, type) {\n      timeUserInput.value[type] = null;\n\n      if (type === \"min\") {\n        leftDate.value = minDate.value;\n        minTimePickerVisible.value = false;\n      } else {\n        rightDate.value = maxDate.value;\n        maxTimePickerVisible.value = false;\n      }\n    };\n\n    var handleMinTimePick = function handleMinTimePick(value, visible, first) {\n      if (timeUserInput.value.min) return;\n\n      if (value) {\n        leftDate.value = value;\n        minDate.value = (minDate.value || leftDate.value).hour(value.hour()).minute(value.minute()).second(value.second());\n      }\n\n      if (!first) {\n        minTimePickerVisible.value = visible;\n      }\n\n      if (!maxDate.value || maxDate.value.isBefore(minDate.value)) {\n        maxDate.value = minDate.value;\n        rightDate.value = value;\n      }\n    };\n\n    var handleMaxTimePick = function handleMaxTimePick(value, visible, first) {\n      if (timeUserInput.value.max) return;\n\n      if (value) {\n        rightDate.value = value;\n        maxDate.value = (maxDate.value || rightDate.value).hour(value.hour()).minute(value.minute()).second(value.second());\n      }\n\n      if (!first) {\n        maxTimePickerVisible.value = visible;\n      }\n\n      if (maxDate.value && maxDate.value.isBefore(minDate.value)) {\n        minDate.value = maxDate.value;\n      }\n    };\n\n    var handleClear = function handleClear() {\n      leftDate.value = getDefaultValue(unref(defaultValue), {\n        lang: unref(lang),\n        unit: \"month\",\n        unlinkPanels: props.unlinkPanels\n      })[0];\n      rightDate.value = leftDate.value.add(1, \"month\");\n      emit(\"pick\", null);\n    };\n\n    var formatToString = function formatToString(value) {\n      return isArray(value) ? value.map(function (_) {\n        return _.format(format);\n      }) : value.format(format);\n    };\n\n    var parseUserInput = function parseUserInput(value) {\n      return isArray(value) ? value.map(function (_) {\n        return dayjs(_, format).locale(lang.value);\n      }) : dayjs(value, format).locale(lang.value);\n    };\n\n    function onParsedValueChanged(minDate2, maxDate2) {\n      if (props.unlinkPanels && maxDate2) {\n        var minDateYear = (minDate2 == null ? void 0 : minDate2.year()) || 0;\n        var minDateMonth = (minDate2 == null ? void 0 : minDate2.month()) || 0;\n        var maxDateYear = maxDate2.year();\n        var maxDateMonth = maxDate2.month();\n        rightDate.value = minDateYear === maxDateYear && minDateMonth === maxDateMonth ? maxDate2.add(1, unit) : maxDate2;\n      } else {\n        rightDate.value = leftDate.value.add(1, unit);\n\n        if (maxDate2) {\n          rightDate.value = rightDate.value.hour(maxDate2.hour()).minute(maxDate2.minute()).second(maxDate2.second());\n        }\n      }\n    }\n\n    emit(\"set-picker-option\", [\"isValidValue\", isValidRange]);\n    emit(\"set-picker-option\", [\"parseUserInput\", parseUserInput]);\n    emit(\"set-picker-option\", [\"formatToString\", formatToString]);\n    emit(\"set-picker-option\", [\"handleClear\", handleClear]);\n    return function (_ctx, _cache) {\n      return openBlock(), createElementBlock(\"div\", {\n        \"class\": normalizeClass([unref(ppNs).b(), unref(drpNs).b(), {\n          \"has-sidebar\": _ctx.$slots.sidebar || unref(hasShortcuts),\n          \"has-time\": unref(showTime)\n        }])\n      }, [createElementVNode(\"div\", {\n        \"class\": normalizeClass(unref(ppNs).e(\"body-wrapper\"))\n      }, [renderSlot(_ctx.$slots, \"sidebar\", {\n        \"class\": normalizeClass(unref(ppNs).e(\"sidebar\"))\n      }), unref(hasShortcuts) ? (openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        \"class\": normalizeClass(unref(ppNs).e(\"sidebar\"))\n      }, [(openBlock(true), createElementBlock(Fragment, null, renderList(unref(shortcuts), function (shortcut, key) {\n        return openBlock(), createElementBlock(\"button\", {\n          key: key,\n          type: \"button\",\n          \"class\": normalizeClass(unref(ppNs).e(\"shortcut\")),\n          onClick: function onClick($event) {\n            return unref(handleShortcutClick)(shortcut);\n          }\n        }, toDisplayString(shortcut.text), 11, _hoisted_1);\n      }), 128))], 2)) : createCommentVNode(\"v-if\", true), createElementVNode(\"div\", {\n        \"class\": normalizeClass(unref(ppNs).e(\"body\"))\n      }, [unref(showTime) ? (openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        \"class\": normalizeClass(unref(drpNs).e(\"time-header\"))\n      }, [createElementVNode(\"span\", {\n        \"class\": normalizeClass(unref(drpNs).e(\"editors-wrap\"))\n      }, [createElementVNode(\"span\", {\n        \"class\": normalizeClass(unref(drpNs).e(\"time-picker-wrap\"))\n      }, [createVNode(unref(ElInput), {\n        size: \"small\",\n        disabled: unref(rangeState).selecting,\n        placeholder: unref(t)(\"el.datepicker.startDate\"),\n        \"class\": normalizeClass(unref(drpNs).e(\"editor\")),\n        \"model-value\": unref(minVisibleDate),\n        onInput: _cache[0] || (_cache[0] = function (val) {\n          return handleDateInput(val, \"min\");\n        }),\n        onChange: _cache[1] || (_cache[1] = function (val) {\n          return handleDateChange(val, \"min\");\n        })\n      }, null, 8, [\"disabled\", \"placeholder\", \"class\", \"model-value\"])], 2), withDirectives((openBlock(), createElementBlock(\"span\", {\n        \"class\": normalizeClass(unref(drpNs).e(\"time-picker-wrap\"))\n      }, [createVNode(unref(ElInput), {\n        size: \"small\",\n        \"class\": normalizeClass(unref(drpNs).e(\"editor\")),\n        disabled: unref(rangeState).selecting,\n        placeholder: unref(t)(\"el.datepicker.startTime\"),\n        \"model-value\": unref(minVisibleTime),\n        onFocus: _cache[2] || (_cache[2] = function ($event) {\n          return minTimePickerVisible.value = true;\n        }),\n        onInput: _cache[3] || (_cache[3] = function (val) {\n          return handleTimeInput(val, \"min\");\n        }),\n        onChange: _cache[4] || (_cache[4] = function (val) {\n          return handleTimeChange(val, \"min\");\n        })\n      }, null, 8, [\"class\", \"disabled\", \"placeholder\", \"model-value\"]), createVNode(unref(TimePickPanel), {\n        visible: minTimePickerVisible.value,\n        format: unref(timeFormat),\n        \"datetime-role\": \"start\",\n        \"time-arrow-control\": unref(arrowControl),\n        \"parsed-value\": leftDate.value,\n        onPick: handleMinTimePick\n      }, null, 8, [\"visible\", \"format\", \"time-arrow-control\", \"parsed-value\"])], 2)), [[unref(ClickOutside), handleMinTimeClose]])], 2), createElementVNode(\"span\", null, [createVNode(unref(ElIcon), null, {\n        \"default\": withCtx(function () {\n          return [createVNode(unref(ArrowRight))];\n        }),\n        _: 1\n      })]), createElementVNode(\"span\", {\n        \"class\": normalizeClass([unref(drpNs).e(\"editors-wrap\"), \"is-right\"])\n      }, [createElementVNode(\"span\", {\n        \"class\": normalizeClass(unref(drpNs).e(\"time-picker-wrap\"))\n      }, [createVNode(unref(ElInput), {\n        size: \"small\",\n        \"class\": normalizeClass(unref(drpNs).e(\"editor\")),\n        disabled: unref(rangeState).selecting,\n        placeholder: unref(t)(\"el.datepicker.endDate\"),\n        \"model-value\": unref(maxVisibleDate),\n        readonly: !unref(minDate),\n        onInput: _cache[5] || (_cache[5] = function (val) {\n          return handleDateInput(val, \"max\");\n        }),\n        onChange: _cache[6] || (_cache[6] = function (val) {\n          return handleDateChange(val, \"max\");\n        })\n      }, null, 8, [\"class\", \"disabled\", \"placeholder\", \"model-value\", \"readonly\"])], 2), withDirectives((openBlock(), createElementBlock(\"span\", {\n        \"class\": normalizeClass(unref(drpNs).e(\"time-picker-wrap\"))\n      }, [createVNode(unref(ElInput), {\n        size: \"small\",\n        \"class\": normalizeClass(unref(drpNs).e(\"editor\")),\n        disabled: unref(rangeState).selecting,\n        placeholder: unref(t)(\"el.datepicker.endTime\"),\n        \"model-value\": unref(maxVisibleTime),\n        readonly: !unref(minDate),\n        onFocus: _cache[7] || (_cache[7] = function ($event) {\n          return unref(minDate) && (maxTimePickerVisible.value = true);\n        }),\n        onInput: _cache[8] || (_cache[8] = function (val) {\n          return handleTimeInput(val, \"max\");\n        }),\n        onChange: _cache[9] || (_cache[9] = function (val) {\n          return handleTimeChange(val, \"max\");\n        })\n      }, null, 8, [\"class\", \"disabled\", \"placeholder\", \"model-value\", \"readonly\"]), createVNode(unref(TimePickPanel), {\n        \"datetime-role\": \"end\",\n        visible: maxTimePickerVisible.value,\n        format: unref(timeFormat),\n        \"time-arrow-control\": unref(arrowControl),\n        \"parsed-value\": rightDate.value,\n        onPick: handleMaxTimePick\n      }, null, 8, [\"visible\", \"format\", \"time-arrow-control\", \"parsed-value\"])], 2)), [[unref(ClickOutside), handleMaxTimeClose]])], 2)], 2)) : createCommentVNode(\"v-if\", true), createElementVNode(\"div\", {\n        \"class\": normalizeClass([[unref(ppNs).e(\"content\"), unref(drpNs).e(\"content\")], \"is-left\"])\n      }, [createElementVNode(\"div\", {\n        \"class\": normalizeClass(unref(drpNs).e(\"header\"))\n      }, [createElementVNode(\"button\", {\n        type: \"button\",\n        \"class\": normalizeClass([unref(ppNs).e(\"icon-btn\"), \"d-arrow-left\"]),\n        onClick: leftPrevYear\n      }, [createVNode(unref(ElIcon), null, {\n        \"default\": withCtx(function () {\n          return [createVNode(unref(DArrowLeft))];\n        }),\n        _: 1\n      })], 2), createElementVNode(\"button\", {\n        type: \"button\",\n        \"class\": normalizeClass([unref(ppNs).e(\"icon-btn\"), \"arrow-left\"]),\n        onClick: leftPrevMonth\n      }, [createVNode(unref(ElIcon), null, {\n        \"default\": withCtx(function () {\n          return [createVNode(unref(ArrowLeft))];\n        }),\n        _: 1\n      })], 2), _ctx.unlinkPanels ? (openBlock(), createElementBlock(\"button\", {\n        key: 0,\n        type: \"button\",\n        disabled: !unref(enableYearArrow),\n        \"class\": normalizeClass([[unref(ppNs).e(\"icon-btn\"), {\n          \"is-disabled\": !unref(enableYearArrow)\n        }], \"d-arrow-right\"]),\n        onClick: leftNextYear\n      }, [createVNode(unref(ElIcon), null, {\n        \"default\": withCtx(function () {\n          return [createVNode(unref(DArrowRight))];\n        }),\n        _: 1\n      })], 10, _hoisted_2)) : createCommentVNode(\"v-if\", true), _ctx.unlinkPanels ? (openBlock(), createElementBlock(\"button\", {\n        key: 1,\n        type: \"button\",\n        disabled: !unref(enableMonthArrow),\n        \"class\": normalizeClass([[unref(ppNs).e(\"icon-btn\"), {\n          \"is-disabled\": !unref(enableMonthArrow)\n        }], \"arrow-right\"]),\n        onClick: leftNextMonth\n      }, [createVNode(unref(ElIcon), null, {\n        \"default\": withCtx(function () {\n          return [createVNode(unref(ArrowRight))];\n        }),\n        _: 1\n      })], 10, _hoisted_3)) : createCommentVNode(\"v-if\", true), createElementVNode(\"div\", null, toDisplayString(unref(leftLabel)), 1)], 2), createVNode(DateTable, {\n        \"selection-mode\": \"range\",\n        date: leftDate.value,\n        \"min-date\": unref(minDate),\n        \"max-date\": unref(maxDate),\n        \"range-state\": unref(rangeState),\n        \"disabled-date\": unref(disabledDate),\n        \"cell-class-name\": unref(cellClassName),\n        onChangerange: unref(handleChangeRange),\n        onPick: handleRangePick,\n        onSelect: unref(onSelect)\n      }, null, 8, [\"date\", \"min-date\", \"max-date\", \"range-state\", \"disabled-date\", \"cell-class-name\", \"onChangerange\", \"onSelect\"])], 2), createElementVNode(\"div\", {\n        \"class\": normalizeClass([[unref(ppNs).e(\"content\"), unref(drpNs).e(\"content\")], \"is-right\"])\n      }, [createElementVNode(\"div\", {\n        \"class\": normalizeClass(unref(drpNs).e(\"header\"))\n      }, [_ctx.unlinkPanels ? (openBlock(), createElementBlock(\"button\", {\n        key: 0,\n        type: \"button\",\n        disabled: !unref(enableYearArrow),\n        \"class\": normalizeClass([[unref(ppNs).e(\"icon-btn\"), {\n          \"is-disabled\": !unref(enableYearArrow)\n        }], \"d-arrow-left\"]),\n        onClick: rightPrevYear\n      }, [createVNode(unref(ElIcon), null, {\n        \"default\": withCtx(function () {\n          return [createVNode(unref(DArrowLeft))];\n        }),\n        _: 1\n      })], 10, _hoisted_4)) : createCommentVNode(\"v-if\", true), _ctx.unlinkPanels ? (openBlock(), createElementBlock(\"button\", {\n        key: 1,\n        type: \"button\",\n        disabled: !unref(enableMonthArrow),\n        \"class\": normalizeClass([[unref(ppNs).e(\"icon-btn\"), {\n          \"is-disabled\": !unref(enableMonthArrow)\n        }], \"arrow-left\"]),\n        onClick: rightPrevMonth\n      }, [createVNode(unref(ElIcon), null, {\n        \"default\": withCtx(function () {\n          return [createVNode(unref(ArrowLeft))];\n        }),\n        _: 1\n      })], 10, _hoisted_5)) : createCommentVNode(\"v-if\", true), createElementVNode(\"button\", {\n        type: \"button\",\n        \"class\": normalizeClass([unref(ppNs).e(\"icon-btn\"), \"d-arrow-right\"]),\n        onClick: rightNextYear\n      }, [createVNode(unref(ElIcon), null, {\n        \"default\": withCtx(function () {\n          return [createVNode(unref(DArrowRight))];\n        }),\n        _: 1\n      })], 2), createElementVNode(\"button\", {\n        type: \"button\",\n        \"class\": normalizeClass([unref(ppNs).e(\"icon-btn\"), \"arrow-right\"]),\n        onClick: rightNextMonth\n      }, [createVNode(unref(ElIcon), null, {\n        \"default\": withCtx(function () {\n          return [createVNode(unref(ArrowRight))];\n        }),\n        _: 1\n      })], 2), createElementVNode(\"div\", null, toDisplayString(unref(rightLabel)), 1)], 2), createVNode(DateTable, {\n        \"selection-mode\": \"range\",\n        date: rightDate.value,\n        \"min-date\": unref(minDate),\n        \"max-date\": unref(maxDate),\n        \"range-state\": unref(rangeState),\n        \"disabled-date\": unref(disabledDate),\n        \"cell-class-name\": unref(cellClassName),\n        onChangerange: unref(handleChangeRange),\n        onPick: handleRangePick,\n        onSelect: unref(onSelect)\n      }, null, 8, [\"date\", \"min-date\", \"max-date\", \"range-state\", \"disabled-date\", \"cell-class-name\", \"onChangerange\", \"onSelect\"])], 2)], 2)], 2), unref(showTime) ? (openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        \"class\": normalizeClass(unref(ppNs).e(\"footer\"))\n      }, [unref(clearable) ? (openBlock(), createBlock(unref(ElButton), {\n        key: 0,\n        text: \"\",\n        size: \"small\",\n        \"class\": normalizeClass(unref(ppNs).e(\"link-btn\")),\n        onClick: handleClear\n      }, {\n        \"default\": withCtx(function () {\n          return [createTextVNode(toDisplayString(unref(t)(\"el.datepicker.clear\")), 1)];\n        }),\n        _: 1\n      }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true), createVNode(unref(ElButton), {\n        plain: \"\",\n        size: \"small\",\n        \"class\": normalizeClass(unref(ppNs).e(\"link-btn\")),\n        disabled: unref(btnDisabled),\n        onClick: _cache[10] || (_cache[10] = function ($event) {\n          return unref(handleRangeConfirm)(false);\n        })\n      }, {\n        \"default\": withCtx(function () {\n          return [createTextVNode(toDisplayString(unref(t)(\"el.datepicker.confirm\")), 1)];\n        }),\n        _: 1\n      }, 8, [\"class\", \"disabled\"])], 2)) : createCommentVNode(\"v-if\", true)], 2);\n    };\n  }\n});\n\nvar DateRangePickPanel = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/date-picker/src/date-picker-com/panel-date-range.vue\"]]);\n\nexport { DateRangePickPanel as default };","map":{"version":3,"mappings":"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","names":["unit","inject","pickerBase","disabledDate","cellClassName","format","defaultTime","arrowControl","clearable","shortcuts","defaultValue","useLocale","lang","leftDate","ref","locale","value","add","useRangePicker","props","rightDate","onParsedValueChanged","minDate","maxDate","rangeState","ppNs","drpNs","handleChangeRange","handleRangeConfirm","handleShortcutClick","onSelect","t","dateUserInput","min","max","timeUserInput","computed","year","month","hasShortcuts","length","dateFormat","timeFormat","extractTimeFormat","extractDateFormat","leftPrevYear","subtract","unlinkPanels","handlePanelChange","leftPrevMonth","rightNextYear","rightNextMonth","leftNextYear","leftNextMonth","rightPrevYear","rightPrevMonth","mode","emit","toDate","leftMonth","yearOffset","Date","leftYear","nextMonth","rightYear","rightMonth","selecting","isValidRange","type","formatEmit","emitDayjs","index","dayjs","defaultTimeD","date","handleRangePick","val","close","min_","max_","maxDate_","minDate_","showTime","handleMinTimeClose","minTimePickerVisible","handleMaxTimeClose","maxTimePickerVisible","handleDateInput","isValid","parsedValueD","handleDateChange","_","handleTimeInput","hour","minute","second","isBefore","handleTimeChange","handleMinTimePick","visible","first","handleMaxTimePick","handleClear","getDefaultValue","unref","formatToString","isArray","map","parseUserInput","minDate2","maxDate2","minDateYear","maxDateYear","minDateMonth","maxDateMonth"],"sources":["../../../../../../../packages/components/date-picker/src/date-picker-com/panel-date-range.vue"],"sourcesContent":["<template>\n  <div\n    :class=\"[\n      ppNs.b(),\n      drpNs.b(),\n      {\n        'has-sidebar': $slots.sidebar || hasShortcuts,\n        'has-time': showTime,\n      },\n    ]\"\n  >\n    <div :class=\"ppNs.e('body-wrapper')\">\n      <slot name=\"sidebar\" :class=\"ppNs.e('sidebar')\" />\n      <div v-if=\"hasShortcuts\" :class=\"ppNs.e('sidebar')\">\n        <button\n          v-for=\"(shortcut, key) in shortcuts\"\n          :key=\"key\"\n          type=\"button\"\n          :class=\"ppNs.e('shortcut')\"\n          @click=\"handleShortcutClick(shortcut)\"\n        >\n          {{ shortcut.text }}\n        </button>\n      </div>\n      <div :class=\"ppNs.e('body')\">\n        <div v-if=\"showTime\" :class=\"drpNs.e('time-header')\">\n          <span :class=\"drpNs.e('editors-wrap')\">\n            <span :class=\"drpNs.e('time-picker-wrap')\">\n              <el-input\n                size=\"small\"\n                :disabled=\"rangeState.selecting\"\n                :placeholder=\"t('el.datepicker.startDate')\"\n                :class=\"drpNs.e('editor')\"\n                :model-value=\"minVisibleDate\"\n                @input=\"(val) => handleDateInput(val, 'min')\"\n                @change=\"(val) => handleDateChange(val, 'min')\"\n              />\n            </span>\n            <span\n              v-clickoutside=\"handleMinTimeClose\"\n              :class=\"drpNs.e('time-picker-wrap')\"\n            >\n              <el-input\n                size=\"small\"\n                :class=\"drpNs.e('editor')\"\n                :disabled=\"rangeState.selecting\"\n                :placeholder=\"t('el.datepicker.startTime')\"\n                :model-value=\"minVisibleTime\"\n                @focus=\"minTimePickerVisible = true\"\n                @input=\"(val) => handleTimeInput(val, 'min')\"\n                @change=\"(val) => handleTimeChange(val, 'min')\"\n              />\n              <time-pick-panel\n                :visible=\"minTimePickerVisible\"\n                :format=\"timeFormat\"\n                datetime-role=\"start\"\n                :time-arrow-control=\"arrowControl\"\n                :parsed-value=\"leftDate\"\n                @pick=\"handleMinTimePick\"\n              />\n            </span>\n          </span>\n          <span>\n            <el-icon><arrow-right /></el-icon>\n          </span>\n          <span :class=\"drpNs.e('editors-wrap')\" class=\"is-right\">\n            <span :class=\"drpNs.e('time-picker-wrap')\">\n              <el-input\n                size=\"small\"\n                :class=\"drpNs.e('editor')\"\n                :disabled=\"rangeState.selecting\"\n                :placeholder=\"t('el.datepicker.endDate')\"\n                :model-value=\"maxVisibleDate\"\n                :readonly=\"!minDate\"\n                @input=\"(val) => handleDateInput(val, 'max')\"\n                @change=\"(val) => handleDateChange(val, 'max')\"\n              />\n            </span>\n            <span\n              v-clickoutside=\"handleMaxTimeClose\"\n              :class=\"drpNs.e('time-picker-wrap')\"\n            >\n              <el-input\n                size=\"small\"\n                :class=\"drpNs.e('editor')\"\n                :disabled=\"rangeState.selecting\"\n                :placeholder=\"t('el.datepicker.endTime')\"\n                :model-value=\"maxVisibleTime\"\n                :readonly=\"!minDate\"\n                @focus=\"minDate && (maxTimePickerVisible = true)\"\n                @input=\"(val) => handleTimeInput(val, 'max')\"\n                @change=\"(val) => handleTimeChange(val, 'max')\"\n              />\n              <time-pick-panel\n                datetime-role=\"end\"\n                :visible=\"maxTimePickerVisible\"\n                :format=\"timeFormat\"\n                :time-arrow-control=\"arrowControl\"\n                :parsed-value=\"rightDate\"\n                @pick=\"handleMaxTimePick\"\n              />\n            </span>\n          </span>\n        </div>\n        <div :class=\"[ppNs.e('content'), drpNs.e('content')]\" class=\"is-left\">\n          <div :class=\"drpNs.e('header')\">\n            <button\n              type=\"button\"\n              :class=\"ppNs.e('icon-btn')\"\n              class=\"d-arrow-left\"\n              @click=\"leftPrevYear\"\n            >\n              <el-icon><d-arrow-left /></el-icon>\n            </button>\n            <button\n              type=\"button\"\n              :class=\"ppNs.e('icon-btn')\"\n              class=\"arrow-left\"\n              @click=\"leftPrevMonth\"\n            >\n              <el-icon><arrow-left /></el-icon>\n            </button>\n            <button\n              v-if=\"unlinkPanels\"\n              type=\"button\"\n              :disabled=\"!enableYearArrow\"\n              :class=\"[ppNs.e('icon-btn'), { 'is-disabled': !enableYearArrow }]\"\n              class=\"d-arrow-right\"\n              @click=\"leftNextYear\"\n            >\n              <el-icon><d-arrow-right /></el-icon>\n            </button>\n            <button\n              v-if=\"unlinkPanels\"\n              type=\"button\"\n              :disabled=\"!enableMonthArrow\"\n              :class=\"[\n                ppNs.e('icon-btn'),\n                { 'is-disabled': !enableMonthArrow },\n              ]\"\n              class=\"arrow-right\"\n              @click=\"leftNextMonth\"\n            >\n              <el-icon><arrow-right /></el-icon>\n            </button>\n            <div>{{ leftLabel }}</div>\n          </div>\n          <date-table\n            selection-mode=\"range\"\n            :date=\"leftDate\"\n            :min-date=\"minDate\"\n            :max-date=\"maxDate\"\n            :range-state=\"rangeState\"\n            :disabled-date=\"disabledDate\"\n            :cell-class-name=\"cellClassName\"\n            @changerange=\"handleChangeRange\"\n            @pick=\"handleRangePick\"\n            @select=\"onSelect\"\n          />\n        </div>\n        <div :class=\"[ppNs.e('content'), drpNs.e('content')]\" class=\"is-right\">\n          <div :class=\"drpNs.e('header')\">\n            <button\n              v-if=\"unlinkPanels\"\n              type=\"button\"\n              :disabled=\"!enableYearArrow\"\n              :class=\"[ppNs.e('icon-btn'), { 'is-disabled': !enableYearArrow }]\"\n              class=\"d-arrow-left\"\n              @click=\"rightPrevYear\"\n            >\n              <el-icon><d-arrow-left /></el-icon>\n            </button>\n            <button\n              v-if=\"unlinkPanels\"\n              type=\"button\"\n              :disabled=\"!enableMonthArrow\"\n              :class=\"[\n                ppNs.e('icon-btn'),\n                { 'is-disabled': !enableMonthArrow },\n              ]\"\n              class=\"arrow-left\"\n              @click=\"rightPrevMonth\"\n            >\n              <el-icon><arrow-left /></el-icon>\n            </button>\n            <button\n              type=\"button\"\n              :class=\"ppNs.e('icon-btn')\"\n              class=\"d-arrow-right\"\n              @click=\"rightNextYear\"\n            >\n              <el-icon><d-arrow-right /></el-icon>\n            </button>\n            <button\n              type=\"button\"\n              :class=\"ppNs.e('icon-btn')\"\n              class=\"arrow-right\"\n              @click=\"rightNextMonth\"\n            >\n              <el-icon><arrow-right /></el-icon>\n            </button>\n            <div>{{ rightLabel }}</div>\n          </div>\n          <date-table\n            selection-mode=\"range\"\n            :date=\"rightDate\"\n            :min-date=\"minDate\"\n            :max-date=\"maxDate\"\n            :range-state=\"rangeState\"\n            :disabled-date=\"disabledDate\"\n            :cell-class-name=\"cellClassName\"\n            @changerange=\"handleChangeRange\"\n            @pick=\"handleRangePick\"\n            @select=\"onSelect\"\n          />\n        </div>\n      </div>\n    </div>\n    <div v-if=\"showTime\" :class=\"ppNs.e('footer')\">\n      <el-button\n        v-if=\"clearable\"\n        text\n        size=\"small\"\n        :class=\"ppNs.e('link-btn')\"\n        @click=\"handleClear\"\n      >\n        {{ t('el.datepicker.clear') }}\n      </el-button>\n      <el-button\n        plain\n        size=\"small\"\n        :class=\"ppNs.e('link-btn')\"\n        :disabled=\"btnDisabled\"\n        @click=\"handleRangeConfirm(false)\"\n      >\n        {{ t('el.datepicker.confirm') }}\n      </el-button>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, inject, ref, toRef, unref } from 'vue'\nimport dayjs from 'dayjs'\nimport { ClickOutside as vClickoutside } from '@element-plus/directives'\nimport { isArray } from '@element-plus/utils'\nimport { useLocale } from '@element-plus/hooks'\nimport ElButton from '@element-plus/components/button'\nimport ElInput from '@element-plus/components/input'\nimport {\n  TimePickPanel,\n  extractDateFormat,\n  extractTimeFormat,\n} from '@element-plus/components/time-picker'\nimport ElIcon from '@element-plus/components/icon'\nimport {\n  ArrowLeft,\n  ArrowRight,\n  DArrowLeft,\n  DArrowRight,\n} from '@element-plus/icons-vue'\nimport { panelDateRangeProps } from '../props/panel-date-range'\nimport { useRangePicker } from '../composables/use-range-picker'\nimport { getDefaultValue, isValidRange } from '../utils'\nimport DateTable from './basic-date-table.vue'\n\nimport type { Dayjs } from 'dayjs'\n\ntype ChangeType = 'min' | 'max'\ntype UserInput = {\n  min: string | null\n  max: string | null\n}\n\nconst props = defineProps(panelDateRangeProps)\nconst emit = defineEmits([\n  'pick',\n  'set-picker-option',\n  'calendar-change',\n  'panel-change',\n])\n\nconst unit = 'month'\n// FIXME: fix the type for ep picker\nconst pickerBase = inject('EP_PICKER_BASE') as any\nconst {\n  disabledDate,\n  cellClassName,\n  format,\n  defaultTime,\n  arrowControl,\n  clearable,\n} = pickerBase.props\nconst shortcuts = toRef(pickerBase.props, 'shortcuts')\nconst defaultValue = toRef(pickerBase.props, 'defaultValue')\nconst { lang } = useLocale()\nconst leftDate = ref<Dayjs>(dayjs().locale(lang.value))\nconst rightDate = ref<Dayjs>(dayjs().locale(lang.value).add(1, unit))\n\nconst {\n  minDate,\n  maxDate,\n  rangeState,\n  ppNs,\n  drpNs,\n\n  handleChangeRange,\n  handleRangeConfirm,\n  handleShortcutClick,\n  onSelect,\n  t,\n} = useRangePicker(props, {\n  defaultValue,\n  leftDate,\n  rightDate,\n  unit,\n  onParsedValueChanged,\n})\n\nconst dateUserInput = ref<UserInput>({\n  min: null,\n  max: null,\n})\n\nconst timeUserInput = ref<UserInput>({\n  min: null,\n  max: null,\n})\n\nconst leftLabel = computed(() => {\n  return `${leftDate.value.year()} ${t('el.datepicker.year')} ${t(\n    `el.datepicker.month${leftDate.value.month() + 1}`\n  )}`\n})\n\nconst rightLabel = computed(() => {\n  return `${rightDate.value.year()} ${t('el.datepicker.year')} ${t(\n    `el.datepicker.month${rightDate.value.month() + 1}`\n  )}`\n})\n\nconst leftYear = computed(() => {\n  return leftDate.value.year()\n})\n\nconst leftMonth = computed(() => {\n  return leftDate.value.month()\n})\n\nconst rightYear = computed(() => {\n  return rightDate.value.year()\n})\n\nconst rightMonth = computed(() => {\n  return rightDate.value.month()\n})\n\nconst hasShortcuts = computed(() => !!shortcuts.value.length)\n\nconst minVisibleDate = computed(() => {\n  if (dateUserInput.value.min !== null) return dateUserInput.value.min\n  if (minDate.value) return minDate.value.format(dateFormat.value)\n  return ''\n})\n\nconst maxVisibleDate = computed(() => {\n  if (dateUserInput.value.max !== null) return dateUserInput.value.max\n  if (maxDate.value || minDate.value)\n    return (maxDate.value || minDate.value)!.format(dateFormat.value)\n  return ''\n})\n\nconst minVisibleTime = computed(() => {\n  if (timeUserInput.value.min !== null) return timeUserInput.value.min\n  if (minDate.value) return minDate.value.format(timeFormat.value)\n  return ''\n})\n\nconst maxVisibleTime = computed(() => {\n  if (timeUserInput.value.max !== null) return timeUserInput.value.max\n  if (maxDate.value || minDate.value)\n    return (maxDate.value || minDate.value)!.format(timeFormat.value)\n  return ''\n})\n\nconst timeFormat = computed(() => {\n  return extractTimeFormat(format)\n})\n\nconst dateFormat = computed(() => {\n  return extractDateFormat(format)\n})\n\nconst leftPrevYear = () => {\n  leftDate.value = leftDate.value.subtract(1, 'year')\n  if (!props.unlinkPanels) {\n    rightDate.value = leftDate.value.add(1, 'month')\n  }\n  handlePanelChange('year')\n}\n\nconst leftPrevMonth = () => {\n  leftDate.value = leftDate.value.subtract(1, 'month')\n  if (!props.unlinkPanels) {\n    rightDate.value = leftDate.value.add(1, 'month')\n  }\n  handlePanelChange('month')\n}\n\nconst rightNextYear = () => {\n  if (!props.unlinkPanels) {\n    leftDate.value = leftDate.value.add(1, 'year')\n    rightDate.value = leftDate.value.add(1, 'month')\n  } else {\n    rightDate.value = rightDate.value.add(1, 'year')\n  }\n  handlePanelChange('year')\n}\n\nconst rightNextMonth = () => {\n  if (!props.unlinkPanels) {\n    leftDate.value = leftDate.value.add(1, 'month')\n    rightDate.value = leftDate.value.add(1, 'month')\n  } else {\n    rightDate.value = rightDate.value.add(1, 'month')\n  }\n  handlePanelChange('month')\n}\n\nconst leftNextYear = () => {\n  leftDate.value = leftDate.value.add(1, 'year')\n  handlePanelChange('year')\n}\n\nconst leftNextMonth = () => {\n  leftDate.value = leftDate.value.add(1, 'month')\n  handlePanelChange('month')\n}\n\nconst rightPrevYear = () => {\n  rightDate.value = rightDate.value.subtract(1, 'year')\n  handlePanelChange('year')\n}\n\nconst rightPrevMonth = () => {\n  rightDate.value = rightDate.value.subtract(1, 'month')\n  handlePanelChange('month')\n}\n\nconst handlePanelChange = (mode: 'month' | 'year') => {\n  emit(\n    'panel-change',\n    [leftDate.value.toDate(), rightDate.value.toDate()],\n    mode\n  )\n}\n\nconst enableMonthArrow = computed(() => {\n  const nextMonth = (leftMonth.value + 1) % 12\n  const yearOffset = leftMonth.value + 1 >= 12 ? 1 : 0\n  return (\n    props.unlinkPanels &&\n    new Date(leftYear.value + yearOffset, nextMonth) <\n      new Date(rightYear.value, rightMonth.value)\n  )\n})\n\nconst enableYearArrow = computed(() => {\n  return (\n    props.unlinkPanels &&\n    rightYear.value * 12 +\n      rightMonth.value -\n      (leftYear.value * 12 + leftMonth.value + 1) >=\n      12\n  )\n})\n\nconst btnDisabled = computed(() => {\n  return !(\n    minDate.value &&\n    maxDate.value &&\n    !rangeState.value.selecting &&\n    isValidRange([minDate.value, maxDate.value])\n  )\n})\n\nconst showTime = computed(\n  () => props.type === 'datetime' || props.type === 'datetimerange'\n)\n\nconst formatEmit = (emitDayjs: Dayjs | null, index?: number) => {\n  if (!emitDayjs) return\n  if (defaultTime) {\n    const defaultTimeD = dayjs(\n      defaultTime[index as number] || defaultTime\n    ).locale(lang.value)\n    return defaultTimeD\n      .year(emitDayjs.year())\n      .month(emitDayjs.month())\n      .date(emitDayjs.date())\n  }\n  return emitDayjs\n}\n\nconst handleRangePick = (\n  val: {\n    minDate: Dayjs\n    maxDate: Dayjs | null\n  },\n  close = true\n) => {\n  const min_ = val.minDate\n  const max_ = val.maxDate\n  const minDate_ = formatEmit(min_, 0)\n  const maxDate_ = formatEmit(max_, 1)\n\n  if (maxDate.value === maxDate_ && minDate.value === minDate_) {\n    return\n  }\n  emit('calendar-change', [min_.toDate(), max_ && max_.toDate()])\n  maxDate.value = maxDate_\n  minDate.value = minDate_\n\n  if (!close || showTime.value) return\n  handleRangeConfirm()\n}\n\nconst minTimePickerVisible = ref(false)\nconst maxTimePickerVisible = ref(false)\n\nconst handleMinTimeClose = () => {\n  minTimePickerVisible.value = false\n}\n\nconst handleMaxTimeClose = () => {\n  maxTimePickerVisible.value = false\n}\n\nconst handleDateInput = (value: string | null, type: ChangeType) => {\n  dateUserInput.value[type] = value\n  const parsedValueD = dayjs(value, dateFormat.value).locale(lang.value)\n\n  if (parsedValueD.isValid()) {\n    if (disabledDate && disabledDate(parsedValueD.toDate())) {\n      return\n    }\n    if (type === 'min') {\n      leftDate.value = parsedValueD\n      minDate.value = (minDate.value || leftDate.value)\n        .year(parsedValueD.year())\n        .month(parsedValueD.month())\n        .date(parsedValueD.date())\n      if (!props.unlinkPanels) {\n        rightDate.value = parsedValueD.add(1, 'month')\n        maxDate.value = minDate.value.add(1, 'month')\n      }\n    } else {\n      rightDate.value = parsedValueD\n      maxDate.value = (maxDate.value || rightDate.value)\n        .year(parsedValueD.year())\n        .month(parsedValueD.month())\n        .date(parsedValueD.date())\n      if (!props.unlinkPanels) {\n        leftDate.value = parsedValueD.subtract(1, 'month')\n        minDate.value = maxDate.value.subtract(1, 'month')\n      }\n    }\n  }\n}\n\nconst handleDateChange = (_: unknown, type: ChangeType) => {\n  dateUserInput.value[type] = null\n}\n\nconst handleTimeInput = (value: string | null, type: ChangeType) => {\n  timeUserInput.value[type] = value\n  const parsedValueD = dayjs(value, timeFormat.value).locale(lang.value)\n\n  if (parsedValueD.isValid()) {\n    if (type === 'min') {\n      minTimePickerVisible.value = true\n      minDate.value = (minDate.value || leftDate.value)\n        .hour(parsedValueD.hour())\n        .minute(parsedValueD.minute())\n        .second(parsedValueD.second())\n      if (!maxDate.value || maxDate.value.isBefore(minDate.value)) {\n        maxDate.value = minDate.value\n      }\n    } else {\n      maxTimePickerVisible.value = true\n      maxDate.value = (maxDate.value || rightDate.value)\n        .hour(parsedValueD.hour())\n        .minute(parsedValueD.minute())\n        .second(parsedValueD.second())\n      rightDate.value = maxDate.value\n      if (maxDate.value && maxDate.value.isBefore(minDate.value)) {\n        minDate.value = maxDate.value\n      }\n    }\n  }\n}\n\nconst handleTimeChange = (value: string | null, type: ChangeType) => {\n  timeUserInput.value[type] = null\n  if (type === 'min') {\n    leftDate.value = minDate.value!\n    minTimePickerVisible.value = false\n  } else {\n    rightDate.value = maxDate.value!\n    maxTimePickerVisible.value = false\n  }\n}\n\nconst handleMinTimePick = (value: Dayjs, visible: boolean, first: boolean) => {\n  if (timeUserInput.value.min) return\n  if (value) {\n    leftDate.value = value\n    minDate.value = (minDate.value || leftDate.value)\n      .hour(value.hour())\n      .minute(value.minute())\n      .second(value.second())\n  }\n\n  if (!first) {\n    minTimePickerVisible.value = visible\n  }\n\n  if (!maxDate.value || maxDate.value.isBefore(minDate.value)) {\n    maxDate.value = minDate.value\n    rightDate.value = value\n  }\n}\n\nconst handleMaxTimePick = (\n  value: Dayjs | null,\n  visible: boolean,\n  first: boolean\n) => {\n  if (timeUserInput.value.max) return\n  if (value) {\n    rightDate.value = value\n    maxDate.value = (maxDate.value || rightDate.value)\n      .hour(value.hour())\n      .minute(value.minute())\n      .second(value.second())\n  }\n\n  if (!first) {\n    maxTimePickerVisible.value = visible\n  }\n\n  if (maxDate.value && maxDate.value.isBefore(minDate.value)) {\n    minDate.value = maxDate.value\n  }\n}\n\nconst handleClear = () => {\n  leftDate.value = getDefaultValue(unref(defaultValue), {\n    lang: unref(lang),\n    unit: 'month',\n    unlinkPanels: props.unlinkPanels,\n  })[0]\n  rightDate.value = leftDate.value.add(1, 'month')\n  emit('pick', null)\n}\n\nconst formatToString = (value: Dayjs | Dayjs[]) => {\n  return isArray(value)\n    ? value.map((_) => _.format(format))\n    : value.format(format)\n}\n\nconst parseUserInput = (value: Dayjs | Dayjs[]) => {\n  return isArray(value)\n    ? value.map((_) => dayjs(_, format).locale(lang.value))\n    : dayjs(value, format).locale(lang.value)\n}\n\nfunction onParsedValueChanged(\n  minDate: Dayjs | undefined,\n  maxDate: Dayjs | undefined\n) {\n  if (props.unlinkPanels && maxDate) {\n    const minDateYear = minDate?.year() || 0\n    const minDateMonth = minDate?.month() || 0\n    const maxDateYear = maxDate.year()\n    const maxDateMonth = maxDate.month()\n    rightDate.value =\n      minDateYear === maxDateYear && minDateMonth === maxDateMonth\n        ? maxDate.add(1, unit)\n        : maxDate\n  } else {\n    rightDate.value = leftDate.value.add(1, unit)\n    if (maxDate) {\n      rightDate.value = rightDate.value\n        .hour(maxDate.hour())\n        .minute(maxDate.minute())\n        .second(maxDate.second())\n    }\n  }\n}\n\nemit('set-picker-option', ['isValidValue', isValidRange])\nemit('set-picker-option', ['parseUserInput', parseUserInput])\nemit('set-picker-option', ['formatToString', formatToString])\nemit('set-picker-option', ['handleClear', handleClear])\n</script>\n"]},"metadata":{},"sourceType":"module"}