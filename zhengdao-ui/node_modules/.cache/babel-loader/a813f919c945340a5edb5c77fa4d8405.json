{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport { defineComponent, createVNode, renderSlot, h } from 'vue';\nimport '../../../utils/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useSameTarget } from '../../../hooks/use-same-target/index.mjs';\nimport { PatchFlags } from '../../../utils/vue/vnode.mjs';\nvar overlayProps = buildProps({\n  mask: {\n    type: Boolean,\n    \"default\": true\n  },\n  customMaskEvent: {\n    type: Boolean,\n    \"default\": false\n  },\n  overlayClass: {\n    type: definePropType([String, Array, Object])\n  },\n  zIndex: {\n    type: definePropType([String, Number])\n  }\n});\nvar overlayEmits = {\n  click: function click(evt) {\n    return evt instanceof MouseEvent;\n  }\n};\nvar Overlay = defineComponent({\n  name: \"ElOverlay\",\n  props: overlayProps,\n  emits: overlayEmits,\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots,\n        emit = _ref.emit;\n    var ns = useNamespace(\"overlay\");\n\n    var onMaskClick = function onMaskClick(e) {\n      emit(\"click\", e);\n    };\n\n    var _useSameTarget = useSameTarget(props.customMaskEvent ? void 0 : onMaskClick),\n        onClick = _useSameTarget.onClick,\n        onMousedown = _useSameTarget.onMousedown,\n        onMouseup = _useSameTarget.onMouseup;\n\n    return function () {\n      return props.mask ? createVNode(\"div\", {\n        \"class\": [ns.b(), props.overlayClass],\n        style: {\n          zIndex: props.zIndex\n        },\n        onClick: onClick,\n        onMousedown: onMousedown,\n        onMouseup: onMouseup\n      }, [renderSlot(slots, \"default\")], PatchFlags.STYLE | PatchFlags.CLASS | PatchFlags.PROPS, [\"onClick\", \"onMouseup\", \"onMousedown\"]) : h(\"div\", {\n        \"class\": props.overlayClass,\n        style: {\n          zIndex: props.zIndex,\n          position: \"fixed\",\n          top: \"0px\",\n          right: \"0px\",\n          bottom: \"0px\",\n          left: \"0px\"\n        }\n      }, [renderSlot(slots, \"default\")]);\n    };\n  }\n});\nexport { Overlay as default, overlayEmits, overlayProps };","map":{"version":3,"mappings":";;;;;;;;AAGY,IAACA,YAAY,GAAGC,UAAU,CAAC;EACrCC,IAAI,EAAE;IACJC,IAAI,EAAEC,OADF;IAEJ,WAAS;EAFL,CAD+B;EAKrCC,eAAe,EAAE;IACfF,IAAI,EAAEC,OADS;IAEf,WAAS;EAFM,CALoB;EASrCE,YAAY,EAAE;IACZH,IAAI,EAAEI,cAAc,CAAC,CACnBC,MADmB,EAEnBC,KAFmB,EAGnBC,MAHmB,CAAD;EADR,CATuB;EAgBrCC,MAAM,EAAE;IACNR,IAAI,EAAEI,cAAc,CAAC,CAACC,MAAD,EAASI,MAAT,CAAD;EADd;AAhB6B,CAAD,CAA1B;AAoBA,IAACC,YAAY,GAAG;EAC1BC,KAAK,EAAE,eAACC,GAAD;IAAA,OAASA,GAAG,YAAYC,UAAxB;EAAA;AADmB,CAAhB;AAGZ,cAAeC,eAAe,CAAC;EAC7BC,IAAI,EAAE,WADuB;EAE7BC,KAAK,EAAEnB,YAFsB;EAG7BoB,KAAK,EAAEP,YAHsB;EAI7BQ,KAJ6B,iBAIvBF,KAJuB,QAIC;IAAA,IAAfG,KAAe,QAAfA,KAAe;IAAA,IAARC,IAAQ,QAARA,IAAQ;IAC5B,IAAMC,EAAE,GAAGC,YAAY,CAAC,SAAD,CAAvB;;IACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,CAAD,EAAO;MACzBJ,IAAI,CAAC,OAAD,EAAUI,CAAV,CAAJ;IACD,CAFD;;IAGA,qBAA4CC,aAAa,CAACT,KAAK,CAACd,eAAN,GAAwB,KAAK,CAA7B,GAAiCqB,WAAlC,CAAzD;IAAA,IAAQG,OAAR,kBAAQA,OAAR;IAAA,IAAiBC,WAAjB,kBAAiBA,WAAjB;IAAA,IAA8BC,SAA9B,kBAA8BA,SAA9B;;IACA,OAAO,YAAM;MACX,OAAOZ,KAAK,CAACjB,IAAN,GAAa8B,WAAW,CAAC,KAAD,EAAQ;QACrC,SAAO,CAACR,EAAE,CAACS,CAAH,EAAD,EAASd,KAAK,CAACb,YAAf,CAD8B;QAErC4B,KAAK,EAAE;UACLvB,MAAM,EAAEQ,KAAK,CAACR;QADT,CAF8B;QAKrCkB,OAAO,EAAPA,OALqC;QAMrCC,WAAW,EAAXA,WANqC;QAOrCC,SAAS,EAATA;MAPqC,CAAR,EAQ5B,CAACI,UAAU,CAACb,KAAD,EAAQ,SAAR,CAAX,CAR4B,EAQIc,UAAU,CAACC,KAAX,GAAmBD,UAAU,CAACE,KAA9B,GAAsCF,UAAU,CAACG,KARrD,EAQ4D,CAAC,SAAD,EAAY,WAAZ,EAAyB,aAAzB,CAR5D,CAAxB,GAQ+HC,CAAC,CAAC,KAAD,EAAQ;QAC7I,SAAOrB,KAAK,CAACb,YADgI;QAE7I4B,KAAK,EAAE;UACLvB,MAAM,EAAEQ,KAAK,CAACR,MADT;UAEL8B,QAAQ,EAAE,OAFL;UAGLC,GAAG,EAAE,KAHA;UAILC,KAAK,EAAE,KAJF;UAKLC,MAAM,EAAE,KALH;UAMLC,IAAI,EAAE;QAND;MAFsI,CAAR,EAUpI,CAACV,UAAU,CAACb,KAAD,EAAQ,SAAR,CAAX,CAVoI,CARvI;IAmBD,CApBD;EAqBD;AA/B4B,CAAD,CAA9B","names":["overlayProps","buildProps","mask","type","Boolean","customMaskEvent","overlayClass","definePropType","String","Array","Object","zIndex","Number","overlayEmits","click","evt","MouseEvent","defineComponent","name","props","emits","setup","slots","emit","ns","useNamespace","onMaskClick","e","useSameTarget","onClick","onMousedown","onMouseup","createVNode","b","style","renderSlot","PatchFlags","STYLE","CLASS","PROPS","h","position","top","right","bottom","left"],"sources":["../../../../../../packages/components/overlay/src/overlay.ts"],"sourcesContent":["import { createVNode, defineComponent, h, renderSlot } from 'vue'\nimport { PatchFlags, buildProps, definePropType } from '@element-plus/utils'\nimport { useNamespace, useSameTarget } from '@element-plus/hooks'\n\nimport type { CSSProperties, ExtractPropTypes } from 'vue'\nimport type { ZIndexProperty } from 'csstype'\n\nexport const overlayProps = buildProps({\n  mask: {\n    type: Boolean,\n    default: true,\n  },\n  customMaskEvent: {\n    type: Boolean,\n    default: false,\n  },\n  overlayClass: {\n    type: definePropType<string | string[] | Record<string, boolean>>([\n      String,\n      Array,\n      Object,\n    ]),\n  },\n  zIndex: {\n    type: definePropType<ZIndexProperty>([String, Number]),\n  },\n} as const)\nexport type OverlayProps = ExtractPropTypes<typeof overlayProps>\n\nexport const overlayEmits = {\n  click: (evt: MouseEvent) => evt instanceof MouseEvent,\n}\nexport type OverlayEmits = typeof overlayEmits\n\nexport default defineComponent({\n  name: 'ElOverlay',\n\n  props: overlayProps,\n  emits: overlayEmits,\n\n  setup(props, { slots, emit }) {\n    const ns = useNamespace('overlay')\n\n    const onMaskClick = (e: MouseEvent) => {\n      emit('click', e)\n    }\n\n    const { onClick, onMousedown, onMouseup } = useSameTarget(\n      props.customMaskEvent ? undefined : onMaskClick\n    )\n\n    // init here\n    return () => {\n      // when the vnode meets the same structure but with different change trigger\n      // it will not automatically update, thus we simply use h function to manage updating\n      return props.mask\n        ? createVNode(\n            'div',\n            {\n              class: [ns.b(), props.overlayClass],\n              style: {\n                zIndex: props.zIndex,\n              },\n              onClick,\n              onMousedown,\n              onMouseup,\n            },\n            [renderSlot(slots, 'default')],\n            PatchFlags.STYLE | PatchFlags.CLASS | PatchFlags.PROPS,\n            ['onClick', 'onMouseup', 'onMousedown']\n          )\n        : h(\n            'div',\n            {\n              class: props.overlayClass,\n              style: {\n                zIndex: props.zIndex,\n                position: 'fixed',\n                top: '0px',\n                right: '0px',\n                bottom: '0px',\n                left: '0px',\n              } as CSSProperties,\n            },\n            [renderSlot(slots, 'default')]\n          )\n    }\n  },\n})\n"]},"metadata":{},"sourceType":"module"}