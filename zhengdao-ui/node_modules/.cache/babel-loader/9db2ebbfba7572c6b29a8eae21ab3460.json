{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport { defineComponent, getCurrentInstance, ref, computed, unref, provide, toRef, resolveComponent, openBlock, createElementBlock, normalizeClass, createVNode, createSlots, withCtx, renderSlot, createBlock, mergeProps, createCommentVNode } from 'vue';\nimport { ElButton } from '../../button/index.mjs';\nimport { ElTooltip } from '../../tooltip/index.mjs';\nimport { ElScrollbar } from '../../scrollbar/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport '../../roving-focus-group/index.mjs';\nimport '../../slot/index.mjs';\nimport '../../../utils/index.mjs';\nimport { ArrowDown } from '@element-plus/icons-vue';\nimport '../../../constants/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { ElCollection, dropdownProps } from './dropdown.mjs';\nimport { DROPDOWN_INJECTION_KEY } from './tokens.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport ElRovingFocusGroup from '../../roving-focus-group/src/roving-focus-group2.mjs';\nimport { OnlyChild } from '../../slot/src/only-child.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { EVENT_CODE } from '../../../constants/aria.mjs';\nimport { addUnit } from '../../../utils/dom/style.mjs';\nimport { useId } from '../../../hooks/use-id/index.mjs';\nimport { useSize } from '../../../hooks/use-common-props/index.mjs';\nvar ElButtonGroup = ElButton.ButtonGroup;\n\nvar _sfc_main = defineComponent({\n  name: \"ElDropdown\",\n  components: {\n    ElButton: ElButton,\n    ElButtonGroup: ElButtonGroup,\n    ElScrollbar: ElScrollbar,\n    ElDropdownCollection: ElCollection,\n    ElTooltip: ElTooltip,\n    ElRovingFocusGroup: ElRovingFocusGroup,\n    ElOnlyChild: OnlyChild,\n    ElIcon: ElIcon,\n    ArrowDown: ArrowDown\n  },\n  props: dropdownProps,\n  emits: [\"visible-change\", \"click\", \"command\"],\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit;\n\n    var _instance = getCurrentInstance();\n\n    var ns = useNamespace(\"dropdown\");\n\n    var _useLocale = useLocale(),\n        t = _useLocale.t;\n\n    var triggeringElementRef = ref();\n    var referenceElementRef = ref();\n    var popperRef = ref(null);\n    var contentRef = ref(null);\n    var scrollbar = ref(null);\n    var currentTabId = ref(null);\n    var isUsingKeyboard = ref(false);\n    var triggerKeys = [EVENT_CODE.enter, EVENT_CODE.space, EVENT_CODE.down];\n    var wrapStyle = computed(function () {\n      return {\n        maxHeight: addUnit(props.maxHeight)\n      };\n    });\n    var dropdownTriggerKls = computed(function () {\n      return [ns.m(dropdownSize.value)];\n    });\n    var defaultTriggerId = useId().value;\n    var triggerId = computed(function () {\n      return props.id || defaultTriggerId;\n    });\n\n    function handleClick() {\n      handleClose();\n    }\n\n    function handleClose() {\n      var _a;\n\n      (_a = popperRef.value) == null ? void 0 : _a.onClose();\n    }\n\n    function handleOpen() {\n      var _a;\n\n      (_a = popperRef.value) == null ? void 0 : _a.onOpen();\n    }\n\n    var dropdownSize = useSize();\n\n    function commandHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      emit.apply(void 0, [\"command\"].concat(args));\n    }\n\n    function onItemEnter() {}\n\n    function onItemLeave() {\n      var contentEl = unref(contentRef);\n      contentEl == null ? void 0 : contentEl.focus();\n      currentTabId.value = null;\n    }\n\n    function handleCurrentTabIdChange(id) {\n      currentTabId.value = id;\n    }\n\n    function handleEntryFocus(e) {\n      if (!isUsingKeyboard.value) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n      }\n    }\n\n    function handleBeforeShowTooltip() {\n      emit(\"visible-change\", true);\n    }\n\n    function handleShowTooltip(event) {\n      if ((event == null ? void 0 : event.type) === \"keydown\") {\n        contentRef.value.focus();\n      }\n    }\n\n    function handleBeforeHideTooltip() {\n      emit(\"visible-change\", false);\n    }\n\n    provide(DROPDOWN_INJECTION_KEY, {\n      contentRef: contentRef,\n      role: computed(function () {\n        return props.role;\n      }),\n      triggerId: triggerId,\n      isUsingKeyboard: isUsingKeyboard,\n      onItemEnter: onItemEnter,\n      onItemLeave: onItemLeave\n    });\n    provide(\"elDropdown\", {\n      instance: _instance,\n      dropdownSize: dropdownSize,\n      handleClick: handleClick,\n      commandHandler: commandHandler,\n      trigger: toRef(props, \"trigger\"),\n      hideOnClick: toRef(props, \"hideOnClick\")\n    });\n\n    var onFocusAfterTrapped = function onFocusAfterTrapped(e) {\n      var _a, _b;\n\n      e.preventDefault();\n      (_b = (_a = contentRef.value) == null ? void 0 : _a.focus) == null ? void 0 : _b.call(_a, {\n        preventScroll: true\n      });\n    };\n\n    var handlerMainButtonClick = function handlerMainButtonClick(event) {\n      emit(\"click\", event);\n    };\n\n    return {\n      t: t,\n      ns: ns,\n      scrollbar: scrollbar,\n      wrapStyle: wrapStyle,\n      dropdownTriggerKls: dropdownTriggerKls,\n      dropdownSize: dropdownSize,\n      triggerId: triggerId,\n      triggerKeys: triggerKeys,\n      currentTabId: currentTabId,\n      handleCurrentTabIdChange: handleCurrentTabIdChange,\n      handlerMainButtonClick: handlerMainButtonClick,\n      handleEntryFocus: handleEntryFocus,\n      handleClose: handleClose,\n      handleOpen: handleOpen,\n      handleBeforeShowTooltip: handleBeforeShowTooltip,\n      handleShowTooltip: handleShowTooltip,\n      handleBeforeHideTooltip: handleBeforeHideTooltip,\n      onFocusAfterTrapped: onFocusAfterTrapped,\n      popperRef: popperRef,\n      contentRef: contentRef,\n      triggeringElementRef: triggeringElementRef,\n      referenceElementRef: referenceElementRef\n    };\n  }\n});\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _a;\n\n  var _component_el_dropdown_collection = resolveComponent(\"el-dropdown-collection\");\n\n  var _component_el_roving_focus_group = resolveComponent(\"el-roving-focus-group\");\n\n  var _component_el_scrollbar = resolveComponent(\"el-scrollbar\");\n\n  var _component_el_only_child = resolveComponent(\"el-only-child\");\n\n  var _component_el_tooltip = resolveComponent(\"el-tooltip\");\n\n  var _component_el_button = resolveComponent(\"el-button\");\n\n  var _component_arrow_down = resolveComponent(\"arrow-down\");\n\n  var _component_el_icon = resolveComponent(\"el-icon\");\n\n  var _component_el_button_group = resolveComponent(\"el-button-group\");\n\n  return openBlock(), createElementBlock(\"div\", {\n    \"class\": normalizeClass([_ctx.ns.b(), _ctx.ns.is(\"disabled\", _ctx.disabled)])\n  }, [createVNode(_component_el_tooltip, {\n    ref: \"popperRef\",\n    role: _ctx.role,\n    effect: _ctx.effect,\n    \"fallback-placements\": [\"bottom\", \"top\"],\n    \"popper-options\": _ctx.popperOptions,\n    \"gpu-acceleration\": false,\n    \"hide-after\": _ctx.trigger === \"hover\" ? _ctx.hideTimeout : 0,\n    \"manual-mode\": true,\n    placement: _ctx.placement,\n    \"popper-class\": [_ctx.ns.e(\"popper\"), _ctx.popperClass],\n    \"reference-element\": (_a = _ctx.referenceElementRef) == null ? void 0 : _a.$el,\n    trigger: _ctx.trigger,\n    \"trigger-keys\": _ctx.triggerKeys,\n    \"trigger-target-el\": _ctx.contentRef,\n    \"show-after\": _ctx.trigger === \"hover\" ? _ctx.showTimeout : 0,\n    \"stop-popper-mouse-event\": false,\n    \"virtual-ref\": _ctx.triggeringElementRef,\n    \"virtual-triggering\": _ctx.splitButton,\n    disabled: _ctx.disabled,\n    transition: \"\".concat(_ctx.ns.namespace.value, \"-zoom-in-top\"),\n    teleported: \"\",\n    pure: \"\",\n    persistent: \"\",\n    onBeforeShow: _ctx.handleBeforeShowTooltip,\n    onShow: _ctx.handleShowTooltip,\n    onBeforeHide: _ctx.handleBeforeHideTooltip\n  }, createSlots({\n    content: withCtx(function () {\n      return [createVNode(_component_el_scrollbar, {\n        ref: \"scrollbar\",\n        \"wrap-style\": _ctx.wrapStyle,\n        tag: \"div\",\n        \"view-class\": _ctx.ns.e(\"list\")\n      }, {\n        \"default\": withCtx(function () {\n          return [createVNode(_component_el_roving_focus_group, {\n            loop: _ctx.loop,\n            \"current-tab-id\": _ctx.currentTabId,\n            orientation: \"horizontal\",\n            onCurrentTabIdChange: _ctx.handleCurrentTabIdChange,\n            onEntryFocus: _ctx.handleEntryFocus\n          }, {\n            \"default\": withCtx(function () {\n              return [createVNode(_component_el_dropdown_collection, null, {\n                \"default\": withCtx(function () {\n                  return [renderSlot(_ctx.$slots, \"dropdown\")];\n                }),\n                _: 3\n              })];\n            }),\n            _: 3\n          }, 8, [\"loop\", \"current-tab-id\", \"onCurrentTabIdChange\", \"onEntryFocus\"])];\n        }),\n        _: 3\n      }, 8, [\"wrap-style\", \"view-class\"])];\n    }),\n    _: 2\n  }, [!_ctx.splitButton ? {\n    name: \"default\",\n    fn: withCtx(function () {\n      return [createVNode(_component_el_only_child, {\n        id: _ctx.triggerId,\n        role: \"button\",\n        tabindex: _ctx.tabindex\n      }, {\n        \"default\": withCtx(function () {\n          return [renderSlot(_ctx.$slots, \"default\")];\n        }),\n        _: 3\n      }, 8, [\"id\", \"tabindex\"])];\n    })\n  } : void 0]), 1032, [\"role\", \"effect\", \"popper-options\", \"hide-after\", \"placement\", \"popper-class\", \"reference-element\", \"trigger\", \"trigger-keys\", \"trigger-target-el\", \"show-after\", \"virtual-ref\", \"virtual-triggering\", \"disabled\", \"transition\", \"onBeforeShow\", \"onShow\", \"onBeforeHide\"]), _ctx.splitButton ? (openBlock(), createBlock(_component_el_button_group, {\n    key: 0\n  }, {\n    \"default\": withCtx(function () {\n      return [createVNode(_component_el_button, mergeProps({\n        ref: \"referenceElementRef\"\n      }, _ctx.buttonProps, {\n        size: _ctx.dropdownSize,\n        type: _ctx.type,\n        disabled: _ctx.disabled,\n        tabindex: _ctx.tabindex,\n        onClick: _ctx.handlerMainButtonClick\n      }), {\n        \"default\": withCtx(function () {\n          return [renderSlot(_ctx.$slots, \"default\")];\n        }),\n        _: 3\n      }, 16, [\"size\", \"type\", \"disabled\", \"tabindex\", \"onClick\"]), createVNode(_component_el_button, mergeProps({\n        id: _ctx.triggerId,\n        ref: \"triggeringElementRef\"\n      }, _ctx.buttonProps, {\n        role: \"button\",\n        size: _ctx.dropdownSize,\n        type: _ctx.type,\n        \"class\": _ctx.ns.e(\"caret-button\"),\n        disabled: _ctx.disabled,\n        tabindex: _ctx.tabindex,\n        \"aria-label\": _ctx.t(\"el.dropdown.toggleDropdown\")\n      }), {\n        \"default\": withCtx(function () {\n          return [createVNode(_component_el_icon, {\n            \"class\": normalizeClass(_ctx.ns.e(\"icon\"))\n          }, {\n            \"default\": withCtx(function () {\n              return [createVNode(_component_arrow_down)];\n            }),\n            _: 1\n          }, 8, [\"class\"])];\n        }),\n        _: 1\n      }, 16, [\"id\", \"size\", \"type\", \"class\", \"disabled\", \"tabindex\", \"aria-label\"])];\n    }),\n    _: 3\n  })) : createCommentVNode(\"v-if\", true)], 2);\n}\n\nvar Dropdown = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/dropdown/src/dropdown.vue\"]]);\n\nexport { Dropdown as default };","map":{"version":3,"mappings":"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","names":["ElButtonGroup","ElButton","ButtonGroup","_sfc_main","defineComponent","name","components","ElScrollbar","ElDropdownCollection","ElTooltip","ElRovingFocusGroup","ElOnlyChild","ElIcon","ArrowDown","props","emits","setup","emit","_instance","getCurrentInstance","useNamespace","useLocale","t","triggeringElementRef","ref","referenceElementRef","triggerKeys","EVENT_CODE","enter","down","computed","maxHeight","addUnit","ns","m","dropdownSize","value","useId","id","defaultTriggerId","handleClose","_a","useSize","args","contentEl","currentTabId","handleEntryFocus","e","isUsingKeyboard","event","contentRef","provide","role","triggerId","onItemEnter","onItemLeave","instance","handleClick","commandHandler","trigger","hideOnClick","onFocusAfterTrapped","_b","preventScroll","scrollbar","wrapStyle","dropdownTriggerKls","handleCurrentTabIdChange","handlerMainButtonClick","handleOpen","handleBeforeShowTooltip","handleShowTooltip","handleBeforeHideTooltip","popperRef","_component_el_button_group","_openBlock","_normalizeClass","_createVNode","effect","_ctx","placement","disabled","transition","teleported","pure","persistent","onBeforeShow","onShow","onBeforeHide","_createSlots","content","tag","_withCtx","loop","onCurrentTabIdChange","onEntryFocus","_","splitButton","fn","tabindex","key","size","type","onClick","_renderSlot"],"sources":["../../../../../../packages/components/dropdown/src/dropdown.vue"],"sourcesContent":["<template>\n  <div :class=\"[ns.b(), ns.is('disabled', disabled)]\">\n    <el-tooltip\n      ref=\"popperRef\"\n      :role=\"role\"\n      :effect=\"effect\"\n      :fallback-placements=\"['bottom', 'top']\"\n      :popper-options=\"popperOptions\"\n      :gpu-acceleration=\"false\"\n      :hide-after=\"trigger === 'hover' ? hideTimeout : 0\"\n      :manual-mode=\"true\"\n      :placement=\"placement\"\n      :popper-class=\"[ns.e('popper'), popperClass]\"\n      :reference-element=\"referenceElementRef?.$el\"\n      :trigger=\"trigger\"\n      :trigger-keys=\"triggerKeys\"\n      :trigger-target-el=\"contentRef\"\n      :show-after=\"trigger === 'hover' ? showTimeout : 0\"\n      :stop-popper-mouse-event=\"false\"\n      :virtual-ref=\"triggeringElementRef\"\n      :virtual-triggering=\"splitButton\"\n      :disabled=\"disabled\"\n      :transition=\"`${ns.namespace.value}-zoom-in-top`\"\n      teleported\n      pure\n      persistent\n      @before-show=\"handleBeforeShowTooltip\"\n      @show=\"handleShowTooltip\"\n      @before-hide=\"handleBeforeHideTooltip\"\n    >\n      <template #content>\n        <el-scrollbar\n          ref=\"scrollbar\"\n          :wrap-style=\"wrapStyle\"\n          tag=\"div\"\n          :view-class=\"ns.e('list')\"\n        >\n          <el-roving-focus-group\n            :loop=\"loop\"\n            :current-tab-id=\"currentTabId\"\n            orientation=\"horizontal\"\n            @current-tab-id-change=\"handleCurrentTabIdChange\"\n            @entry-focus=\"handleEntryFocus\"\n          >\n            <el-dropdown-collection>\n              <slot name=\"dropdown\" />\n            </el-dropdown-collection>\n          </el-roving-focus-group>\n        </el-scrollbar>\n      </template>\n      <template v-if=\"!splitButton\" #default>\n        <el-only-child :id=\"triggerId\" role=\"button\" :tabindex=\"tabindex\">\n          <slot name=\"default\" />\n        </el-only-child>\n      </template>\n    </el-tooltip>\n    <template v-if=\"splitButton\">\n      <el-button-group>\n        <el-button\n          ref=\"referenceElementRef\"\n          v-bind=\"buttonProps\"\n          :size=\"dropdownSize\"\n          :type=\"type\"\n          :disabled=\"disabled\"\n          :tabindex=\"tabindex\"\n          @click=\"handlerMainButtonClick\"\n        >\n          <slot name=\"default\" />\n        </el-button>\n        <el-button\n          :id=\"triggerId\"\n          ref=\"triggeringElementRef\"\n          v-bind=\"buttonProps\"\n          role=\"button\"\n          :size=\"dropdownSize\"\n          :type=\"type\"\n          :class=\"ns.e('caret-button')\"\n          :disabled=\"disabled\"\n          :tabindex=\"tabindex\"\n          :aria-label=\"t('el.dropdown.toggleDropdown')\"\n        >\n          <el-icon :class=\"ns.e('icon')\"><arrow-down /></el-icon>\n        </el-button>\n      </el-button-group>\n    </template>\n  </div>\n</template>\n<script lang=\"ts\">\n// @ts-nocheck\nimport {\n  computed,\n  defineComponent,\n  getCurrentInstance,\n  provide,\n  ref,\n  toRef,\n  unref,\n} from 'vue'\nimport ElButton from '@element-plus/components/button'\nimport ElTooltip from '@element-plus/components/tooltip'\nimport ElScrollbar from '@element-plus/components/scrollbar'\nimport ElIcon from '@element-plus/components/icon'\nimport ElRovingFocusGroup from '@element-plus/components/roving-focus-group'\nimport { ElOnlyChild } from '@element-plus/components/slot'\nimport { addUnit } from '@element-plus/utils'\nimport { ArrowDown } from '@element-plus/icons-vue'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport { useId, useLocale, useNamespace, useSize } from '@element-plus/hooks'\nimport { ElCollection as ElDropdownCollection, dropdownProps } from './dropdown'\nimport { DROPDOWN_INJECTION_KEY } from './tokens'\n\nimport type { CSSProperties } from 'vue'\n\nconst { ButtonGroup: ElButtonGroup } = ElButton\n\nexport default defineComponent({\n  name: 'ElDropdown',\n  components: {\n    ElButton,\n    ElButtonGroup,\n    ElScrollbar,\n    ElDropdownCollection,\n    ElTooltip,\n    ElRovingFocusGroup,\n    ElOnlyChild,\n    ElIcon,\n    ArrowDown,\n  },\n  props: dropdownProps,\n  emits: ['visible-change', 'click', 'command'],\n  setup(props, { emit }) {\n    const _instance = getCurrentInstance()\n    const ns = useNamespace('dropdown')\n    const { t } = useLocale()\n\n    const triggeringElementRef = ref()\n    const referenceElementRef = ref()\n    const popperRef = ref<InstanceType<typeof ElTooltip> | null>(null)\n    const contentRef = ref<HTMLElement | null>(null)\n    const scrollbar = ref(null)\n    const currentTabId = ref<string | null>(null)\n    const isUsingKeyboard = ref(false)\n    const triggerKeys = [EVENT_CODE.enter, EVENT_CODE.space, EVENT_CODE.down]\n\n    const wrapStyle = computed<CSSProperties>(() => ({\n      maxHeight: addUnit(props.maxHeight),\n    }))\n    const dropdownTriggerKls = computed(() => [ns.m(dropdownSize.value)])\n\n    const defaultTriggerId = useId().value\n    const triggerId = computed<string>(() => {\n      return props.id || defaultTriggerId\n    })\n\n    function handleClick() {\n      handleClose()\n    }\n\n    function handleClose() {\n      popperRef.value?.onClose()\n    }\n\n    function handleOpen() {\n      popperRef.value?.onOpen()\n    }\n\n    const dropdownSize = useSize()\n\n    function commandHandler(...args: any[]) {\n      emit('command', ...args)\n    }\n\n    function onItemEnter() {\n      // NOOP for now\n    }\n\n    function onItemLeave() {\n      const contentEl = unref(contentRef)\n\n      contentEl?.focus()\n      currentTabId.value = null\n    }\n\n    function handleCurrentTabIdChange(id: string) {\n      currentTabId.value = id\n    }\n\n    function handleEntryFocus(e: Event) {\n      if (!isUsingKeyboard.value) {\n        e.preventDefault()\n        e.stopImmediatePropagation()\n      }\n    }\n\n    function handleBeforeShowTooltip() {\n      emit('visible-change', true)\n    }\n\n    function handleShowTooltip(event?: Event) {\n      if (event?.type === 'keydown') {\n        contentRef.value.focus()\n      }\n    }\n\n    function handleBeforeHideTooltip() {\n      emit('visible-change', false)\n    }\n\n    provide(DROPDOWN_INJECTION_KEY, {\n      contentRef,\n      role: computed(() => props.role),\n      triggerId,\n      isUsingKeyboard,\n      onItemEnter,\n      onItemLeave,\n    })\n\n    provide('elDropdown', {\n      instance: _instance,\n      dropdownSize,\n      handleClick,\n      commandHandler,\n      trigger: toRef(props, 'trigger'),\n      hideOnClick: toRef(props, 'hideOnClick'),\n    })\n\n    const onFocusAfterTrapped = (e: Event) => {\n      e.preventDefault()\n      contentRef.value?.focus?.({\n        preventScroll: true,\n      })\n    }\n\n    const handlerMainButtonClick = (event: MouseEvent) => {\n      emit('click', event)\n    }\n\n    return {\n      t,\n      ns,\n      scrollbar,\n      wrapStyle,\n      dropdownTriggerKls,\n      dropdownSize,\n      triggerId,\n      triggerKeys,\n      currentTabId,\n      handleCurrentTabIdChange,\n      handlerMainButtonClick,\n      handleEntryFocus,\n      handleClose,\n      handleOpen,\n      handleBeforeShowTooltip,\n      handleShowTooltip,\n      handleBeforeHideTooltip,\n      onFocusAfterTrapped,\n      popperRef,\n      contentRef,\n      triggeringElementRef,\n      referenceElementRef,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}