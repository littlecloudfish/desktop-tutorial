{"ast":null,"code":"import _defineProperty from \"/home/little/Documents/music_web/backandfrontsep/zhengdao-ui/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _regeneratorRuntime from \"/home/little/Documents/music_web/backandfrontsep/zhengdao-ui/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/little/Documents/music_web/backandfrontsep/zhengdao-ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/home/little/Documents/music_web/backandfrontsep/zhengdao-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"/home/little/Documents/music_web/backandfrontsep/zhengdao-ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.timers.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { defineComponent, inject, ref, watch, nextTick, computed, unref, provide, openBlock, createBlock, mergeProps, withCtx, normalizeClass, normalizeStyle, withModifiers, resolveDynamicComponent, createCommentVNode, createElementBlock, createElementVNode, renderSlot, toDisplayString } from 'vue';\nimport { isEqual } from 'lodash-unified';\nimport { onClickOutside } from '@vueuse/core';\nimport '../../../../hooks/index.mjs';\nimport '../../../../tokens/index.mjs';\nimport { ElInput } from '../../../input/index.mjs';\nimport { ElIcon } from '../../../icon/index.mjs';\nimport { ElTooltip } from '../../../tooltip/index.mjs';\nimport '../../../../utils/index.mjs';\nimport '../../../../constants/index.mjs';\nimport { Clock, Calendar } from '@element-plus/icons-vue';\nimport { valueEquals, formatter, parseDate } from '../utils.mjs';\nimport { timePickerDefaultProps } from './props.mjs';\nimport _export_sfc from '../../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useLocale } from '../../../../hooks/use-locale/index.mjs';\nimport { useNamespace } from '../../../../hooks/use-namespace/index.mjs';\nimport { formContextKey, formItemContextKey } from '../../../../tokens/form.mjs';\nimport { debugWarn } from '../../../../utils/error.mjs';\nimport { isArray } from '@vue/shared';\nimport { EVENT_CODE } from '../../../../constants/aria.mjs';\nimport { useSize } from '../../../../hooks/use-common-props/index.mjs';\nvar _hoisted_1 = [\"id\", \"name\", \"placeholder\", \"value\", \"disabled\", \"readonly\"];\nvar _hoisted_2 = [\"id\", \"name\", \"placeholder\", \"value\", \"disabled\", \"readonly\"];\nvar __default__ = {\n  name: \"Picker\"\n};\n\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: timePickerDefaultProps,\n  emits: [\"update:modelValue\", \"change\", \"focus\", \"blur\", \"calendar-change\", \"panel-change\", \"visible-change\", \"keydown\"],\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose,\n        emit = _ref.emit;\n    var props = __props;\n\n    var _useLocale = useLocale(),\n        lang = _useLocale.lang;\n\n    var nsDate = useNamespace(\"date\");\n    var nsInput = useNamespace(\"input\");\n    var nsRange = useNamespace(\"range\");\n    var elForm = inject(formContextKey, {});\n    var elFormItem = inject(formItemContextKey, {});\n    var elPopperOptions = inject(\"ElPopperOptions\", {});\n    var refPopper = ref();\n    var inputRef = ref();\n    var pickerVisible = ref(false);\n    var pickerActualVisible = ref(false);\n    var valueOnOpen = ref(null);\n    var hasJustTabExitedInput = false;\n    var ignoreFocusEvent = false;\n    watch(pickerVisible, function (val) {\n      if (!val) {\n        userInput.value = null;\n        nextTick(function () {\n          emitChange(props.modelValue);\n        });\n      } else {\n        valueOnOpen.value = props.modelValue;\n      }\n    });\n\n    var emitChange = function emitChange(val, isClear) {\n      var _a;\n\n      if (isClear || !valueEquals(val, valueOnOpen.value)) {\n        emit(\"change\", val);\n        props.validateEvent && ((_a = elFormItem.validate) == null ? void 0 : _a.call(elFormItem, \"change\")[\"catch\"](function (err) {\n          return debugWarn(err);\n        }));\n      }\n    };\n\n    var emitInput = function emitInput(input) {\n      if (!valueEquals(props.modelValue, input)) {\n        var formatted;\n\n        if (isArray(input)) {\n          formatted = input.map(function (item) {\n            return formatter(item, props.valueFormat, lang.value);\n          });\n        } else if (input) {\n          formatted = formatter(input, props.valueFormat, lang.value);\n        }\n\n        emit(\"update:modelValue\", input ? formatted : input, lang.value);\n      }\n    };\n\n    var emitKeydown = function emitKeydown(e) {\n      emit(\"keydown\", e);\n    };\n\n    var refInput = computed(function () {\n      if (inputRef.value) {\n        var _r = isRangeInput.value ? inputRef.value : inputRef.value.$el;\n\n        return Array.from(_r.querySelectorAll(\"input\"));\n      }\n\n      return [];\n    });\n\n    var setSelectionRange = function setSelectionRange(start, end, pos) {\n      var _inputs = refInput.value;\n      if (!_inputs.length) return;\n\n      if (!pos || pos === \"min\") {\n        _inputs[0].setSelectionRange(start, end);\n\n        _inputs[0].focus();\n      } else if (pos === \"max\") {\n        _inputs[1].setSelectionRange(start, end);\n\n        _inputs[1].focus();\n      }\n    };\n\n    var focusOnInputBox = function focusOnInputBox() {\n      focus(true, true);\n      nextTick(function () {\n        ignoreFocusEvent = false;\n      });\n    };\n\n    var onPick = function onPick() {\n      var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n      var visible = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!visible) {\n        focusOnInputBox();\n      }\n\n      pickerVisible.value = visible;\n      var result;\n\n      if (isArray(date)) {\n        result = date.map(function (_) {\n          return _.toDate();\n        });\n      } else {\n        result = date ? date.toDate() : date;\n      }\n\n      userInput.value = null;\n      emitInput(result);\n    };\n\n    var onBeforeShow = function onBeforeShow() {\n      pickerActualVisible.value = true;\n    };\n\n    var onShow = function onShow() {\n      emit(\"visible-change\", true);\n    };\n\n    var onKeydownPopperContent = function onKeydownPopperContent(event) {\n      if ((event == null ? void 0 : event.key) === EVENT_CODE.esc) {\n        focus(true, true);\n      }\n    };\n\n    var onHide = function onHide() {\n      pickerActualVisible.value = false;\n      ignoreFocusEvent = false;\n      emit(\"visible-change\", false);\n    };\n\n    var focus = function focus() {\n      var focusStartInput = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      var isIgnoreFocusEvent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      ignoreFocusEvent = isIgnoreFocusEvent;\n\n      var _unref = unref(refInput),\n          _unref2 = _slicedToArray(_unref, 2),\n          leftInput = _unref2[0],\n          rightInput = _unref2[1];\n\n      var input = leftInput;\n\n      if (!focusStartInput && isRangeInput.value) {\n        input = rightInput;\n      }\n\n      if (input) {\n        input.focus();\n      }\n    };\n\n    var handleFocusInput = function handleFocusInput(e) {\n      if (props.readonly || pickerDisabled.value || pickerVisible.value || ignoreFocusEvent) {\n        return;\n      }\n\n      pickerVisible.value = true;\n      emit(\"focus\", e);\n    };\n\n    var currentHandleBlurDeferCallback = void 0;\n\n    var handleBlurInput = function handleBlurInput(e) {\n      var handleBlurDefer = /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  setTimeout(function () {\n                    var _a, _b;\n\n                    if (currentHandleBlurDeferCallback === handleBlurDefer) {\n                      if (!(((_a = refPopper.value) == null ? void 0 : _a.isFocusInsideContent()) && !hasJustTabExitedInput) && refInput.value.filter(function (input) {\n                        return input.contains(document.activeElement);\n                      }).length === 0) {\n                        handleChange();\n                        pickerVisible.value = false;\n                        emit(\"blur\", e);\n                        props.validateEvent && ((_b = elFormItem.validate) == null ? void 0 : _b.call(elFormItem, \"blur\")[\"catch\"](function (err) {\n                          return debugWarn(err);\n                        }));\n                      }\n\n                      hasJustTabExitedInput = false;\n                    }\n                  }, 0);\n\n                case 1:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function handleBlurDefer() {\n          return _ref2.apply(this, arguments);\n        };\n      }();\n\n      currentHandleBlurDeferCallback = handleBlurDefer;\n      handleBlurDefer();\n    };\n\n    var pickerDisabled = computed(function () {\n      return props.disabled || elForm.disabled;\n    });\n    var parsedValue = computed(function () {\n      var dayOrDays;\n\n      if (valueIsEmpty.value) {\n        if (pickerOptions.value.getDefaultValue) {\n          dayOrDays = pickerOptions.value.getDefaultValue();\n        }\n      } else {\n        if (isArray(props.modelValue)) {\n          dayOrDays = props.modelValue.map(function (d) {\n            return parseDate(d, props.valueFormat, lang.value);\n          });\n        } else {\n          dayOrDays = parseDate(props.modelValue, props.valueFormat, lang.value);\n        }\n      }\n\n      if (pickerOptions.value.getRangeAvailableTime) {\n        var availableResult = pickerOptions.value.getRangeAvailableTime(dayOrDays);\n\n        if (!isEqual(availableResult, dayOrDays)) {\n          dayOrDays = availableResult;\n          emitInput(isArray(dayOrDays) ? dayOrDays.map(function (_) {\n            return _.toDate();\n          }) : dayOrDays.toDate());\n        }\n      }\n\n      if (isArray(dayOrDays) && dayOrDays.some(function (day) {\n        return !day;\n      })) {\n        dayOrDays = [];\n      }\n\n      return dayOrDays;\n    });\n    var displayValue = computed(function () {\n      if (!pickerOptions.value.panelReady) return \"\";\n      var formattedValue = formatDayjsToString(parsedValue.value);\n\n      if (isArray(userInput.value)) {\n        return [userInput.value[0] || formattedValue && formattedValue[0] || \"\", userInput.value[1] || formattedValue && formattedValue[1] || \"\"];\n      } else if (userInput.value !== null) {\n        return userInput.value;\n      }\n\n      if (!isTimePicker.value && valueIsEmpty.value) return \"\";\n      if (!pickerVisible.value && valueIsEmpty.value) return \"\";\n\n      if (formattedValue) {\n        return isDatesPicker.value ? formattedValue.join(\", \") : formattedValue;\n      }\n\n      return \"\";\n    });\n    var isTimeLikePicker = computed(function () {\n      return props.type.includes(\"time\");\n    });\n    var isTimePicker = computed(function () {\n      return props.type.startsWith(\"time\");\n    });\n    var isDatesPicker = computed(function () {\n      return props.type === \"dates\";\n    });\n    var triggerIcon = computed(function () {\n      return props.prefixIcon || (isTimeLikePicker.value ? Clock : Calendar);\n    });\n    var showClose = ref(false);\n\n    var onClearIconClick = function onClearIconClick(event) {\n      if (props.readonly || pickerDisabled.value) return;\n\n      if (showClose.value) {\n        event.stopPropagation();\n        focusOnInputBox();\n        emitInput(null);\n        emitChange(null, true);\n        showClose.value = false;\n        pickerVisible.value = false;\n        pickerOptions.value.handleClear && pickerOptions.value.handleClear();\n      }\n    };\n\n    var valueIsEmpty = computed(function () {\n      var modelValue = props.modelValue;\n      return !modelValue || isArray(modelValue) && !modelValue.filter(Boolean).length;\n    });\n\n    var onMouseDownInput = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(event) {\n        var _a;\n\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(props.readonly || pickerDisabled.value)) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 2:\n                if (((_a = event.target) == null ? void 0 : _a.tagName) !== \"INPUT\" || refInput.value.includes(document.activeElement)) {\n                  pickerVisible.value = true;\n                }\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function onMouseDownInput(_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    var onMouseEnter = function onMouseEnter() {\n      if (props.readonly || pickerDisabled.value) return;\n\n      if (!valueIsEmpty.value && props.clearable) {\n        showClose.value = true;\n      }\n    };\n\n    var onMouseLeave = function onMouseLeave() {\n      showClose.value = false;\n    };\n\n    var onTouchStartInput = function onTouchStartInput(event) {\n      var _a;\n\n      if (((_a = event.touches[0].target) == null ? void 0 : _a.tagName) !== \"INPUT\" || refInput.value.includes(document.activeElement)) {\n        pickerVisible.value = true;\n      }\n    };\n\n    var isRangeInput = computed(function () {\n      return props.type.includes(\"range\");\n    });\n    var pickerSize = useSize();\n    var popperEl = computed(function () {\n      var _a, _b;\n\n      return (_b = (_a = unref(refPopper)) == null ? void 0 : _a.popperRef) == null ? void 0 : _b.contentRef;\n    });\n    var actualInputRef = computed(function () {\n      var _a;\n\n      if (unref(isRangeInput)) {\n        return unref(inputRef);\n      }\n\n      return (_a = unref(inputRef)) == null ? void 0 : _a.$el;\n    });\n    onClickOutside(actualInputRef, function (e) {\n      var unrefedPopperEl = unref(popperEl);\n      var inputEl = unref(actualInputRef);\n      if (unrefedPopperEl && (e.target === unrefedPopperEl || e.composedPath().includes(unrefedPopperEl)) || e.target === inputEl || e.composedPath().includes(inputEl)) return;\n      pickerVisible.value = false;\n    });\n    var userInput = ref(null);\n\n    var handleChange = function handleChange() {\n      if (userInput.value) {\n        var value = parseUserInputToDayjs(displayValue.value);\n\n        if (value) {\n          if (isValidValue(value)) {\n            emitInput(isArray(value) ? value.map(function (_) {\n              return _.toDate();\n            }) : value.toDate());\n            userInput.value = null;\n          }\n        }\n      }\n\n      if (userInput.value === \"\") {\n        emitInput(null);\n        emitChange(null);\n        userInput.value = null;\n      }\n    };\n\n    var parseUserInputToDayjs = function parseUserInputToDayjs(value) {\n      if (!value) return null;\n      return pickerOptions.value.parseUserInput(value);\n    };\n\n    var formatDayjsToString = function formatDayjsToString(value) {\n      if (!value) return null;\n      return pickerOptions.value.formatToString(value);\n    };\n\n    var isValidValue = function isValidValue(value) {\n      return pickerOptions.value.isValidValue(value);\n    };\n\n    var handleKeydownInput = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(event) {\n        var code;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(props.readonly || pickerDisabled.value)) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 2:\n                code = event.code;\n                emitKeydown(event);\n\n                if (!(code === EVENT_CODE.esc)) {\n                  _context3.next = 7;\n                  break;\n                }\n\n                if (pickerVisible.value === true) {\n                  pickerVisible.value = false;\n                  event.preventDefault();\n                  event.stopPropagation();\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 7:\n                if (!(code === EVENT_CODE.down)) {\n                  _context3.next = 16;\n                  break;\n                }\n\n                if (pickerOptions.value.handleFocusPicker) {\n                  event.preventDefault();\n                  event.stopPropagation();\n                }\n\n                if (!(pickerVisible.value === false)) {\n                  _context3.next = 13;\n                  break;\n                }\n\n                pickerVisible.value = true;\n                _context3.next = 13;\n                return nextTick();\n\n              case 13:\n                if (!pickerOptions.value.handleFocusPicker) {\n                  _context3.next = 16;\n                  break;\n                }\n\n                pickerOptions.value.handleFocusPicker();\n                return _context3.abrupt(\"return\");\n\n              case 16:\n                if (!(code === EVENT_CODE.tab)) {\n                  _context3.next = 19;\n                  break;\n                }\n\n                hasJustTabExitedInput = true;\n                return _context3.abrupt(\"return\");\n\n              case 19:\n                if (!(code === EVENT_CODE.enter || code === EVENT_CODE.numpadEnter)) {\n                  _context3.next = 23;\n                  break;\n                }\n\n                if (userInput.value === null || userInput.value === \"\" || isValidValue(parseUserInputToDayjs(displayValue.value))) {\n                  handleChange();\n                  pickerVisible.value = false;\n                }\n\n                event.stopPropagation();\n                return _context3.abrupt(\"return\");\n\n              case 23:\n                if (!userInput.value) {\n                  _context3.next = 26;\n                  break;\n                }\n\n                event.stopPropagation();\n                return _context3.abrupt(\"return\");\n\n              case 26:\n                if (pickerOptions.value.handleKeydownInput) {\n                  pickerOptions.value.handleKeydownInput(event);\n                }\n\n              case 27:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function handleKeydownInput(_x2) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    var onUserInput = function onUserInput(e) {\n      userInput.value = e;\n\n      if (!pickerVisible.value) {\n        pickerVisible.value = true;\n      }\n    };\n\n    var handleStartInput = function handleStartInput(event) {\n      var target = event.target;\n\n      if (userInput.value) {\n        userInput.value = [target.value, userInput.value[1]];\n      } else {\n        userInput.value = [target.value, null];\n      }\n    };\n\n    var handleEndInput = function handleEndInput(event) {\n      var target = event.target;\n\n      if (userInput.value) {\n        userInput.value = [userInput.value[0], target.value];\n      } else {\n        userInput.value = [null, target.value];\n      }\n    };\n\n    var handleStartChange = function handleStartChange() {\n      var _a;\n\n      var values = userInput.value;\n      var value = parseUserInputToDayjs(values && values[0]);\n      var parsedVal = unref(parsedValue);\n\n      if (value && value.isValid()) {\n        userInput.value = [formatDayjsToString(value), ((_a = displayValue.value) == null ? void 0 : _a[1]) || null];\n        var newValue = [value, parsedVal && (parsedVal[1] || null)];\n\n        if (isValidValue(newValue)) {\n          emitInput(newValue);\n          userInput.value = null;\n        }\n      }\n    };\n\n    var handleEndChange = function handleEndChange() {\n      var _a;\n\n      var values = unref(userInput);\n      var value = parseUserInputToDayjs(values && values[1]);\n      var parsedVal = unref(parsedValue);\n\n      if (value && value.isValid()) {\n        userInput.value = [((_a = unref(displayValue)) == null ? void 0 : _a[0]) || null, formatDayjsToString(value)];\n        var newValue = [parsedVal && parsedVal[0], value];\n\n        if (isValidValue(newValue)) {\n          emitInput(newValue);\n          userInput.value = null;\n        }\n      }\n    };\n\n    var pickerOptions = ref({});\n\n    var onSetPickerOption = function onSetPickerOption(e) {\n      pickerOptions.value[e[0]] = e[1];\n      pickerOptions.value.panelReady = true;\n    };\n\n    var onCalendarChange = function onCalendarChange(e) {\n      emit(\"calendar-change\", e);\n    };\n\n    var onPanelChange = function onPanelChange(value, mode, view) {\n      emit(\"panel-change\", value, mode, view);\n    };\n\n    provide(\"EP_PICKER_BASE\", {\n      props: props\n    });\n    expose({\n      focus: focus,\n      handleFocusInput: handleFocusInput,\n      handleBlurInput: handleBlurInput,\n      onPick: onPick\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createBlock(unref(ElTooltip), mergeProps({\n        ref_key: \"refPopper\",\n        ref: refPopper,\n        visible: pickerVisible.value,\n        effect: \"light\",\n        pure: \"\",\n        trigger: \"click\"\n      }, _ctx.$attrs, {\n        role: \"dialog\",\n        teleported: \"\",\n        transition: \"\".concat(unref(nsDate).namespace.value, \"-zoom-in-top\"),\n        \"popper-class\": [\"\".concat(unref(nsDate).namespace.value, \"-picker__popper\"), _ctx.popperClass],\n        \"popper-options\": unref(elPopperOptions),\n        \"fallback-placements\": [\"bottom\", \"top\", \"right\", \"left\"],\n        \"gpu-acceleration\": false,\n        \"stop-popper-mouse-event\": false,\n        \"hide-after\": 0,\n        persistent: \"\",\n        onBeforeShow: onBeforeShow,\n        onShow: onShow,\n        onHide: onHide\n      }), {\n        \"default\": withCtx(function () {\n          return [!unref(isRangeInput) ? (openBlock(), createBlock(unref(ElInput), {\n            key: 0,\n            id: _ctx.id,\n            ref_key: \"inputRef\",\n            ref: inputRef,\n            \"container-role\": \"combobox\",\n            \"model-value\": unref(displayValue),\n            name: _ctx.name,\n            size: unref(pickerSize),\n            disabled: unref(pickerDisabled),\n            placeholder: _ctx.placeholder,\n            \"class\": normalizeClass([unref(nsDate).b(\"editor\"), unref(nsDate).bm(\"editor\", _ctx.type), _ctx.$attrs[\"class\"]]),\n            style: normalizeStyle(_ctx.$attrs.style),\n            readonly: !_ctx.editable || _ctx.readonly || unref(isDatesPicker) || _ctx.type === \"week\",\n            label: _ctx.label,\n            tabindex: _ctx.tabindex,\n            \"validate-event\": _ctx.validateEvent,\n            onInput: onUserInput,\n            onFocus: handleFocusInput,\n            onBlur: handleBlurInput,\n            onKeydown: handleKeydownInput,\n            onChange: handleChange,\n            onMousedown: onMouseDownInput,\n            onMouseenter: onMouseEnter,\n            onMouseleave: onMouseLeave,\n            onTouchstart: onTouchStartInput,\n            onClick: _cache[0] || (_cache[0] = withModifiers(function () {}, [\"stop\"]))\n          }, {\n            prefix: withCtx(function () {\n              return [unref(triggerIcon) ? (openBlock(), createBlock(unref(ElIcon), {\n                key: 0,\n                \"class\": normalizeClass(unref(nsInput).e(\"icon\")),\n                onMousedown: withModifiers(onMouseDownInput, [\"prevent\"]),\n                onTouchstart: onTouchStartInput\n              }, {\n                \"default\": withCtx(function () {\n                  return [(openBlock(), createBlock(resolveDynamicComponent(unref(triggerIcon))))];\n                }),\n                _: 1\n              }, 8, [\"class\", \"onMousedown\"])) : createCommentVNode(\"v-if\", true)];\n            }),\n            suffix: withCtx(function () {\n              return [showClose.value && _ctx.clearIcon ? (openBlock(), createBlock(unref(ElIcon), {\n                key: 0,\n                \"class\": normalizeClass(\"\".concat(unref(nsInput).e(\"icon\"), \" clear-icon\")),\n                onClick: withModifiers(onClearIconClick, [\"stop\"])\n              }, {\n                \"default\": withCtx(function () {\n                  return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.clearIcon)))];\n                }),\n                _: 1\n              }, 8, [\"class\", \"onClick\"])) : createCommentVNode(\"v-if\", true)];\n            }),\n            _: 1\n          }, 8, [\"id\", \"model-value\", \"name\", \"size\", \"disabled\", \"placeholder\", \"class\", \"style\", \"readonly\", \"label\", \"tabindex\", \"validate-event\", \"onKeydown\"])) : (openBlock(), createElementBlock(\"div\", {\n            key: 1,\n            ref_key: \"inputRef\",\n            ref: inputRef,\n            \"class\": normalizeClass([unref(nsDate).b(\"editor\"), unref(nsDate).bm(\"editor\", _ctx.type), unref(nsInput).e(\"wrapper\"), unref(nsDate).is(\"disabled\", unref(pickerDisabled)), unref(nsDate).is(\"active\", pickerVisible.value), unref(nsRange).b(\"editor\"), unref(pickerSize) ? unref(nsRange).bm(\"editor\", unref(pickerSize)) : \"\", _ctx.$attrs[\"class\"]]),\n            style: normalizeStyle(_ctx.$attrs.style),\n            onClick: handleFocusInput,\n            onMouseenter: onMouseEnter,\n            onMouseleave: onMouseLeave,\n            onTouchstart: onTouchStartInput,\n            onKeydown: handleKeydownInput\n          }, [unref(triggerIcon) ? (openBlock(), createBlock(unref(ElIcon), {\n            key: 0,\n            \"class\": normalizeClass([unref(nsInput).e(\"icon\"), unref(nsRange).e(\"icon\")]),\n            onMousedown: withModifiers(onMouseDownInput, [\"prevent\"]),\n            onTouchstart: onTouchStartInput\n          }, {\n            \"default\": withCtx(function () {\n              return [(openBlock(), createBlock(resolveDynamicComponent(unref(triggerIcon))))];\n            }),\n            _: 1\n          }, 8, [\"class\", \"onMousedown\"])) : createCommentVNode(\"v-if\", true), createElementVNode(\"input\", {\n            id: _ctx.id && _ctx.id[0],\n            autocomplete: \"off\",\n            name: _ctx.name && _ctx.name[0],\n            placeholder: _ctx.startPlaceholder,\n            value: unref(displayValue) && unref(displayValue)[0],\n            disabled: unref(pickerDisabled),\n            readonly: !_ctx.editable || _ctx.readonly,\n            \"class\": normalizeClass(unref(nsRange).b(\"input\")),\n            onMousedown: onMouseDownInput,\n            onInput: handleStartInput,\n            onChange: handleStartChange,\n            onFocus: handleFocusInput,\n            onBlur: handleBlurInput\n          }, null, 42, _hoisted_1), renderSlot(_ctx.$slots, \"range-separator\", {}, function () {\n            return [createElementVNode(\"span\", {\n              \"class\": normalizeClass(unref(nsRange).b(\"separator\"))\n            }, toDisplayString(_ctx.rangeSeparator), 3)];\n          }), createElementVNode(\"input\", {\n            id: _ctx.id && _ctx.id[1],\n            autocomplete: \"off\",\n            name: _ctx.name && _ctx.name[1],\n            placeholder: _ctx.endPlaceholder,\n            value: unref(displayValue) && unref(displayValue)[1],\n            disabled: unref(pickerDisabled),\n            readonly: !_ctx.editable || _ctx.readonly,\n            \"class\": normalizeClass(unref(nsRange).b(\"input\")),\n            onMousedown: onMouseDownInput,\n            onFocus: handleFocusInput,\n            onBlur: handleBlurInput,\n            onInput: handleEndInput,\n            onChange: handleEndChange\n          }, null, 42, _hoisted_2), _ctx.clearIcon ? (openBlock(), createBlock(unref(ElIcon), {\n            key: 1,\n            \"class\": normalizeClass([unref(nsInput).e(\"icon\"), unref(nsRange).e(\"close-icon\"), _defineProperty({}, unref(nsRange).e(\"close-icon--hidden\"), !showClose.value)]),\n            onClick: onClearIconClick\n          }, {\n            \"default\": withCtx(function () {\n              return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.clearIcon)))];\n            }),\n            _: 1\n          }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true)], 38))];\n        }),\n        content: withCtx(function () {\n          return [renderSlot(_ctx.$slots, \"default\", {\n            visible: pickerVisible.value,\n            actualVisible: pickerActualVisible.value,\n            parsedValue: unref(parsedValue),\n            format: _ctx.format,\n            unlinkPanels: _ctx.unlinkPanels,\n            type: _ctx.type,\n            defaultValue: _ctx.defaultValue,\n            onPick: onPick,\n            onSelectRange: setSelectionRange,\n            onSetPickerOption: onSetPickerOption,\n            onCalendarChange: onCalendarChange,\n            onPanelChange: onPanelChange,\n            onKeydown: onKeydownPopperContent,\n            onMousedown: _cache[1] || (_cache[1] = withModifiers(function () {}, [\"stop\"]))\n          })];\n        }),\n        _: 3\n      }, 16, [\"visible\", \"transition\", \"popper-class\", \"popper-options\"]);\n    };\n  }\n}));\n\nvar CommonPicker = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/time-picker/src/common/picker.vue\"]]);\n\nexport { CommonPicker as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAyNA;IAAA;;IAEA;IACA;IACA;IAEA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IAEA;IACA;IAEAA;MACA;QACAC;QACAC;UACAC;QACA,CAFA;MAGA,CALA,MAKA;QACAC;MACA;IACA,CATA;;IAUA,qCACAC,GADA,EAEAC,OAFA,EAGA;MAEA;;MACA;QACAC;QAEAC;UAAA;QAAA;MACA;IACA,CAXA;;IAYA;MACA;QACA;;QACA;UAEAC,SACA;YAAA;UAAA,EADA;QAEA,CAJA,MAIA;UACAA;QACA;;QACAF;MACA;IACA,CAZA;;IAaA;MACAA;IAEA,CAHA;;IAIA;MACA;QAGA;;QACA;MACA;;MACA;IAEA,CATA;;IAUA;MACA;MAAA,qBACA;;MACA;QACAG;;QACAA;MACA,CAHA,MAGA;QACAA;;QACAA;MACA;IACA,CAVA;;IAWA;MACAC;MACAT;QACAU;MACA,CAFA;IAIA,CANA;;IAOA;MAAA;MAAA;;MACA;QACAC;MACA;;MACAC;MACA;;MACA;QACAC;UAAA;QAAA;MAEA,CAHA,MAGA;QACAA;MACA;;MACAd;MACAe;IAEA,CAfA;;IAgBA;MACAC;IAEA,CAHA;;IAIA;MACAV;IAEA,CAHA;;IAIA;MACA;QACAI;MACA;IAEA,CALA;;IAMA;MACAM;MACAL;MACAL;IAEA,CALA;;IAMA;MAAA;MAAA;MACAK;;MACA;MAAA;MAAA;MAAA;;MACA;;MACA;QACAM;MACA;;MACA;QACAA;MACA;IAEA,CAXA;;IAYA,IACAC,gBACA,YADAA,gBACA;MAIA;QACA;MACA;;MACAL;MACAP;IAEA,CAZA;;IAiBA;;IACA;MACA;QAAA;UAAA;YAAA;cAAA;gBAAA;kBACAa;oBAEA,QACAC,EADA;;oBAIA;sBACA,sBACA,MADA,KACA,IADA,GACA,MADA,GACAC,yBADA,KACA,sBADA,KACAC;wBACA;sBACA,CAFA,EAEAC,MAFA,KAEA,CAHA,EAGA;wBACAC;wBACAX;wBAEAP;wBACAC;0BAAA;wBAAA;sBACA;;sBACAk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","names":["watch","userInput","nextTick","emitChange","valueOnOpen","val","isClear","emit","props","formatted","_inputs","focus","ignoreFocusEvent","focusOnInputBox","pickerVisible","result","emitInput","pickerActualVisible","input","handleFocusInput","setTimeout","_b","_a","refInput","length","handleChange","hasJustTabExitedInput","currentHandleBlurDeferCallback","handleBlurDefer","dayOrDays","isArray","event","showClose","pickerOptions","unref","onClickOutside","code","emitKeydown","formatDayjsToString"],"sources":["../../../../../../../packages/components/time-picker/src/common/picker.vue"],"sourcesContent":["<template>\n  <el-tooltip\n    ref=\"refPopper\"\n    :visible=\"pickerVisible\"\n    effect=\"light\"\n    pure\n    trigger=\"click\"\n    v-bind=\"$attrs\"\n    role=\"dialog\"\n    teleported\n    :transition=\"`${nsDate.namespace.value}-zoom-in-top`\"\n    :popper-class=\"[`${nsDate.namespace.value}-picker__popper`, popperClass]\"\n    :popper-options=\"elPopperOptions\"\n    :fallback-placements=\"['bottom', 'top', 'right', 'left']\"\n    :gpu-acceleration=\"false\"\n    :stop-popper-mouse-event=\"false\"\n    :hide-after=\"0\"\n    persistent\n    @before-show=\"onBeforeShow\"\n    @show=\"onShow\"\n    @hide=\"onHide\"\n  >\n    <template #default>\n      <el-input\n        v-if=\"!isRangeInput\"\n        :id=\"(id as string | undefined)\"\n        ref=\"inputRef\"\n        container-role=\"combobox\"\n        :model-value=\"(displayValue as string)\"\n        :name=\"name\"\n        :size=\"pickerSize\"\n        :disabled=\"pickerDisabled\"\n        :placeholder=\"placeholder\"\n        :class=\"[nsDate.b('editor'), nsDate.bm('editor', type), $attrs.class]\"\n        :style=\"$attrs.style\"\n        :readonly=\"!editable || readonly || isDatesPicker || type === 'week'\"\n        :label=\"label\"\n        :tabindex=\"tabindex\"\n        :validate-event=\"validateEvent\"\n        @input=\"onUserInput\"\n        @focus=\"handleFocusInput\"\n        @blur=\"handleBlurInput\"\n        @keydown=\"\n          //\n          handleKeydownInput as any\n        \"\n        @change=\"handleChange\"\n        @mousedown=\"onMouseDownInput\"\n        @mouseenter=\"onMouseEnter\"\n        @mouseleave=\"onMouseLeave\"\n        @touchstart=\"onTouchStartInput\"\n        @click.stop\n      >\n        <template #prefix>\n          <el-icon\n            v-if=\"triggerIcon\"\n            :class=\"nsInput.e('icon')\"\n            @mousedown.prevent=\"onMouseDownInput\"\n            @touchstart=\"onTouchStartInput\"\n          >\n            <component :is=\"triggerIcon\" />\n          </el-icon>\n        </template>\n        <template #suffix>\n          <el-icon\n            v-if=\"showClose && clearIcon\"\n            :class=\"`${nsInput.e('icon')} clear-icon`\"\n            @click.stop=\"onClearIconClick\"\n          >\n            <component :is=\"clearIcon\" />\n          </el-icon>\n        </template>\n      </el-input>\n      <div\n        v-else\n        ref=\"inputRef\"\n        :class=\"[\n          nsDate.b('editor'),\n          nsDate.bm('editor', type),\n          nsInput.e('wrapper'),\n          nsDate.is('disabled', pickerDisabled),\n          nsDate.is('active', pickerVisible),\n          nsRange.b('editor'),\n          pickerSize ? nsRange.bm('editor', pickerSize) : '',\n          $attrs.class,\n        ]\"\n        :style=\"($attrs.style as any)\"\n        @click=\"handleFocusInput\"\n        @mouseenter=\"onMouseEnter\"\n        @mouseleave=\"onMouseLeave\"\n        @touchstart=\"onTouchStartInput\"\n        @keydown=\"handleKeydownInput\"\n      >\n        <el-icon\n          v-if=\"triggerIcon\"\n          :class=\"[nsInput.e('icon'), nsRange.e('icon')]\"\n          @mousedown.prevent=\"onMouseDownInput\"\n          @touchstart=\"onTouchStartInput\"\n        >\n          <component :is=\"triggerIcon\" />\n        </el-icon>\n        <input\n          :id=\"id && id[0]\"\n          autocomplete=\"off\"\n          :name=\"name && name[0]\"\n          :placeholder=\"startPlaceholder\"\n          :value=\"displayValue && displayValue[0]\"\n          :disabled=\"pickerDisabled\"\n          :readonly=\"!editable || readonly\"\n          :class=\"nsRange.b('input')\"\n          @mousedown=\"onMouseDownInput\"\n          @input=\"handleStartInput\"\n          @change=\"handleStartChange\"\n          @focus=\"handleFocusInput\"\n          @blur=\"handleBlurInput\"\n        />\n        <slot name=\"range-separator\">\n          <span :class=\"nsRange.b('separator')\">{{ rangeSeparator }}</span>\n        </slot>\n        <input\n          :id=\"id && id[1]\"\n          autocomplete=\"off\"\n          :name=\"name && name[1]\"\n          :placeholder=\"endPlaceholder\"\n          :value=\"displayValue && displayValue[1]\"\n          :disabled=\"pickerDisabled\"\n          :readonly=\"!editable || readonly\"\n          :class=\"nsRange.b('input')\"\n          @mousedown=\"onMouseDownInput\"\n          @focus=\"handleFocusInput\"\n          @blur=\"handleBlurInput\"\n          @input=\"handleEndInput\"\n          @change=\"handleEndChange\"\n        />\n        <el-icon\n          v-if=\"clearIcon\"\n          :class=\"[\n            nsInput.e('icon'),\n            nsRange.e('close-icon'),\n            {\n              [nsRange.e('close-icon--hidden')]: !showClose,\n            },\n          ]\"\n          @click=\"onClearIconClick\"\n        >\n          <component :is=\"clearIcon\" />\n        </el-icon>\n      </div>\n    </template>\n    <template #content>\n      <slot\n        :visible=\"pickerVisible\"\n        :actual-visible=\"pickerActualVisible\"\n        :parsed-value=\"parsedValue\"\n        :format=\"format\"\n        :unlink-panels=\"unlinkPanels\"\n        :type=\"type\"\n        :default-value=\"defaultValue\"\n        @pick=\"onPick\"\n        @select-range=\"setSelectionRange\"\n        @set-picker-option=\"onSetPickerOption\"\n        @calendar-change=\"onCalendarChange\"\n        @panel-change=\"onPanelChange\"\n        @keydown=\"onKeydownPopperContent\"\n        @mousedown.stop\n      />\n    </template>\n  </el-tooltip>\n</template>\n<script lang=\"ts\" setup>\nimport { computed, inject, nextTick, provide, ref, unref, watch } from 'vue'\nimport { isEqual } from 'lodash-unified'\nimport { onClickOutside } from '@vueuse/core'\nimport { useLocale, useNamespace, useSize } from '@element-plus/hooks'\nimport { formContextKey, formItemContextKey } from '@element-plus/tokens'\nimport ElInput from '@element-plus/components/input'\nimport ElIcon from '@element-plus/components/icon'\nimport ElTooltip from '@element-plus/components/tooltip'\nimport { debugWarn, isArray } from '@element-plus/utils'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport { Calendar, Clock } from '@element-plus/icons-vue'\nimport { formatter, parseDate, valueEquals } from '../utils'\nimport { timePickerDefaultProps } from './props'\n\nimport type { Dayjs } from 'dayjs'\nimport type { ComponentPublicInstance } from 'vue'\nimport type { Options } from '@popperjs/core'\nimport type { FormContext, FormItemContext } from '@element-plus/tokens'\nimport type {\n  DateModelType,\n  DateOrDates,\n  DayOrDays,\n  PickerOptions,\n  SingleOrRange,\n  TimePickerDefaultProps,\n  UserInput,\n} from './props'\nimport type { TooltipInstance } from '@element-plus/components/tooltip'\n\n// Date object and string\n\ndefineOptions({\n  name: 'Picker',\n})\n\nconst props = defineProps(timePickerDefaultProps)\nconst emit = defineEmits([\n  'update:modelValue',\n  'change',\n  'focus',\n  'blur',\n  'calendar-change',\n  'panel-change',\n  'visible-change',\n  'keydown',\n])\n\nconst { lang } = useLocale()\n\nconst nsDate = useNamespace('date')\nconst nsInput = useNamespace('input')\nconst nsRange = useNamespace('range')\n\nconst elForm = inject(formContextKey, {} as FormContext)\nconst elFormItem = inject(formItemContextKey, {} as FormItemContext)\nconst elPopperOptions = inject('ElPopperOptions', {} as Options)\n\nconst refPopper = ref<TooltipInstance>()\nconst inputRef = ref<HTMLElement | ComponentPublicInstance>()\nconst pickerVisible = ref(false)\nconst pickerActualVisible = ref(false)\nconst valueOnOpen = ref<TimePickerDefaultProps['modelValue'] | null>(null)\n\nlet hasJustTabExitedInput = false\nlet ignoreFocusEvent = false\n\nwatch(pickerVisible, (val) => {\n  if (!val) {\n    userInput.value = null\n    nextTick(() => {\n      emitChange(props.modelValue)\n    })\n  } else {\n    valueOnOpen.value = props.modelValue\n  }\n})\nconst emitChange = (\n  val: TimePickerDefaultProps['modelValue'] | null,\n  isClear?: boolean\n) => {\n  // determine user real change only\n  if (isClear || !valueEquals(val, valueOnOpen.value)) {\n    emit('change', val)\n    props.validateEvent &&\n      elFormItem.validate?.('change').catch((err) => debugWarn(err))\n  }\n}\nconst emitInput = (input: SingleOrRange<DateModelType | Dayjs> | null) => {\n  if (!valueEquals(props.modelValue, input)) {\n    let formatted\n    if (isArray(input)) {\n      formatted = input.map((item) =>\n        formatter(item, props.valueFormat, lang.value)\n      )\n    } else if (input) {\n      formatted = formatter(input, props.valueFormat, lang.value)\n    }\n    emit('update:modelValue', input ? formatted : input, lang.value)\n  }\n}\nconst emitKeydown = (e: KeyboardEvent) => {\n  emit('keydown', e)\n}\n\nconst refInput = computed<HTMLInputElement[]>(() => {\n  if (inputRef.value) {\n    const _r = isRangeInput.value\n      ? inputRef.value\n      : (inputRef.value as any as ComponentPublicInstance).$el\n    return Array.from<HTMLInputElement>(_r.querySelectorAll('input'))\n  }\n  return []\n})\n\nconst setSelectionRange = (start: number, end: number, pos?: 'min' | 'max') => {\n  const _inputs = refInput.value\n  if (!_inputs.length) return\n  if (!pos || pos === 'min') {\n    _inputs[0].setSelectionRange(start, end)\n    _inputs[0].focus()\n  } else if (pos === 'max') {\n    _inputs[1].setSelectionRange(start, end)\n    _inputs[1].focus()\n  }\n}\nconst focusOnInputBox = () => {\n  focus(true, true)\n  nextTick(() => {\n    ignoreFocusEvent = false\n  })\n}\n\nconst onPick = (date: any = '', visible = false) => {\n  if (!visible) {\n    focusOnInputBox()\n  }\n  pickerVisible.value = visible\n  let result\n  if (isArray(date)) {\n    result = date.map((_) => _.toDate())\n  } else {\n    // clear btn emit null\n    result = date ? date.toDate() : date\n  }\n  userInput.value = null\n  emitInput(result)\n}\n\nconst onBeforeShow = () => {\n  pickerActualVisible.value = true\n}\n\nconst onShow = () => {\n  emit('visible-change', true)\n}\n\nconst onKeydownPopperContent = (event: KeyboardEvent) => {\n  if ((event as KeyboardEvent)?.key === EVENT_CODE.esc) {\n    focus(true, true)\n  }\n}\n\nconst onHide = () => {\n  pickerActualVisible.value = false\n  ignoreFocusEvent = false\n  emit('visible-change', false)\n}\n\nconst focus = (focusStartInput = true, isIgnoreFocusEvent = false) => {\n  ignoreFocusEvent = isIgnoreFocusEvent\n  const [leftInput, rightInput] = unref(refInput)\n  let input = leftInput\n  if (!focusStartInput && isRangeInput.value) {\n    input = rightInput\n  }\n  if (input) {\n    input.focus()\n  }\n}\n\nconst handleFocusInput = (e?: FocusEvent) => {\n  if (\n    props.readonly ||\n    pickerDisabled.value ||\n    pickerVisible.value ||\n    ignoreFocusEvent\n  ) {\n    return\n  }\n  pickerVisible.value = true\n  emit('focus', e)\n}\n\nlet currentHandleBlurDeferCallback:\n  | (() => Promise<void> | undefined)\n  | undefined = undefined\n\n// Check if document.activeElement is inside popper or any input before popper close\nconst handleBlurInput = (e?: FocusEvent) => {\n  const handleBlurDefer = async () => {\n    setTimeout(() => {\n      if (currentHandleBlurDeferCallback === handleBlurDefer) {\n        if (\n          !(\n            refPopper.value?.isFocusInsideContent() && !hasJustTabExitedInput\n          ) &&\n          refInput.value.filter((input) => {\n            return input.contains(document.activeElement)\n          }).length === 0\n        ) {\n          handleChange()\n          pickerVisible.value = false\n          emit('blur', e)\n          props.validateEvent &&\n            elFormItem.validate?.('blur').catch((err) => debugWarn(err))\n        }\n        hasJustTabExitedInput = false\n      }\n    }, 0)\n  }\n  currentHandleBlurDeferCallback = handleBlurDefer\n  handleBlurDefer()\n}\n\nconst pickerDisabled = computed(() => {\n  return props.disabled || elForm.disabled\n})\n\nconst parsedValue = computed(() => {\n  let dayOrDays: DayOrDays\n  if (valueIsEmpty.value) {\n    if (pickerOptions.value.getDefaultValue) {\n      dayOrDays = pickerOptions.value.getDefaultValue()\n    }\n  } else {\n    if (isArray(props.modelValue)) {\n      dayOrDays = props.modelValue.map((d) =>\n        parseDate(d, props.valueFormat, lang.value)\n      ) as [Dayjs, Dayjs]\n    } else {\n      dayOrDays = parseDate(props.modelValue, props.valueFormat, lang.value)!\n    }\n  }\n\n  if (pickerOptions.value.getRangeAvailableTime) {\n    const availableResult = pickerOptions.value.getRangeAvailableTime(\n      dayOrDays!\n    )\n    if (!isEqual(availableResult, dayOrDays!)) {\n      dayOrDays = availableResult\n      emitInput(\n        (isArray(dayOrDays)\n          ? dayOrDays.map((_) => _.toDate())\n          : dayOrDays.toDate()) as SingleOrRange<Date>\n      )\n    }\n  }\n  if (isArray(dayOrDays!) && dayOrDays.some((day) => !day)) {\n    dayOrDays = [] as unknown as DayOrDays\n  }\n  return dayOrDays!\n})\n\nconst displayValue = computed<UserInput>(() => {\n  if (!pickerOptions.value.panelReady) return ''\n  const formattedValue = formatDayjsToString(parsedValue.value)\n  if (isArray(userInput.value)) {\n    return [\n      userInput.value[0] || (formattedValue && formattedValue[0]) || '',\n      userInput.value[1] || (formattedValue && formattedValue[1]) || '',\n    ]\n  } else if (userInput.value !== null) {\n    return userInput.value\n  }\n  if (!isTimePicker.value && valueIsEmpty.value) return ''\n  if (!pickerVisible.value && valueIsEmpty.value) return ''\n  if (formattedValue) {\n    return isDatesPicker.value\n      ? (formattedValue as Array<string>).join(', ')\n      : formattedValue\n  }\n  return ''\n})\n\nconst isTimeLikePicker = computed(() => props.type.includes('time'))\n\nconst isTimePicker = computed(() => props.type.startsWith('time'))\n\nconst isDatesPicker = computed(() => props.type === 'dates')\n\nconst triggerIcon = computed(\n  () => props.prefixIcon || (isTimeLikePicker.value ? Clock : Calendar)\n)\n\nconst showClose = ref(false)\n\nconst onClearIconClick = (event: MouseEvent) => {\n  if (props.readonly || pickerDisabled.value) return\n  if (showClose.value) {\n    event.stopPropagation()\n    focusOnInputBox()\n    emitInput(null)\n    emitChange(null, true)\n    showClose.value = false\n    pickerVisible.value = false\n    pickerOptions.value.handleClear && pickerOptions.value.handleClear()\n  }\n}\n\nconst valueIsEmpty = computed(() => {\n  const { modelValue } = props\n  return (\n    !modelValue || (isArray(modelValue) && !modelValue.filter(Boolean).length)\n  )\n})\n\nconst onMouseDownInput = async (event: MouseEvent) => {\n  if (props.readonly || pickerDisabled.value) return\n  if (\n    (event.target as HTMLElement)?.tagName !== 'INPUT' ||\n    refInput.value.includes(document.activeElement as HTMLInputElement)\n  ) {\n    pickerVisible.value = true\n  }\n}\nconst onMouseEnter = () => {\n  if (props.readonly || pickerDisabled.value) return\n  if (!valueIsEmpty.value && props.clearable) {\n    showClose.value = true\n  }\n}\nconst onMouseLeave = () => {\n  showClose.value = false\n}\nconst onTouchStartInput = (event: TouchEvent) => {\n  if (\n    (event.touches[0].target as HTMLElement)?.tagName !== 'INPUT' ||\n    refInput.value.includes(document.activeElement as HTMLInputElement)\n  ) {\n    pickerVisible.value = true\n  }\n}\nconst isRangeInput = computed(() => {\n  return props.type.includes('range')\n})\n\nconst pickerSize = useSize()\n\nconst popperEl = computed(() => unref(refPopper)?.popperRef?.contentRef)\nconst actualInputRef = computed(() => {\n  if (unref(isRangeInput)) {\n    return unref(inputRef)\n  }\n\n  return (unref(inputRef) as ComponentPublicInstance)?.$el\n})\n\nonClickOutside(actualInputRef, (e: PointerEvent) => {\n  const unrefedPopperEl = unref(popperEl)\n  const inputEl = unref(actualInputRef)\n  if (\n    (unrefedPopperEl &&\n      (e.target === unrefedPopperEl ||\n        e.composedPath().includes(unrefedPopperEl))) ||\n    e.target === inputEl ||\n    e.composedPath().includes(inputEl)\n  )\n    return\n  pickerVisible.value = false\n})\n\nconst userInput = ref<UserInput>(null)\n\nconst handleChange = () => {\n  if (userInput.value) {\n    const value = parseUserInputToDayjs(displayValue.value)\n    if (value) {\n      if (isValidValue(value)) {\n        emitInput(\n          (isArray(value)\n            ? value.map((_) => _.toDate())\n            : value.toDate()) as DateOrDates\n        )\n        userInput.value = null\n      }\n    }\n  }\n  if (userInput.value === '') {\n    emitInput(null)\n    emitChange(null)\n    userInput.value = null\n  }\n}\n\nconst parseUserInputToDayjs = (value: UserInput) => {\n  if (!value) return null\n  return pickerOptions.value.parseUserInput!(value)\n}\n\nconst formatDayjsToString = (value: DayOrDays) => {\n  if (!value) return null\n  return pickerOptions.value.formatToString!(value)\n}\n\nconst isValidValue = (value: DayOrDays) => {\n  return pickerOptions.value.isValidValue!(value)\n}\n\nconst handleKeydownInput = async (event: KeyboardEvent) => {\n  if (props.readonly || pickerDisabled.value) return\n\n  const { code } = event\n  emitKeydown(event)\n  if (code === EVENT_CODE.esc) {\n    if (pickerVisible.value === true) {\n      pickerVisible.value = false\n      event.preventDefault()\n      event.stopPropagation()\n    }\n    return\n  }\n\n  if (code === EVENT_CODE.down) {\n    if (pickerOptions.value.handleFocusPicker) {\n      event.preventDefault()\n      event.stopPropagation()\n    }\n    if (pickerVisible.value === false) {\n      pickerVisible.value = true\n      await nextTick()\n    }\n    if (pickerOptions.value.handleFocusPicker) {\n      pickerOptions.value.handleFocusPicker()\n      return\n    }\n  }\n\n  if (code === EVENT_CODE.tab) {\n    hasJustTabExitedInput = true\n    return\n  }\n\n  if (code === EVENT_CODE.enter || code === EVENT_CODE.numpadEnter) {\n    if (\n      userInput.value === null ||\n      userInput.value === '' ||\n      isValidValue(parseUserInputToDayjs(displayValue.value) as DayOrDays)\n    ) {\n      handleChange()\n      pickerVisible.value = false\n    }\n    event.stopPropagation()\n    return\n  }\n\n  // if user is typing, do not let picker handle key input\n  if (userInput.value) {\n    event.stopPropagation()\n    return\n  }\n  if (pickerOptions.value.handleKeydownInput) {\n    pickerOptions.value.handleKeydownInput(event)\n  }\n}\nconst onUserInput = (e: string) => {\n  userInput.value = e\n  // Temporary fix when the picker is dismissed and the input box\n  // is focused, just mimic the behavior of antdesign.\n  if (!pickerVisible.value) {\n    pickerVisible.value = true\n  }\n}\n\nconst handleStartInput = (event: Event) => {\n  const target = event.target as HTMLInputElement\n  if (userInput.value) {\n    userInput.value = [target.value, userInput.value[1]]\n  } else {\n    userInput.value = [target.value, null]\n  }\n}\n\nconst handleEndInput = (event: Event) => {\n  const target = event.target as HTMLInputElement\n  if (userInput.value) {\n    userInput.value = [userInput.value[0], target.value]\n  } else {\n    userInput.value = [null, target.value]\n  }\n}\n\nconst handleStartChange = () => {\n  const values = userInput.value as string[]\n  const value = parseUserInputToDayjs(values && values[0]) as Dayjs\n  const parsedVal = unref(parsedValue) as [Dayjs, Dayjs]\n  if (value && value.isValid()) {\n    userInput.value = [\n      formatDayjsToString(value) as string,\n      displayValue.value?.[1] || null,\n    ]\n    const newValue = [value, parsedVal && (parsedVal[1] || null)] as DayOrDays\n    if (isValidValue(newValue)) {\n      emitInput(newValue)\n      userInput.value = null\n    }\n  }\n}\n\nconst handleEndChange = () => {\n  const values = unref(userInput) as string[]\n  const value = parseUserInputToDayjs(values && values[1]) as Dayjs\n  const parsedVal = unref(parsedValue) as [Dayjs, Dayjs]\n  if (value && value.isValid()) {\n    userInput.value = [\n      unref(displayValue)?.[0] || null,\n      formatDayjsToString(value) as string,\n    ]\n    const newValue = [parsedVal && parsedVal[0], value] as DayOrDays\n    if (isValidValue(newValue)) {\n      emitInput(newValue)\n      userInput.value = null\n    }\n  }\n}\n\nconst pickerOptions = ref<Partial<PickerOptions>>({})\nconst onSetPickerOption = <T extends keyof PickerOptions>(\n  e: [T, PickerOptions[T]]\n) => {\n  pickerOptions.value[e[0]] = e[1]\n  pickerOptions.value.panelReady = true\n}\n\nconst onCalendarChange = (e: [Date, false | Date]) => {\n  emit('calendar-change', e)\n}\n\nconst onPanelChange = (\n  value: [Dayjs, Dayjs],\n  mode: 'month' | 'year',\n  view: unknown\n) => {\n  emit('panel-change', value, mode, view)\n}\n\nprovide('EP_PICKER_BASE', {\n  props,\n})\n\ndefineExpose({\n  /**\n   * @description focus input box.\n   */\n  focus,\n  /**\n   * @description emit focus event\n   */\n  handleFocusInput,\n  /**\n   * @description emit blur event\n   */\n  handleBlurInput,\n  /**\n   * @description pick item manually\n   */\n  onPick,\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}