{"ast":null,"code":"import { withModifiers as _withModifiers, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_draggable_element = _resolveComponent(\"draggable-element\");\n\n  const _component_stencil_preview = _resolveComponent(\"stencil-preview\");\n\n  const _component_draggable_area = _resolveComponent(\"draggable-area\");\n\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"circle-stencil\",\n    style: _normalizeStyle($options.style)\n  }, [_createVNode(_component_draggable_element, {\n    class: \"circle-stencil__handler\",\n    onDrag: $options.onResize,\n    onDragEnd: $options.onResizeEnd\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"img\", {\n      src: $data.img,\n      onMousedown: _cache[0] || (_cache[0] = _withModifiers(() => {}, [\"prevent\"]))\n    }, null, 40\n    /* PROPS, HYDRATE_EVENTS */\n    , _hoisted_1)]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"onDrag\", \"onDragEnd\"]), _createVNode(_component_draggable_area, {\n    onMove: $options.onMove,\n    onMoveEnd: $options.onMoveEnd\n  }, {\n    default: _withCtx(() => [_createVNode(_component_stencil_preview, {\n      class: \"circle-stencil__preview\",\n      image: $props.image,\n      coordinates: $props.coordinates,\n      width: $props.stencilCoordinates.width,\n      height: $props.stencilCoordinates.height,\n      transitions: $props.transitions\n    }, null, 8\n    /* PROPS */\n    , [\"image\", \"coordinates\", \"width\", \"height\", \"transitions\"])]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"onMove\", \"onMoveEnd\"])], 4\n  /* STYLE */\n  );\n}","map":{"version":3,"mappings":";;;;;;;;;uBAsFEA,oBAqBM,KArBN,EAqBM;IApBJC,KAAK,EAAC,gBAoBF;IAnBHC,KAAK,kBAAEC,cAAF;EAmBF,CArBN,GAIEC,aAMoBC,4BANpB,EAMoB;IALlBJ,KAAK,EAAC,yBAKY;IAJjBK,MAAI,EAAEH,iBAIW;IAHjBI,SAAQ,EAAEJ;EAGO,CANpB;sBAKF,MAAmC,CAAnCK,oBAAmC,KAAnC,EAAmC;MAA7BC,GAAG,EAAEC,SAAwB;MAAlBC,WAAS,2CAAV,OAAkB,CAAR,EAAQ,WAAR;IAAS,CAAnC;;IAAA,aAAmC;;;;GALjC;;EAAA,4BAOAP,aASiBQ,yBATjB,EASiB;IATAC,MAAI,EAAEV,eASN;IATeW,SAAQ,EAAEX;EASzB,CATjB;sBACE,MAOE,CAPFC,aAOEW,0BAPF,EAOE;MANAd,KAAK,EAAC,yBAMN;MALLe,KAAK,EAAEC,YAKF;MAJLC,WAAW,EAAED,kBAIR;MAHLE,KAAK,EAAEF,0BAAmBE,KAGrB;MAFLC,MAAM,EAAEH,0BAAmBG,MAEtB;MADLC,WAAW,EAAEJ;IACR,CAPF;;IAAA,6DAOE;;;;GARJ;;EAAA,2BAXF;;EAAA","names":["_createElementBlock","class","style","$options","_createVNode","_component_draggable_element","onDrag","onDragEnd","_createElementVNode","src","$data","onMousedown","_component_draggable_area","onMove","onMoveEnd","_component_stencil_preview","image","$props","coordinates","width","height","transitions"],"sourceRoot":"","sources":["/home/little/Documents/music_web/startproj/zhengdao-ui/src/views/Music/MusicSearch.vue"],"sourcesContent":["<script>\nimport {\n\tDraggableElement,\n\tDraggableArea,\n\tStencilPreview,\n\tResizeEvent\n} from 'vue-advanced-cropper';\n\nexport default {\n\tcomponents: {\n\t\tStencilPreview,\n\t\tDraggableArea,\n\t\tDraggableElement\n\t},\n    data() {\n\t\treturn {\n\t\t\timg: 'https://images.pexels.com/photos/4323307/pexels-photo-4323307.jpeg',\n\t\t};\n\t},\n\tprops: {\n\t\timage: {\n\t\t\ttype: Object\n\t\t},\n\t\tcoordinates: {\n\t\t\ttype: Object,\n\t\t},\n\t\ttransitions: {\n\t\t\ttype: Object,\n\t\t},\n\t\tstencilCoordinates: {\n\t\t\ttype: Object,\n\t\t},\n\t},\n\tcomputed: {\n\t\tstyle() {\n\t\t\tconst { height, width, left, top } = this.stencilCoordinates;\n\t\t\tconst style = {\n\t\t\t\twidth: `${width}px`,\n\t\t\t\theight: `${height}px`,\n\t\t\t\ttransform: `translate(${left}px, ${top}px)`\n\t\t\t};\n\t\t\tif (this.transitions && this.transitions.enabled) {\n\t\t\t\tstyle.transition = `${this.transitions.time}ms ${this.transitions.timingFunction}`;\n\t\t\t}\n\t\t\treturn style;\n\t\t}\n\t},\n\tmethods: {\n\t\tonMove(moveEvent) {\n\t\t\tthis.$emit('move', moveEvent);\n\t\t},\n\t\tonMoveEnd() {\n        \tthis.$emit('move-end');\n        },\n\t\tonResize(dragEvent) {\n\t\t\tconst shift = dragEvent.shift();\n\n\t\t\tconst widthResize = shift.left;\n\t\t\tconst heightResize = -shift.top;\n\n\t\t\tthis.$emit('resize', new ResizeEvent(\n\t\t\t\t{\n\t\t\t\t\tleft: widthResize,\n\t\t\t\t\tright: widthResize,\n\t\t\t\t\ttop: heightResize,\n\t\t\t\t\tbottom: heightResize,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcompensate: true,\n\t\t\t\t},\n\t\t\t));\n\t\t},\n\t\tonResizeEnd() {\n        \tthis.$emit('resize-end');\n        },\n\t\taspectRatios() {\n\t\t\treturn {\n\t\t\t\tminimum: 1,\n\t\t\t\tmaximum: 1\n\t\t\t};\n\t\t}\n\t}\n};\n</script>\n\n<template>\n  <div\n    class=\"circle-stencil\"\n    :style=\"style\"\n  >\n    <draggable-element\n      class=\"circle-stencil__handler\"\n      @drag=\"onResize\"\n      @drag-end=\"onResizeEnd\"\n    >\n\t\t<img :src=\"img\" @mousedown.prevent>\n    </draggable-element>\n    <draggable-area @move=\"onMove\" @move-end=\"onMoveEnd\">\n      <stencil-preview\n        class=\"circle-stencil__preview\"\n\t\t:image=\"image\"\n\t\t:coordinates=\"coordinates\"\n\t\t:width=\"stencilCoordinates.width\"\n\t\t:height=\"stencilCoordinates.height\"\n\t\t:transitions=\"transitions\"\n      />\n    </draggable-area>\n  </div>\n</template>\n\n<style lang=\"scss\">\n.circle-stencil {\n  border-radius: 50%;\n  cursor: move;\n  position: absolute;\n  border: dashed 2px white;\n  box-sizing: border-box;\n  &__handler {\n    position: absolute;\n    right: 15%;\n    top: 14%;\n    z-index: 1;\n    cursor: ne-resize;\n    width: 30px;\n    height: 30px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transform: translate(50%, -50%);\n  }\n  &__preview {\n    border-radius: 50%;\n    overflow: hidden;\n  }\n}\n</style>"]},"metadata":{},"sourceType":"module"}