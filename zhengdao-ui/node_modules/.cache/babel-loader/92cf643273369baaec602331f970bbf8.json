{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport { defineComponent, inject, ref, reactive, computed, watch, nextTick, onMounted, provide, resolveComponent, resolveDirective, openBlock, createBlock, withCtx, withDirectives, createElementBlock, createElementVNode, normalizeClass, createVNode, createCommentVNode, withKeys, createTextVNode, toDisplayString, normalizeStyle, vShow } from 'vue';\nimport { debounce } from 'lodash-unified';\nimport { ElButton } from '../../button/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport '../../../directives/index.mjs';\nimport '../../../tokens/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { ElTooltip } from '../../tooltip/index.mjs';\nimport { ElInput } from '../../input/index.mjs';\nimport '../../../constants/index.mjs';\nimport '../../../utils/index.mjs';\nimport { Close, ArrowDown } from '@element-plus/icons-vue';\nimport AlphaSlider from './components/alpha-slider.mjs';\nimport HueSlider from './components/hue-slider.mjs';\nimport Predefine from './components/predefine.mjs';\nimport SvPanel from './components/sv-panel.mjs';\nimport Color from './color.mjs';\nimport { OPTIONS_KEY } from './useOption.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport ClickOutside from '../../../directives/click-outside/index.mjs';\nimport { isValidComponentSize } from '../../../utils/vue/validator.mjs';\nimport { UPDATE_MODEL_EVENT } from '../../../constants/event.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { formContextKey, formItemContextKey } from '../../../tokens/form.mjs';\nimport { useFormItemInputId } from '../../../hooks/use-form-item/index.mjs';\nimport { useSize } from '../../../hooks/use-common-props/index.mjs';\nimport { debugWarn } from '../../../utils/error.mjs';\n\nvar _sfc_main = defineComponent({\n  name: \"ElColorPicker\",\n  components: {\n    ElButton: ElButton,\n    ElTooltip: ElTooltip,\n    ElInput: ElInput,\n    ElIcon: ElIcon,\n    Close: Close,\n    ArrowDown: ArrowDown,\n    SvPanel: SvPanel,\n    HueSlider: HueSlider,\n    AlphaSlider: AlphaSlider,\n    Predefine: Predefine\n  },\n  directives: {\n    ClickOutside: ClickOutside\n  },\n  props: {\n    modelValue: String,\n    id: String,\n    showAlpha: Boolean,\n    colorFormat: String,\n    disabled: Boolean,\n    size: {\n      type: String,\n      validator: isValidComponentSize\n    },\n    popperClass: String,\n    label: {\n      type: String,\n      \"default\": void 0\n    },\n    tabindex: {\n      type: [String, Number],\n      \"default\": 0\n    },\n    predefine: Array,\n    validateEvent: {\n      type: Boolean,\n      \"default\": true\n    }\n  },\n  emits: [\"change\", \"active-change\", UPDATE_MODEL_EVENT],\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit;\n\n    var _useLocale = useLocale(),\n        t = _useLocale.t;\n\n    var ns = useNamespace(\"color\");\n    var elForm = inject(formContextKey, {});\n    var elFormItem = inject(formItemContextKey, {});\n\n    var _useFormItemInputId = useFormItemInputId(props, {\n      formItemContext: elFormItem\n    }),\n        buttonId = _useFormItemInputId.inputId,\n        isLabeledByFormItem = _useFormItemInputId.isLabeledByFormItem;\n\n    var hue = ref();\n    var svPanel = ref();\n    var alpha = ref();\n    var popper = ref(null);\n    var shouldActiveChange = true;\n    var color = reactive(new Color({\n      enableAlpha: props.showAlpha,\n      format: props.colorFormat || \"\",\n      value: props.modelValue\n    }));\n    var showPicker = ref(false);\n    var showPanelColor = ref(false);\n    var customInput = ref(\"\");\n    var displayedColor = computed(function () {\n      if (!props.modelValue && !showPanelColor.value) {\n        return \"transparent\";\n      }\n\n      return displayedRgb(color, props.showAlpha);\n    });\n    var colorSize = useSize();\n    var colorDisabled = computed(function () {\n      return !!(props.disabled || elForm.disabled);\n    });\n    var currentColor = computed(function () {\n      return !props.modelValue && !showPanelColor.value ? \"\" : color.value;\n    });\n    var buttonAriaLabel = computed(function () {\n      return !isLabeledByFormItem.value ? props.label || t(\"el.colorpicker.defaultLabel\") : void 0;\n    });\n    var buttonAriaLabelledby = computed(function () {\n      return isLabeledByFormItem.value ? elFormItem.labelId : void 0;\n    });\n    watch(function () {\n      return props.modelValue;\n    }, function (newVal) {\n      if (!newVal) {\n        showPanelColor.value = false;\n      } else if (newVal && newVal !== color.value) {\n        shouldActiveChange = false;\n        color.fromString(newVal);\n      }\n    });\n    watch(function () {\n      return currentColor.value;\n    }, function (val) {\n      customInput.value = val;\n      shouldActiveChange && emit(\"active-change\", val);\n      shouldActiveChange = true;\n    });\n    watch(function () {\n      return color.value;\n    }, function () {\n      if (!props.modelValue && !showPanelColor.value) {\n        showPanelColor.value = true;\n      }\n    });\n\n    function displayedRgb(color2, showAlpha) {\n      if (!(color2 instanceof Color)) {\n        throw new TypeError(\"color should be instance of _color Class\");\n      }\n\n      var _color2$toRgb = color2.toRgb(),\n          r = _color2$toRgb.r,\n          g = _color2$toRgb.g,\n          b = _color2$toRgb.b;\n\n      return showAlpha ? \"rgba(\".concat(r, \", \").concat(g, \", \").concat(b, \", \").concat(color2.get(\"alpha\") / 100, \")\") : \"rgb(\".concat(r, \", \").concat(g, \", \").concat(b, \")\");\n    }\n\n    function setShowPicker(value) {\n      showPicker.value = value;\n    }\n\n    var debounceSetShowPicker = debounce(setShowPicker, 100);\n\n    function hide() {\n      debounceSetShowPicker(false);\n      resetColor();\n    }\n\n    function resetColor() {\n      nextTick(function () {\n        if (props.modelValue) {\n          color.fromString(props.modelValue);\n        } else {\n          color.value = \"\";\n          nextTick(function () {\n            showPanelColor.value = false;\n          });\n        }\n      });\n    }\n\n    function handleTrigger() {\n      if (colorDisabled.value) return;\n      debounceSetShowPicker(!showPicker.value);\n    }\n\n    function handleConfirm() {\n      color.fromString(customInput.value);\n    }\n\n    function confirmValue() {\n      var _a;\n\n      var value = color.value;\n      emit(UPDATE_MODEL_EVENT, value);\n      emit(\"change\", value);\n\n      if (props.validateEvent) {\n        (_a = elFormItem.validate) == null ? void 0 : _a.call(elFormItem, \"change\")[\"catch\"](function (err) {\n          return debugWarn(err);\n        });\n      }\n\n      debounceSetShowPicker(false);\n      nextTick(function () {\n        var newColor = new Color({\n          enableAlpha: props.showAlpha,\n          format: props.colorFormat || \"\",\n          value: props.modelValue\n        });\n\n        if (!color.compare(newColor)) {\n          resetColor();\n        }\n      });\n    }\n\n    function clear() {\n      var _a;\n\n      debounceSetShowPicker(false);\n      emit(UPDATE_MODEL_EVENT, null);\n      emit(\"change\", null);\n\n      if (props.modelValue !== null && props.validateEvent) {\n        (_a = elFormItem.validate) == null ? void 0 : _a.call(elFormItem, \"change\")[\"catch\"](function (err) {\n          return debugWarn(err);\n        });\n      }\n\n      resetColor();\n    }\n\n    onMounted(function () {\n      if (props.modelValue) {\n        customInput.value = currentColor.value;\n      }\n    });\n    watch(function () {\n      return showPicker.value;\n    }, function () {\n      nextTick(function () {\n        var _a, _b, _c;\n\n        (_a = hue.value) == null ? void 0 : _a.update();\n        (_b = svPanel.value) == null ? void 0 : _b.update();\n        (_c = alpha.value) == null ? void 0 : _c.update();\n      });\n    });\n    provide(OPTIONS_KEY, {\n      currentColor: currentColor\n    });\n    return {\n      color: color,\n      colorDisabled: colorDisabled,\n      colorSize: colorSize,\n      displayedColor: displayedColor,\n      showPanelColor: showPanelColor,\n      showPicker: showPicker,\n      customInput: customInput,\n      buttonId: buttonId,\n      buttonAriaLabel: buttonAriaLabel,\n      buttonAriaLabelledby: buttonAriaLabelledby,\n      handleConfirm: handleConfirm,\n      hide: hide,\n      handleTrigger: handleTrigger,\n      clear: clear,\n      confirmValue: confirmValue,\n      t: t,\n      ns: ns,\n      hue: hue,\n      svPanel: svPanel,\n      alpha: alpha,\n      popper: popper\n    };\n  }\n});\n\nvar _hoisted_1 = [\"id\", \"aria-label\", \"aria-labelledby\", \"aria-description\", \"tabindex\"];\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_hue_slider = resolveComponent(\"hue-slider\");\n\n  var _component_sv_panel = resolveComponent(\"sv-panel\");\n\n  var _component_alpha_slider = resolveComponent(\"alpha-slider\");\n\n  var _component_predefine = resolveComponent(\"predefine\");\n\n  var _component_el_input = resolveComponent(\"el-input\");\n\n  var _component_el_button = resolveComponent(\"el-button\");\n\n  var _component_arrow_down = resolveComponent(\"arrow-down\");\n\n  var _component_el_icon = resolveComponent(\"el-icon\");\n\n  var _component_close = resolveComponent(\"close\");\n\n  var _component_el_tooltip = resolveComponent(\"el-tooltip\");\n\n  var _directive_click_outside = resolveDirective(\"click-outside\");\n\n  return openBlock(), createBlock(_component_el_tooltip, {\n    ref: \"popper\",\n    visible: _ctx.showPicker,\n    \"show-arrow\": false,\n    \"fallback-placements\": [\"bottom\", \"top\", \"right\", \"left\"],\n    offset: 0,\n    \"gpu-acceleration\": false,\n    \"popper-class\": [_ctx.ns.be(\"picker\", \"panel\"), _ctx.ns.b(\"dropdown\"), _ctx.popperClass],\n    \"stop-popper-mouse-event\": false,\n    effect: \"light\",\n    trigger: \"click\",\n    transition: \"el-zoom-in-top\",\n    persistent: \"\"\n  }, {\n    content: withCtx(function () {\n      return [withDirectives((openBlock(), createElementBlock(\"div\", null, [createElementVNode(\"div\", {\n        \"class\": normalizeClass(_ctx.ns.be(\"dropdown\", \"main-wrapper\"))\n      }, [createVNode(_component_hue_slider, {\n        ref: \"hue\",\n        \"class\": \"hue-slider\",\n        color: _ctx.color,\n        vertical: \"\"\n      }, null, 8, [\"color\"]), createVNode(_component_sv_panel, {\n        ref: \"svPanel\",\n        color: _ctx.color\n      }, null, 8, [\"color\"])], 2), _ctx.showAlpha ? (openBlock(), createBlock(_component_alpha_slider, {\n        key: 0,\n        ref: \"alpha\",\n        color: _ctx.color\n      }, null, 8, [\"color\"])) : createCommentVNode(\"v-if\", true), _ctx.predefine ? (openBlock(), createBlock(_component_predefine, {\n        key: 1,\n        ref: \"predefine\",\n        color: _ctx.color,\n        colors: _ctx.predefine\n      }, null, 8, [\"color\", \"colors\"])) : createCommentVNode(\"v-if\", true), createElementVNode(\"div\", {\n        \"class\": normalizeClass(_ctx.ns.be(\"dropdown\", \"btns\"))\n      }, [createElementVNode(\"span\", {\n        \"class\": normalizeClass(_ctx.ns.be(\"dropdown\", \"value\"))\n      }, [createVNode(_component_el_input, {\n        modelValue: _ctx.customInput,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n          return _ctx.customInput = $event;\n        }),\n        \"validate-event\": false,\n        size: \"small\",\n        onKeyup: withKeys(_ctx.handleConfirm, [\"enter\"]),\n        onBlur: _ctx.handleConfirm\n      }, null, 8, [\"modelValue\", \"onKeyup\", \"onBlur\"])], 2), createVNode(_component_el_button, {\n        \"class\": normalizeClass(_ctx.ns.be(\"dropdown\", \"link-btn\")),\n        text: \"\",\n        size: \"small\",\n        onClick: _ctx.clear\n      }, {\n        \"default\": withCtx(function () {\n          return [createTextVNode(toDisplayString(_ctx.t(\"el.colorpicker.clear\")), 1)];\n        }),\n        _: 1\n      }, 8, [\"class\", \"onClick\"]), createVNode(_component_el_button, {\n        plain: \"\",\n        size: \"small\",\n        \"class\": normalizeClass(_ctx.ns.be(\"dropdown\", \"btn\")),\n        onClick: _ctx.confirmValue\n      }, {\n        \"default\": withCtx(function () {\n          return [createTextVNode(toDisplayString(_ctx.t(\"el.colorpicker.confirm\")), 1)];\n        }),\n        _: 1\n      }, 8, [\"class\", \"onClick\"])], 2)])), [[_directive_click_outside, _ctx.hide]])];\n    }),\n    \"default\": withCtx(function () {\n      return [createElementVNode(\"div\", {\n        id: _ctx.buttonId,\n        \"class\": normalizeClass([_ctx.ns.b(\"picker\"), _ctx.ns.is(\"disabled\", _ctx.colorDisabled), _ctx.ns.bm(\"picker\", _ctx.colorSize)]),\n        role: \"button\",\n        \"aria-label\": _ctx.buttonAriaLabel,\n        \"aria-labelledby\": _ctx.buttonAriaLabelledby,\n        \"aria-description\": _ctx.t(\"el.colorpicker.description\", {\n          color: _ctx.modelValue || \"\"\n        }),\n        tabindex: _ctx.tabindex,\n        onKeydown: _cache[2] || (_cache[2] = withKeys(function () {\n          return _ctx.handleTrigger && _ctx.handleTrigger.apply(_ctx, arguments);\n        }, [\"enter\"]))\n      }, [_ctx.colorDisabled ? (openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        \"class\": normalizeClass(_ctx.ns.be(\"picker\", \"mask\"))\n      }, null, 2)) : createCommentVNode(\"v-if\", true), createElementVNode(\"div\", {\n        \"class\": normalizeClass(_ctx.ns.be(\"picker\", \"trigger\")),\n        onClick: _cache[1] || (_cache[1] = function () {\n          return _ctx.handleTrigger && _ctx.handleTrigger.apply(_ctx, arguments);\n        })\n      }, [createElementVNode(\"span\", {\n        \"class\": normalizeClass([_ctx.ns.be(\"picker\", \"color\"), _ctx.ns.is(\"alpha\", _ctx.showAlpha)])\n      }, [createElementVNode(\"span\", {\n        \"class\": normalizeClass(_ctx.ns.be(\"picker\", \"color-inner\")),\n        style: normalizeStyle({\n          backgroundColor: _ctx.displayedColor\n        })\n      }, [withDirectives(createVNode(_component_el_icon, {\n        \"class\": normalizeClass([_ctx.ns.be(\"picker\", \"icon\"), _ctx.ns.is(\"icon-arrow-down\")])\n      }, {\n        \"default\": withCtx(function () {\n          return [createVNode(_component_arrow_down)];\n        }),\n        _: 1\n      }, 8, [\"class\"]), [[vShow, _ctx.modelValue || _ctx.showPanelColor]]), !_ctx.modelValue && !_ctx.showPanelColor ? (openBlock(), createBlock(_component_el_icon, {\n        key: 0,\n        \"class\": normalizeClass([_ctx.ns.be(\"picker\", \"empty\"), _ctx.ns.is(\"icon-close\")])\n      }, {\n        \"default\": withCtx(function () {\n          return [createVNode(_component_close)];\n        }),\n        _: 1\n      }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true)], 6)], 2)], 2)], 42, _hoisted_1)];\n    }),\n    _: 1\n  }, 8, [\"visible\", \"popper-class\"]);\n}\n\nvar ColorPicker = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/color-picker/src/index.vue\"]]);\n\nexport { ColorPicker as default };","map":{"version":3,"mappings":"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","names":["_sfc_main","defineComponent","name","components","ElButton","ElTooltip","ElInput","ElIcon","Close","ArrowDown","SvPanel","HueSlider","AlphaSlider","Predefine","directives","ClickOutside","props","modelValue","id","showAlpha","colorFormat","disabled","size","type","validator","popperClass","label","tabindex","String","Number","predefine","validateEvent","emits","UPDATE_MODEL_EVENT","setup","emit","useLocale","t","useNamespace","elForm","formContextKey","elFormItem","formItemContextKey","useFormItemInputId","formItemContext","buttonId","inputId","isLabeledByFormItem","hue","ref","svPanel","alpha","shouldActiveChange","reactive","Color","enableAlpha","format","value","computed","showPanelColor","color","colorSize","useSize","labelId","watch","newVal","fromString","currentColor","val","customInput","color2","TypeError","toRgb","r","g","b","get","showPicker","debounce","debounceSetShowPicker","resetColor","nextTick","colorDisabled","onMounted","_b","_c","provide","displayedColor","buttonAriaLabel","buttonAriaLabelledby","handleConfirm","hide","handleTrigger","clear","confirmValue","ns","popper","_component_el_tooltip","_directive_click_outside","_openBlock","visible","offset","effect","trigger","transition","persistent","content","_withDirectives","_normalizeClass","_createVNode","vertical","_ctx","key","_createCommentVNode","colors","_cache","onBlur","text","onClick","_","plain","_withCtx","role","onKeydown","be","_createElementVNode"],"sources":["../../../../../../packages/components/color-picker/src/index.vue"],"sourcesContent":["<template>\n  <el-tooltip\n    ref=\"popper\"\n    :visible=\"showPicker\"\n    :show-arrow=\"false\"\n    :fallback-placements=\"['bottom', 'top', 'right', 'left']\"\n    :offset=\"0\"\n    :gpu-acceleration=\"false\"\n    :popper-class=\"[ns.be('picker', 'panel'), ns.b('dropdown'), popperClass]\"\n    :stop-popper-mouse-event=\"false\"\n    effect=\"light\"\n    trigger=\"click\"\n    transition=\"el-zoom-in-top\"\n    persistent\n  >\n    <template #content>\n      <div v-click-outside=\"hide\">\n        <div :class=\"ns.be('dropdown', 'main-wrapper')\">\n          <hue-slider ref=\"hue\" class=\"hue-slider\" :color=\"color\" vertical />\n          <sv-panel ref=\"svPanel\" :color=\"color\" />\n        </div>\n        <alpha-slider v-if=\"showAlpha\" ref=\"alpha\" :color=\"color\" />\n        <predefine\n          v-if=\"predefine\"\n          ref=\"predefine\"\n          :color=\"color\"\n          :colors=\"predefine\"\n        />\n        <div :class=\"ns.be('dropdown', 'btns')\">\n          <span :class=\"ns.be('dropdown', 'value')\">\n            <el-input\n              v-model=\"customInput\"\n              :validate-event=\"false\"\n              size=\"small\"\n              @keyup.enter=\"handleConfirm\"\n              @blur=\"handleConfirm\"\n            />\n          </span>\n          <el-button\n            :class=\"ns.be('dropdown', 'link-btn')\"\n            text\n            size=\"small\"\n            @click=\"clear\"\n          >\n            {{ t('el.colorpicker.clear') }}\n          </el-button>\n          <el-button\n            plain\n            size=\"small\"\n            :class=\"ns.be('dropdown', 'btn')\"\n            @click=\"confirmValue\"\n          >\n            {{ t('el.colorpicker.confirm') }}\n          </el-button>\n        </div>\n      </div>\n    </template>\n    <template #default>\n      <div\n        :id=\"buttonId\"\n        :class=\"[\n          ns.b('picker'),\n          ns.is('disabled', colorDisabled),\n          ns.bm('picker', colorSize),\n        ]\"\n        role=\"button\"\n        :aria-label=\"buttonAriaLabel\"\n        :aria-labelledby=\"buttonAriaLabelledby\"\n        :aria-description=\"\n          t('el.colorpicker.description', { color: modelValue || '' })\n        \"\n        :tabindex=\"tabindex\"\n        @keydown.enter=\"handleTrigger\"\n      >\n        <div v-if=\"colorDisabled\" :class=\"ns.be('picker', 'mask')\" />\n        <div :class=\"ns.be('picker', 'trigger')\" @click=\"handleTrigger\">\n          <span :class=\"[ns.be('picker', 'color'), ns.is('alpha', showAlpha)]\">\n            <span\n              :class=\"ns.be('picker', 'color-inner')\"\n              :style=\"{\n                backgroundColor: displayedColor,\n              }\"\n            >\n              <el-icon\n                v-show=\"modelValue || showPanelColor\"\n                :class=\"[ns.be('picker', 'icon'), ns.is('icon-arrow-down')]\"\n              >\n                <arrow-down />\n              </el-icon>\n              <el-icon\n                v-if=\"!modelValue && !showPanelColor\"\n                :class=\"[ns.be('picker', 'empty'), ns.is('icon-close')]\"\n              >\n                <close />\n              </el-icon>\n            </span>\n          </span>\n        </div>\n      </div>\n    </template>\n  </el-tooltip>\n</template>\n\n<script lang=\"ts\">\n// @ts-nocheck\nimport {\n  computed,\n  defineComponent,\n  inject,\n  nextTick,\n  onMounted,\n  provide,\n  reactive,\n  ref,\n  watch,\n} from 'vue'\nimport { debounce } from 'lodash-unified'\nimport ElButton from '@element-plus/components/button'\nimport ElIcon from '@element-plus/components/icon'\nimport { ClickOutside } from '@element-plus/directives'\nimport { formContextKey, formItemContextKey } from '@element-plus/tokens'\nimport {\n  useFormItemInputId,\n  useLocale,\n  useNamespace,\n  useSize,\n} from '@element-plus/hooks'\nimport ElTooltip from '@element-plus/components/tooltip'\nimport ElInput from '@element-plus/components/input'\nimport { UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport { debugWarn, isValidComponentSize } from '@element-plus/utils'\nimport { ArrowDown, Close } from '@element-plus/icons-vue'\nimport AlphaSlider from './components/alpha-slider.vue'\nimport HueSlider from './components/hue-slider.vue'\nimport Predefine from './components/predefine.vue'\nimport SvPanel from './components/sv-panel.vue'\nimport Color from './color'\nimport { OPTIONS_KEY } from './useOption'\nimport type { PropType } from 'vue'\nimport type { FormContext, FormItemContext } from '@element-plus/tokens'\nimport type { ComponentSize } from '@element-plus/constants'\nimport type { IUseOptions } from './useOption'\n\nexport default defineComponent({\n  name: 'ElColorPicker',\n  components: {\n    ElButton,\n    ElTooltip,\n    ElInput,\n    ElIcon,\n    Close,\n    ArrowDown,\n    SvPanel,\n    HueSlider,\n    AlphaSlider,\n    Predefine,\n  },\n  directives: {\n    ClickOutside,\n  },\n  props: {\n    modelValue: String,\n    id: String,\n    showAlpha: Boolean,\n    colorFormat: String,\n    disabled: Boolean,\n    size: {\n      type: String as PropType<ComponentSize>,\n      validator: isValidComponentSize,\n    },\n    popperClass: String,\n    label: {\n      type: String,\n      default: undefined,\n    },\n    tabindex: {\n      type: [String, Number],\n      default: 0,\n    },\n    predefine: Array,\n    validateEvent: {\n      type: Boolean,\n      default: true,\n    },\n  },\n  emits: ['change', 'active-change', UPDATE_MODEL_EVENT],\n  setup(props, { emit }) {\n    const { t } = useLocale()\n    const ns = useNamespace('color')\n    const elForm = inject(formContextKey, {} as FormContext)\n    const elFormItem = inject(formItemContextKey, {} as FormItemContext)\n\n    const { inputId: buttonId, isLabeledByFormItem } = useFormItemInputId(\n      props,\n      {\n        formItemContext: elFormItem,\n      }\n    )\n\n    const hue = ref<InstanceType<typeof HueSlider>>()\n    const svPanel = ref<InstanceType<typeof SvPanel>>()\n    const alpha = ref<InstanceType<typeof AlphaSlider>>()\n    const popper = ref(null)\n    // active-change is used to prevent modelValue changes from triggering.\n    let shouldActiveChange = true\n    // data\n    const color = reactive(\n      new Color({\n        enableAlpha: props.showAlpha,\n        format: props.colorFormat || '',\n        value: props.modelValue,\n      })\n    )\n    type ColorType = typeof color\n    const showPicker = ref(false)\n    const showPanelColor = ref(false)\n    const customInput = ref('')\n    // computed\n    const displayedColor = computed(() => {\n      if (!props.modelValue && !showPanelColor.value) {\n        return 'transparent'\n      }\n      return displayedRgb(color, props.showAlpha)\n    })\n    const colorSize = useSize()\n    const colorDisabled = computed(() => {\n      return !!(props.disabled || elForm.disabled)\n    })\n\n    const currentColor = computed(() => {\n      return !props.modelValue && !showPanelColor.value ? '' : color.value\n    })\n    const buttonAriaLabel = computed<string | undefined>(() => {\n      return !isLabeledByFormItem.value\n        ? props.label || t('el.colorpicker.defaultLabel')\n        : undefined\n    })\n    const buttonAriaLabelledby = computed<string | undefined>(() => {\n      return isLabeledByFormItem.value ? elFormItem.labelId : undefined\n    })\n    // watch\n    watch(\n      () => props.modelValue,\n      (newVal) => {\n        if (!newVal) {\n          showPanelColor.value = false\n        } else if (newVal && newVal !== color.value) {\n          shouldActiveChange = false\n          color.fromString(newVal)\n        }\n      }\n    )\n    watch(\n      () => currentColor.value,\n      (val) => {\n        customInput.value = val\n        shouldActiveChange && emit('active-change', val)\n        shouldActiveChange = true\n      }\n    )\n\n    watch(\n      () => color.value,\n      () => {\n        if (!props.modelValue && !showPanelColor.value) {\n          showPanelColor.value = true\n        }\n      }\n    )\n\n    // methods\n    function displayedRgb(color: ColorType, showAlpha: boolean) {\n      if (!(color instanceof Color)) {\n        throw new TypeError('color should be instance of _color Class')\n      }\n\n      const { r, g, b } = color.toRgb()\n      return showAlpha\n        ? `rgba(${r}, ${g}, ${b}, ${color.get('alpha') / 100})`\n        : `rgb(${r}, ${g}, ${b})`\n    }\n\n    function setShowPicker(value: boolean) {\n      showPicker.value = value\n    }\n\n    const debounceSetShowPicker = debounce(setShowPicker, 100)\n\n    function hide() {\n      debounceSetShowPicker(false)\n      resetColor()\n    }\n\n    function resetColor() {\n      nextTick(() => {\n        if (props.modelValue) {\n          color.fromString(props.modelValue)\n        } else {\n          color.value = ''\n          nextTick(() => {\n            showPanelColor.value = false\n          })\n        }\n      })\n    }\n\n    function handleTrigger() {\n      if (colorDisabled.value) return\n      debounceSetShowPicker(!showPicker.value)\n    }\n\n    function handleConfirm() {\n      color.fromString(customInput.value)\n    }\n\n    function confirmValue() {\n      const value = color.value\n      emit(UPDATE_MODEL_EVENT, value)\n      emit('change', value)\n      if (props.validateEvent) {\n        elFormItem.validate?.('change').catch((err) => debugWarn(err))\n      }\n      debounceSetShowPicker(false)\n      // check if modelValue change, if not change, then reset color.\n      nextTick(() => {\n        const newColor = new Color({\n          enableAlpha: props.showAlpha,\n          format: props.colorFormat || '',\n          value: props.modelValue,\n        })\n        if (!color.compare(newColor)) {\n          resetColor()\n        }\n      })\n    }\n\n    function clear() {\n      debounceSetShowPicker(false)\n      emit(UPDATE_MODEL_EVENT, null)\n      emit('change', null)\n      if (props.modelValue !== null && props.validateEvent) {\n        elFormItem.validate?.('change').catch((err) => debugWarn(err))\n      }\n      resetColor()\n    }\n\n    onMounted(() => {\n      if (props.modelValue) {\n        customInput.value = currentColor.value\n      }\n    })\n    watch(\n      () => showPicker.value,\n      () => {\n        nextTick(() => {\n          hue.value?.update()\n          svPanel.value?.update()\n          alpha.value?.update()\n        })\n      }\n    )\n\n    provide<IUseOptions>(OPTIONS_KEY, {\n      currentColor,\n    })\n\n    return {\n      color: color as Color,\n      colorDisabled,\n      colorSize,\n      displayedColor,\n      showPanelColor,\n      showPicker,\n      customInput,\n      buttonId,\n      buttonAriaLabel,\n      buttonAriaLabelledby,\n      handleConfirm,\n      hide,\n      handleTrigger,\n      clear,\n      confirmValue,\n      t,\n      ns,\n      hue,\n      svPanel,\n      alpha,\n      popper,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}