{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport { computed } from 'vue';\n\nfunction useMenu(instance, currentIndex) {\n  var indexPath = computed(function () {\n    var parent = instance.parent;\n    var path = [currentIndex.value];\n\n    while (parent.type.name !== \"ElMenu\") {\n      if (parent.props.index) {\n        path.unshift(parent.props.index);\n      }\n\n      parent = parent.parent;\n    }\n\n    return path;\n  });\n  var parentMenu = computed(function () {\n    var parent = instance.parent;\n\n    while (parent && ![\"ElMenu\", \"ElSubMenu\"].includes(parent.type.name)) {\n      parent = parent.parent;\n    }\n\n    return parent;\n  });\n  return {\n    parentMenu: parentMenu,\n    indexPath: indexPath\n  };\n}\n\nexport { useMenu as default };","map":{"version":3,"mappings":";;;;AACe,SAASA,OAAT,CAAiBC,QAAjB,EAA2BC,YAA3B,EAAyC;EACtD,IAAMC,SAAS,GAAGC,QAAQ,CAAC,YAAM;IAC/B,IAAIC,MAAM,GAAGJ,QAAQ,CAACI,MAAtB;IACA,IAAMC,IAAI,GAAG,CAACJ,YAAY,CAACK,KAAd,CAAb;;IACA,OAAOF,MAAM,CAACG,IAAP,CAAYC,IAAZ,KAAqB,QAA5B,EAAsC;MACpC,IAAIJ,MAAM,CAACK,KAAP,CAAaC,KAAjB,EAAwB;QACtBL,IAAI,CAACM,OAAL,CAAaP,MAAM,CAACK,KAAP,CAAaC,KAA1B;MACD;;MACDN,MAAM,GAAGA,MAAM,CAACA,MAAhB;IACD;;IACD,OAAOC,IAAP;EACD,CAVyB,CAA1B;EAWA,IAAMO,UAAU,GAAGT,QAAQ,CAAC,YAAM;IAChC,IAAIC,MAAM,GAAGJ,QAAQ,CAACI,MAAtB;;IACA,OAAOA,MAAM,IAAI,CAAC,CAAC,QAAD,EAAW,WAAX,EAAwBS,QAAxB,CAAiCT,MAAM,CAACG,IAAP,CAAYC,IAA7C,CAAlB,EAAsE;MACpEJ,MAAM,GAAGA,MAAM,CAACA,MAAhB;IACD;;IACD,OAAOA,MAAP;EACD,CAN0B,CAA3B;EAOA,OAAO;IACLQ,UAAU,EAAVA,UADK;IAELV,SAAS,EAATA;EAFK,CAAP;AAIF","names":["useMenu","instance","currentIndex","indexPath","computed","parent","path","value","type","name","props","index","unshift","parentMenu","includes"],"sources":["../../../../../../packages/components/menu/src/use-menu.ts"],"sourcesContent":["import { computed } from 'vue'\n\nimport type { ComponentInternalInstance, Ref } from 'vue'\n\nexport default function useMenu(\n  instance: ComponentInternalInstance,\n  currentIndex: Ref<string>\n) {\n  const indexPath = computed(() => {\n    let parent = instance.parent!\n    const path = [currentIndex.value]\n    while (parent.type.name !== 'ElMenu') {\n      if (parent.props.index) {\n        path.unshift(parent.props.index as string)\n      }\n      parent = parent.parent!\n    }\n    return path\n  })\n\n  const parentMenu = computed(() => {\n    let parent = instance.parent\n    while (parent && !['ElMenu', 'ElSubMenu'].includes(parent.type.name!)) {\n      parent = parent.parent\n    }\n    return parent!\n  })\n\n  return {\n    parentMenu,\n    indexPath,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}