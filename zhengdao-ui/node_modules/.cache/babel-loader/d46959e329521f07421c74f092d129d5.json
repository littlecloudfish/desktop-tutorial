{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"post\"\n};\nvar _hoisted_2 = {\n  key: 0,\n  \"class\": \"loading\"\n};\nvar _hoisted_3 = {\n  key: 1,\n  \"class\": \"error\"\n};\nvar _hoisted_4 = {\n  key: 2,\n  \"class\": \"content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \"Loading...\")) : _createCommentVNode(\"v-if\", true), $data.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString($data.error), 1\n  /* TEXT */\n  )) : _createCommentVNode(\"v-if\", true), $data.post ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"h2\", null, _toDisplayString($data.post.title), 1\n  /* TEXT */\n  ), _createElementVNode(\"p\", null, _toDisplayString($data.post.body), 1\n  /* TEXT */\n  )])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;EACO,SAAM;;;;EACW,SAAM;;;;EAER,SAAM;;;;EAEP,SAAM;;;uBALzBA,oBASM,KATN,cASM,CAROC,+BAAXD,oBAAoD,KAApD,cAAoC,YAApC,sCAQI,EANOC,6BAAXD,oBAAiD,KAAjD,cAAiDE,iBAAdD,WAAc,CAAjD,EAAwC;EAAA;EAAxC,sCAMI,EAJOA,4BAAXD,oBAGM,KAHN,cAGM,CAFJG,oBAAyB,IAAzB,EAAyB,IAAzB,EAAyBD,iBAAlBD,WAAKG,KAAa,CAAzB,EAAiB;EAAA;EAAjB,CAEI,EADJD,oBAAsB,GAAtB,EAAsB,IAAtB,EAAsBD,iBAAhBD,WAAKI,IAAW,CAAtB,EAAe;EAAA;EAAf,CACI,CAHN,sCAII,CATN","names":["_createElementBlock","$data","_toDisplayString","_createElementVNode","title","body"],"sourceRoot":"","sources":["/home/little/Documents/music_web/startproj/zhengdao-ui/src/views/AboutView.vue"],"sourcesContent":["<template>\n  <div class=\"post\">\n    <div v-if=\"loading\" class=\"loading\">Loading...</div>\n\n    <div v-if=\"error\" class=\"error\">{{ error }}</div>\n\n    <div v-if=\"post\" class=\"content\">\n      <h2>{{ post.title }}</h2>\n      <p>{{ post.body }}</p>\n    </div>\n  </div>\n</template>\n<script>\nexport default {\n  data() {\n    return {\n      loading: false,\n      post: null,\n      error: null,\n    }\n  },\n  created() {\n    // watch the params of the route to fetch the data again\n    this.$watch(\n      () => this.$route.params,\n      () => {\n        this.fetchData()\n      },\n      // fetch the data when the view is created and the data is\n      // already being observed\n      { immediate: true }\n    )\n  },\n  methods: {\n    fetchData() {\n      this.error = this.post = null\n      this.loading = true\n      // replace `getPost` with your data fetching util / API wrapper\n      getPost(this.$route.params.id, (err, post) => {\n        this.loading = false\n        if (err) {\n          this.error = err.toString()\n        } else {\n          this.post = post\n        }\n      })\n    },\n  },\n}\n</script>"]},"metadata":{},"sourceType":"module"}