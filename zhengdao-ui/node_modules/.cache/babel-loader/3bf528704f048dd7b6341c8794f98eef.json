{"ast":null,"code":"import _createForOfIteratorHelper from \"/home/little/Documents/music_web/backandfrontsep/zhengdao-ui/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport { inject, provide } from 'vue';\n\nfunction useNodeExpandEventBroadcast(props) {\n  var parentNodeMap = inject(\"TreeNodeMap\", null);\n  var currentNodeMap = {\n    treeNodeExpand: function treeNodeExpand(node) {\n      if (props.node !== node) {\n        props.node.collapse();\n      }\n    },\n    children: []\n  };\n\n  if (parentNodeMap) {\n    parentNodeMap.children.push(currentNodeMap);\n  }\n\n  provide(\"TreeNodeMap\", currentNodeMap);\n  return {\n    broadcastExpanded: function broadcastExpanded(node) {\n      if (!props.accordion) return;\n\n      var _iterator = _createForOfIteratorHelper(currentNodeMap.children),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var childNode = _step.value;\n          childNode.treeNodeExpand(node);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  };\n}\n\nexport { useNodeExpandEventBroadcast };","map":{"version":3,"mappings":";;;AACO,SAASA,2BAAT,CAAqCC,KAArC,EAA4C;EACjD,IAAMC,aAAa,GAAGC,MAAM,CAAC,aAAD,EAAgB,IAAhB,CAA5B;EACA,IAAMC,cAAc,GAAG;IACrBC,cAAc,EAAE,wBAACC,IAAD,EAAU;MACxB,IAAIL,KAAK,CAACK,IAAN,KAAeA,IAAnB,EAAyB;QACvBL,KAAK,CAACK,IAAN,CAAWC,QAAX;MACD;IACF,CALoB;IAMrBC,QAAQ,EAAE;EANW,CAAvB;;EAQA,IAAIN,aAAJ,EAAmB;IACjBA,aAAa,CAACM,QAAd,CAAuBC,IAAvB,CAA4BL,cAA5B;EACD;;EACDM,OAAO,CAAC,aAAD,EAAgBN,cAAhB,CAAP;EACA,OAAO;IACLO,iBAAiB,EAAE,2BAACL,IAAD,EAAU;MAC3B,IAAI,CAACL,KAAK,CAACW,SAAX,EACE;;MAFyB,2CAGHR,cAAc,CAACI,QAHZ;MAAA;;MAAA;QAG3B,oDAAiD;UAAA,IAAtCK,SAAsC;UAC/CA,SAAS,CAACR,cAAV,CAAyBC,IAAzB;QACD;MAL0B;QAAA;MAAA;QAAA;MAAA;IAM5B;EAPI,CAAP;AASF","names":["useNodeExpandEventBroadcast","props","parentNodeMap","inject","currentNodeMap","treeNodeExpand","node","collapse","children","push","provide","broadcastExpanded","accordion","childNode"],"sources":["../../../../../../../packages/components/tree/src/model/useNodeExpandEventBroadcast.ts"],"sourcesContent":["// @ts-nocheck\nimport { inject, provide } from 'vue'\nimport type Node from '../model/node'\n\ninterface NodeMap {\n  treeNodeExpand(node: Node): void\n  children: NodeMap[]\n}\n\nexport function useNodeExpandEventBroadcast(props) {\n  const parentNodeMap = inject<NodeMap>('TreeNodeMap', null)\n  const currentNodeMap: NodeMap = {\n    treeNodeExpand: (node) => {\n      if (props.node !== node) {\n        props.node.collapse()\n      }\n    },\n    children: [],\n  }\n\n  if (parentNodeMap) {\n    parentNodeMap.children.push(currentNodeMap)\n  }\n\n  provide('TreeNodeMap', currentNodeMap)\n\n  return {\n    broadcastExpanded: (node: Node): void => {\n      if (!props.accordion) return\n      for (const childNode of currentNodeMap.children) {\n        childNode.treeNodeExpand(node)\n      }\n    },\n  }\n}\n"]},"metadata":{},"sourceType":"module"}