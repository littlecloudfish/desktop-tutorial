{"ast":null,"code":"import '../../../hooks/index.mjs';\nimport '../../../utils/index.mjs';\nimport { Loading } from '@element-plus/icons-vue';\nimport { buildProps } from '../../../utils/vue/props/runtime.mjs';\nimport { useSizeProp } from '../../../hooks/use-common-props/index.mjs';\nimport { iconPropType } from '../../../utils/vue/icon.mjs';\nvar buttonTypes = [\"default\", \"primary\", \"success\", \"warning\", \"info\", \"danger\", \"text\", \"\"];\nvar buttonNativeTypes = [\"button\", \"submit\", \"reset\"];\nvar buttonProps = buildProps({\n  size: useSizeProp,\n  disabled: Boolean,\n  type: {\n    type: String,\n    values: buttonTypes,\n    \"default\": \"\"\n  },\n  icon: {\n    type: iconPropType,\n    \"default\": \"\"\n  },\n  nativeType: {\n    type: String,\n    values: buttonNativeTypes,\n    \"default\": \"button\"\n  },\n  loading: Boolean,\n  loadingIcon: {\n    type: iconPropType,\n    \"default\": function _default() {\n      return Loading;\n    }\n  },\n  plain: Boolean,\n  text: Boolean,\n  link: Boolean,\n  bg: Boolean,\n  autofocus: Boolean,\n  round: Boolean,\n  circle: Boolean,\n  color: String,\n  dark: Boolean,\n  autoInsertSpace: {\n    type: Boolean,\n    \"default\": void 0\n  }\n});\nvar buttonEmits = {\n  click: function click(evt) {\n    return evt instanceof MouseEvent;\n  }\n};\nexport { buttonEmits, buttonNativeTypes, buttonProps, buttonTypes };","map":{"version":3,"mappings":";;;;;;AAGY,IAACA,WAAW,GAAG,CACzB,SADyB,EAEzB,SAFyB,EAGzB,SAHyB,EAIzB,SAJyB,EAKzB,MALyB,EAMzB,QANyB,EAOzB,MAPyB,EAQzB,EARyB,CAAf;AAUA,IAACC,iBAAiB,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,OAArB,CAArB;AACA,IAACC,WAAW,GAAGC,UAAU,CAAC;EACpCC,IAAI,EAAEC,WAD8B;EAEpCC,QAAQ,EAAEC,OAF0B;EAGpCC,IAAI,EAAE;IACJA,IAAI,EAAEC,MADF;IAEJC,MAAM,EAAEV,WAFJ;IAGJ,WAAS;EAHL,CAH8B;EAQpCW,IAAI,EAAE;IACJH,IAAI,EAAEI,YADF;IAEJ,WAAS;EAFL,CAR8B;EAYpCC,UAAU,EAAE;IACVL,IAAI,EAAEC,MADI;IAEVC,MAAM,EAAET,iBAFE;IAGV,WAAS;EAHC,CAZwB;EAiBpCa,OAAO,EAAEP,OAjB2B;EAkBpCQ,WAAW,EAAE;IACXP,IAAI,EAAEI,YADK;IAEX,WAAS;MAAA,OAAMI,OAAN;IAAA;EAFE,CAlBuB;EAsBpCC,KAAK,EAAEV,OAtB6B;EAuBpCW,IAAI,EAAEX,OAvB8B;EAwBpCY,IAAI,EAAEZ,OAxB8B;EAyBpCa,EAAE,EAAEb,OAzBgC;EA0BpCc,SAAS,EAAEd,OA1ByB;EA2BpCe,KAAK,EAAEf,OA3B6B;EA4BpCgB,MAAM,EAAEhB,OA5B4B;EA6BpCiB,KAAK,EAAEf,MA7B6B;EA8BpCgB,IAAI,EAAElB,OA9B8B;EA+BpCmB,eAAe,EAAE;IACflB,IAAI,EAAED,OADS;IAEf,WAAS,KAAK;EAFC;AA/BmB,CAAD,CAAzB;AAoCA,IAACoB,WAAW,GAAG;EACzBC,KAAK,EAAE,eAACC,GAAD;IAAA,OAASA,GAAG,YAAYC,UAAxB;EAAA;AADkB,CAAf","names":["buttonTypes","buttonNativeTypes","buttonProps","buildProps","size","useSizeProp","disabled","Boolean","type","String","values","icon","iconPropType","nativeType","loading","loadingIcon","Loading","plain","text","link","bg","autofocus","round","circle","color","dark","autoInsertSpace","buttonEmits","click","evt","MouseEvent"],"sources":["../../../../../../packages/components/button/src/button.ts"],"sourcesContent":["import { useSizeProp } from '@element-plus/hooks'\nimport { buildProps, iconPropType } from '@element-plus/utils'\nimport { Loading } from '@element-plus/icons-vue'\nimport type { ExtractPropTypes } from 'vue'\nimport type button from './button.vue'\n\nexport const buttonTypes = [\n  'default',\n  'primary',\n  'success',\n  'warning',\n  'info',\n  'danger',\n  /**\n   * @deprecated\n   * Text type will be deprecated in the next major version (3.0.0)\n   */\n  'text',\n  '',\n] as const\nexport const buttonNativeTypes = ['button', 'submit', 'reset'] as const\n\nexport const buttonProps = buildProps({\n  size: useSizeProp,\n  disabled: Boolean,\n  type: {\n    type: String,\n    values: buttonTypes,\n    default: '',\n  },\n  icon: {\n    type: iconPropType,\n    default: '',\n  },\n  nativeType: {\n    type: String,\n    values: buttonNativeTypes,\n    default: 'button',\n  },\n  loading: Boolean,\n  loadingIcon: {\n    type: iconPropType,\n    default: () => Loading,\n  },\n  plain: Boolean,\n  text: Boolean,\n  link: Boolean,\n  bg: Boolean,\n  autofocus: Boolean,\n  round: Boolean,\n  circle: Boolean,\n  color: String,\n  dark: Boolean,\n  autoInsertSpace: {\n    type: Boolean,\n    default: undefined,\n  },\n} as const)\nexport const buttonEmits = {\n  click: (evt: MouseEvent) => evt instanceof MouseEvent,\n}\n\nexport type ButtonProps = ExtractPropTypes<typeof buttonProps>\nexport type ButtonEmits = typeof buttonEmits\n\nexport type ButtonType = ButtonProps['type']\nexport type ButtonNativeType = ButtonProps['nativeType']\n\nexport type ButtonInstance = InstanceType<typeof button>\n\nexport interface ButtonConfigContext {\n  autoInsertSpace?: boolean\n}\n"]},"metadata":{},"sourceType":"module"}