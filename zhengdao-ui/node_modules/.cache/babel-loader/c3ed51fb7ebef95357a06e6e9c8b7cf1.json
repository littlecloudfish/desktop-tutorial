{"ast":null,"code":"import _defineProperty from \"/home/little/Documents/music_web/startproj/zhengdao-ui/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nvar _calendarEmits;\n\nimport \"core-js/modules/es.array.every.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport '../../../utils/index.mjs';\nimport '../../../constants/index.mjs';\nimport { isArray, isDate } from '@vue/shared';\nimport { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';\nimport { UPDATE_MODEL_EVENT, INPUT_EVENT } from '../../../constants/event.mjs';\n\nvar isValidRange = function isValidRange(range) {\n  return isArray(range) && range.length === 2 && range.every(function (item) {\n    return isDate(item);\n  });\n};\n\nvar calendarProps = buildProps({\n  modelValue: {\n    type: Date\n  },\n  range: {\n    type: definePropType(Array),\n    validator: isValidRange\n  }\n});\nvar calendarEmits = (_calendarEmits = {}, _defineProperty(_calendarEmits, UPDATE_MODEL_EVENT, function (value) {\n  return isDate(value);\n}), _defineProperty(_calendarEmits, INPUT_EVENT, function (value) {\n  return isDate(value);\n}), _calendarEmits);\nexport { calendarEmits, calendarProps };","map":{"version":3,"mappings":";;;;;;;;;;;;;AAOA,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD;EAAA,OAAWC,OAAO,CAACD,KAAD,CAAP,IAAkBA,KAAK,CAACE,MAAN,KAAiB,CAAnC,IAAwCF,KAAK,CAACG,KAAN,CAAY,UAACC,IAAD;IAAA,OAAUC,MAAM,CAACD,IAAD,CAAhB;EAAA,CAAZ,CAAnD;AAAA,CAArB;;AACY,IAACE,aAAa,GAAGC,UAAU,CAAC;EACtCC,UAAU,EAAE;IACVC,IAAI,EAAEC;EADI,CAD0B;EAItCV,KAAK,EAAE;IACLS,IAAI,EAAEE,cAAc,CAACC,KAAD,CADf;IAELC,SAAS,EAAEd;EAFN;AAJ+B,CAAD,CAA3B;AASA,IAACe,aAAa,yDACvBC,kBADuB,EACF,UAACC,KAAD;EAAA,OAAWX,MAAM,CAACW,KAAD,CAAjB;AAAA,CADE,mCAEvBC,WAFuB,EAET,UAACD,KAAD;EAAA,OAAWX,MAAM,CAACW,KAAD,CAAjB;AAAA,CAFS,kBAAd","names":["isValidRange","range","isArray","length","every","item","isDate","calendarProps","buildProps","modelValue","type","Date","definePropType","Array","validator","calendarEmits","UPDATE_MODEL_EVENT","value","INPUT_EVENT"],"sources":["../../../../../../packages/components/calendar/src/calendar.ts"],"sourcesContent":["import {\n  buildProps,\n  definePropType,\n  isArray,\n  isDate,\n} from '@element-plus/utils'\nimport { INPUT_EVENT, UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport type { ExtractPropTypes } from 'vue'\nimport type Calendar from './calendar.vue'\n\nexport type CalendarDateType =\n  | 'prev-month'\n  | 'next-month'\n  | 'prev-year'\n  | 'next-year'\n  | 'today'\n\nconst isValidRange = (range: unknown): range is [Date, Date] =>\n  isArray(range) && range.length === 2 && range.every((item) => isDate(item))\n\nexport const calendarProps = buildProps({\n  modelValue: {\n    type: Date,\n  },\n  range: {\n    type: definePropType<[Date, Date]>(Array),\n    validator: isValidRange,\n  },\n} as const)\nexport type CalendarProps = ExtractPropTypes<typeof calendarProps>\n\nexport const calendarEmits = {\n  [UPDATE_MODEL_EVENT]: (value: Date) => isDate(value),\n  [INPUT_EVENT]: (value: Date) => isDate(value),\n}\nexport type CalendarEmits = typeof calendarEmits\n\nexport type CalendarInstance = InstanceType<typeof Calendar>\n"]},"metadata":{},"sourceType":"module"}