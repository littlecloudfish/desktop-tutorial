{"ast":null,"code":"import { getAngle as t, radianToAngle as n, getVLength as e, getDirection as o } from \"@any-touch/vector\";\nimport { TYPE_START as r, TYPE_MOVE as i, CLIENT_X as a, CLIENT_Y as c, round2 as u, COMPUTE_INTERVAL as s } from \"@any-touch/shared\";\n\nfunction p() {\n  var n = 0,\n      e = 0;\n  return function (o, r) {\n    var i = r.prevVecotr,\n        a = r.startVecotr,\n        c = r.activeVecotr;\n    return c && (e = Math.round(t(c, i)), n = Math.round(t(c, a))), {\n      angle: n,\n      deltaAngle: e\n    };\n  };\n}\n\nfunction d() {\n  return function (t) {\n    var e = t.prevInput;\n    var o = 0,\n        r = 0,\n        i = 0;\n\n    if (void 0 !== e && (o = t.x - e.x, r = t.y - e.y, 0 !== o || 0 !== r)) {\n      var _t = Math.sqrt(Math.pow(o, 2) + Math.pow(r, 2));\n\n      i = Math.round(n(Math.acos(Math.abs(o) / _t)));\n    }\n\n    return {\n      deltaX: o,\n      deltaY: r,\n      deltaXYAngle: i\n    };\n  };\n}\n\nfunction h() {\n  var t,\n      n = 0,\n      u = 0,\n      s = 0,\n      p = 0,\n      d = 0;\n  return function (h) {\n    var l = h.phase,\n        f = h.startInput;\n    return r === l ? (n = 0, u = 0, s = 0, p = 0, d = 0) : i === l && (n = Math.round(h.points[0][a] - f.points[0][a]), u = Math.round(h.points[0][c] - f.points[0][c]), s = Math.abs(n), p = Math.abs(u), d = Math.round(e({\n      x: s,\n      y: p\n    })), t = o(n, u)), {\n      displacementX: n,\n      displacementY: u,\n      distanceX: s,\n      distanceY: p,\n      distance: d,\n      overallDirection: t\n    };\n  };\n}\n\nfunction l() {\n  var t = 1;\n  return function (n, o) {\n    var r = 1;\n    var i = o.prevVecotr,\n        a = o.startVecotr,\n        c = o.activeVecotr;\n    return c && (r = u(e(c) / e(i)), t = u(e(c) / e(a))), {\n      scale: t,\n      deltaScale: r\n    };\n  };\n}\n\nfunction f() {\n  var t,\n      n,\n      e = 0,\n      r = 0,\n      i = 0,\n      a = 0;\n  return function (c) {\n    if (void 0 !== c) {\n      n = n || c.startInput;\n\n      var _u = c.timestamp - n.timestamp;\n\n      if (s < _u) {\n        var _s = c.x - n.x,\n            _p = c.y - n.y;\n\n        i = Math.round(_s / _u * 100) / 100, a = Math.round(_p / _u * 100) / 100, e = Math.abs(i), r = Math.abs(a), t = o(_s, _p), n = c;\n      }\n    }\n\n    return {\n      velocityX: e,\n      velocityY: r,\n      speedX: i,\n      speedY: a,\n      direction: t\n    };\n  };\n}\n\nfunction M() {\n  var t = 0;\n  return function (n) {\n    var e = n.phase;\n    return r === e && (t = n.pointLength), {\n      maxPointLength: t\n    };\n  };\n}\n\nfunction v(t) {\n  return {\n    x: t.points[1][a] - t.points[0][a],\n    y: t.points[1][c] - t.points[0][c]\n  };\n}\n\nfunction m() {\n  var t, n, e;\n  return function (o) {\n    var r = o.prevInput,\n        i = o.startMultiInput;\n    return void 0 !== i && void 0 !== r && o.id !== i.id && 1 < r.pointLength && 1 < o.pointLength ? (t = v(i), n = v(r), e = v(o)) : e = void 0, {\n      startVecotr: t,\n      prevVecotr: n,\n      activeVecotr: e\n    };\n  };\n}\n\nexport { p as ComputeAngle, d as ComputeDeltaXY, h as ComputeDistance, M as ComputeMaxLength, l as ComputeScale, f as ComputeVAndDir, m as ComputeVectorForMutli };","map":{"version":3,"mappings":"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","names":["ComputeAngle","angle","deltaAngle","input","computed","prevVecotr","startVecotr","activeVecotr","Math","round","getAngle","prevInput","deltaX","deltaY","deltaXYAngle","x","y","deltaXY","sqrt","pow","radianToAngle","acos","abs","overallDirection","displacementX","displacementY","distanceX","distanceY","distance","phase","startInput","TYPE_START","TYPE_MOVE","points","CLIENT_X","CLIENT_Y","getVLength","getDirection","scale","deltaScale","round2","direction","lastValidInput","velocityX","velocityY","speedX","speedY","deltaTime","timestamp","COMPUTE_INTERVAL","ComputeMaxLength","maxPointLength","pointLength","computeVector","startMultiInput","id"],"sources":["../../../../packages/compute/src/ComputeAngle.ts","../../../../packages/compute/src/ComputeDeltaXY.ts","../../../../packages/compute/src/ComputeDistance.ts","../../../../packages/compute/src/ComputeScale.ts","../../../../packages/compute/src/ComputeVAndDir.ts","../../../../packages/compute/src/ComputeMaxLength.ts","../../../../packages/compute/src/ComputeVectorForMutli.ts"],"sourcesContent":[null,null,null,null,null,null,null]},"metadata":{},"sourceType":"module"}