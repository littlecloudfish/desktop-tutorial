{"ast":null,"code":"import \"core-js/modules/es.number.parse-int.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport { isRef, watch, onScopeDispose } from 'vue';\nimport { computed } from '@vue/reactivity';\nimport { isClient } from '@vueuse/core';\nimport '../../utils/index.mjs';\nimport { useNamespace } from '../use-namespace/index.mjs';\nimport { throwError } from '../../utils/error.mjs';\nimport { hasClass, removeClass, getStyle, addClass } from '../../utils/dom/style.mjs';\nimport { getScrollBarWidth } from '../../utils/dom/scroll.mjs';\n\nvar useLockscreen = function useLockscreen(trigger) {\n  if (!isRef(trigger)) {\n    throwError(\"[useLockscreen]\", \"You need to pass a ref param to this function\");\n  }\n\n  var ns = useNamespace(\"popup\");\n  var hiddenCls = computed(function () {\n    return ns.bm(\"parent\", \"hidden\");\n  });\n\n  if (!isClient || hasClass(document.body, hiddenCls.value)) {\n    return;\n  }\n\n  var scrollBarWidth = 0;\n  var withoutHiddenClass = false;\n  var bodyPaddingRight = \"0\";\n  var computedBodyPaddingRight = 0;\n\n  var cleanup = function cleanup() {\n    removeClass(document.body, hiddenCls.value);\n\n    if (withoutHiddenClass) {\n      document.body.style.paddingRight = bodyPaddingRight;\n    }\n  };\n\n  watch(trigger, function (val) {\n    if (!val) {\n      cleanup();\n      return;\n    }\n\n    withoutHiddenClass = !hasClass(document.body, hiddenCls.value);\n\n    if (withoutHiddenClass) {\n      bodyPaddingRight = document.body.style.paddingRight;\n      computedBodyPaddingRight = Number.parseInt(getStyle(document.body, \"paddingRight\"), 10);\n    }\n\n    scrollBarWidth = getScrollBarWidth(ns.namespace.value);\n    var bodyHasOverflow = document.documentElement.clientHeight < document.body.scrollHeight;\n    var bodyOverflowY = getStyle(document.body, \"overflowY\");\n\n    if (scrollBarWidth > 0 && (bodyHasOverflow || bodyOverflowY === \"scroll\") && withoutHiddenClass) {\n      document.body.style.paddingRight = \"\".concat(computedBodyPaddingRight + scrollBarWidth, \"px\");\n    }\n\n    addClass(document.body, hiddenCls.value);\n  });\n  onScopeDispose(function () {\n    return cleanup();\n  });\n};\n\nexport { useLockscreen };","map":{"version":3,"mappings":";;;;;;;;;;;AAYY,IAACA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,OAAD,EAAa;EACxC,IAAI,CAACC,KAAK,CAACD,OAAD,CAAV,EAAqB;IACnBE,UAAU,CAAC,iBAAD,EAAoB,+CAApB,CAAV;EACD;;EACD,IAAMC,EAAE,GAAGC,YAAY,CAAC,OAAD,CAAvB;EACA,IAAMC,SAAS,GAAGC,QAAQ,CAAC;IAAA,OAAMH,EAAE,CAACI,EAAH,CAAM,QAAN,EAAgB,QAAhB,CAAN;EAAA,CAAD,CAA1B;;EACA,IAAI,CAACC,QAAD,IAAaC,QAAQ,CAACC,QAAQ,CAACC,IAAV,EAAgBN,SAAS,CAACO,KAA1B,CAAzB,EAA2D;IACzD;EACD;;EACD,IAAIC,cAAc,GAAG,CAArB;EACA,IAAIC,kBAAkB,GAAG,KAAzB;EACA,IAAIC,gBAAgB,GAAG,GAAvB;EACA,IAAIC,wBAAwB,GAAG,CAA/B;;EACA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;IACpBC,WAAW,CAACR,QAAQ,CAACC,IAAV,EAAgBN,SAAS,CAACO,KAA1B,CAAX;;IACA,IAAIE,kBAAJ,EAAwB;MACtBJ,QAAQ,CAACC,IAAT,CAAcQ,KAAd,CAAoBC,YAApB,GAAmCL,gBAAnC;IACD;EACF,CALD;;EAMAM,KAAK,CAACrB,OAAD,EAAU,UAACsB,GAAD,EAAS;IACtB,IAAI,CAACA,GAAL,EAAU;MACRL,OAAO;MACP;IACD;;IACDH,kBAAkB,GAAG,CAACL,QAAQ,CAACC,QAAQ,CAACC,IAAV,EAAgBN,SAAS,CAACO,KAA1B,CAA9B;;IACA,IAAIE,kBAAJ,EAAwB;MACtBC,gBAAgB,GAAGL,QAAQ,CAACC,IAAT,CAAcQ,KAAd,CAAoBC,YAAvC;MACAJ,wBAAwB,GAAGO,MAAM,CAACC,QAAP,CAAgBC,QAAQ,CAACf,QAAQ,CAACC,IAAV,EAAgB,cAAhB,CAAxB,EAAyD,EAAzD,CAA3B;IACD;;IACDE,cAAc,GAAGa,iBAAiB,CAACvB,EAAE,CAACwB,SAAH,CAAaf,KAAd,CAAlC;IACA,IAAMgB,eAAe,GAAGlB,QAAQ,CAACmB,eAAT,CAAyBC,YAAzB,GAAwCpB,QAAQ,CAACC,IAAT,CAAcoB,YAA9E;IACA,IAAMC,aAAa,GAAGP,QAAQ,CAACf,QAAQ,CAACC,IAAV,EAAgB,WAAhB,CAA9B;;IACA,IAAIE,cAAc,GAAG,CAAjB,KAAuBe,eAAe,IAAII,aAAa,KAAK,QAA5D,KAAyElB,kBAA7E,EAAiG;MAC/FJ,QAAQ,CAACC,IAAT,CAAcQ,KAAd,CAAoBC,YAApB,aAAsCJ,wBAAwB,GAAGH,cAAjE;IACD;;IACDoB,QAAQ,CAACvB,QAAQ,CAACC,IAAV,EAAgBN,SAAS,CAACO,KAA1B,CAAR;EACD,CAjBI,CAAL;EAkBAsB,cAAc,CAAC;IAAA,OAAMjB,OAAO,EAAb;EAAA,CAAD,CAAd;AACF,CAtCY","names":["useLockscreen","trigger","isRef","throwError","ns","useNamespace","hiddenCls","computed","bm","isClient","hasClass","document","body","value","scrollBarWidth","withoutHiddenClass","bodyPaddingRight","computedBodyPaddingRight","cleanup","removeClass","style","paddingRight","watch","val","Number","parseInt","getStyle","getScrollBarWidth","namespace","bodyHasOverflow","documentElement","clientHeight","scrollHeight","bodyOverflowY","addClass","onScopeDispose"],"sources":["../../../../../packages/hooks/use-lockscreen/index.ts"],"sourcesContent":["import { isRef, onScopeDispose, watch } from 'vue'\n\nimport { computed } from '@vue/reactivity'\nimport { isClient } from '@vueuse/core'\nimport {\n  addClass,\n  getScrollBarWidth,\n  getStyle,\n  hasClass,\n  removeClass,\n  throwError,\n} from '@element-plus/utils'\nimport { useNamespace } from '../use-namespace'\n\nimport type { Ref } from 'vue'\n\n/**\n * Hook that monitoring the ref value to lock or unlock the screen.\n * When the trigger became true, it assumes modal is now opened and vice versa.\n * @param trigger {Ref<boolean>}\n */\nexport const useLockscreen = (trigger: Ref<boolean>) => {\n  if (!isRef(trigger)) {\n    throwError(\n      '[useLockscreen]',\n      'You need to pass a ref param to this function'\n    )\n  }\n\n  const ns = useNamespace('popup')\n\n  const hiddenCls = computed(() => ns.bm('parent', 'hidden'))\n\n  if (!isClient || hasClass(document.body, hiddenCls.value)) {\n    return\n  }\n\n  let scrollBarWidth = 0\n  let withoutHiddenClass = false\n  let bodyPaddingRight = '0'\n  let computedBodyPaddingRight = 0\n\n  const cleanup = () => {\n    removeClass(document.body, hiddenCls.value)\n    if (withoutHiddenClass) {\n      document.body.style.paddingRight = bodyPaddingRight\n    }\n  }\n  watch(trigger, (val) => {\n    if (!val) {\n      cleanup()\n      return\n    }\n\n    withoutHiddenClass = !hasClass(document.body, hiddenCls.value)\n    if (withoutHiddenClass) {\n      bodyPaddingRight = document.body.style.paddingRight\n      computedBodyPaddingRight = Number.parseInt(\n        getStyle(document.body, 'paddingRight'),\n        10\n      )\n    }\n    scrollBarWidth = getScrollBarWidth(ns.namespace.value)\n    const bodyHasOverflow =\n      document.documentElement.clientHeight < document.body.scrollHeight\n    const bodyOverflowY = getStyle(document.body, 'overflowY')\n    if (\n      scrollBarWidth > 0 &&\n      (bodyHasOverflow || bodyOverflowY === 'scroll') &&\n      withoutHiddenClass\n    ) {\n      document.body.style.paddingRight = `${\n        computedBodyPaddingRight + scrollBarWidth\n      }px`\n    }\n    addClass(document.body, hiddenCls.value)\n  })\n  onScopeDispose(() => cleanup())\n}\n"]},"metadata":{},"sourceType":"module"}