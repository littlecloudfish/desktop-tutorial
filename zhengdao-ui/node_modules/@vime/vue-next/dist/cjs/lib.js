"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.render = exports.method = exports.define = void 0;
var vue_1 = require("vue");
function define(tagName, clazz) {
    var isClient = typeof window !== 'undefined';
    if (isClient && !customElements.get(tagName))
        customElements.define(tagName, clazz);
}
exports.define = define;
function method(name) {
    return function proxy() {
        var _a;
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return (_a = this.$refs.ref)[name].apply(_a, args);
    };
}
exports.method = method;
function listen(node, event, handler) {
    node.addEventListener(event, handler);
    return function () {
        node.removeEventListener(event, handler);
    };
}
function render(tagName, events) {
    return function proxy() {
        var _this = this;
        var _a, _b;
        var dispose = [];
        var forwardEvent = function (event) { return function ($event) {
            var detail = $event.detail;
            _this.$emit(event, detail);
        }; };
        return (0, vue_1.h)(tagName, __assign(__assign({ ref: 'ref' }, this.$props), { onVnodeMounted: function (vnode) {
                events.forEach(function (event) {
                    dispose.push(listen(vnode.el, event, forwardEvent(event)));
                });
            }, onVnodeBeforeUnmount: function () {
                dispose.forEach(function (fn) { return fn(); });
                dispose = [];
            } }), (_b = (_a = this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a));
    };
}
exports.render = render;
//# sourceMappingURL=lib.js.map